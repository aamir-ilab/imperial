{"version":3,"sources":["webpack:///src/app/services/auth.service.ts"],"names":["USERS_URL","authURL","AuthService","http","snackBar","progressSource","currenctUser","JSON","parse","localStorage","getItem","res","setItem","stringify","setCurrentUser","AllUser","setAllUser","AllJob","setAllJob","currentScrumboard","setCurrentScrumboard","clientJob","setClientJob","currentParent","setCurrentParent","workerJobInfo","setCurrentWorkerJob","email","password","post","pipe","err","user","str","linesR","userToken","authTokenKey","type","handleError","toPromise","response","getAllUsers","console","log","getAllJobs","id","_id","operation","result","error","accountType","status","clientId","file","formData","FormData","append","req","reportProgress","request","event","getEventMessage","envelope","processProgress","next","Sent","name","size","UploadProgress","Math","round","loaded","total","Response","_user","httpHeaders","set","headers","_job","open","duration","horizontalPosition","tId","wId","img","flag","obj","arr","token","providedIn"],"mappings":"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","file":"default~admin-admin-calendar-admin-calendar-module~admin-admin-calendar-admin-job-admin-job-module~a~e21558e8-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpHeaders, HttpRequest, HttpEvent, HttpEventType } from '@angular/common/http';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\nimport { User } from '../models/user.model';\nimport { find } from 'lodash';\nimport { map, catchError, tap, last } from 'rxjs/operators';\nimport { Job } from '../client/clients-dashboard/client-job-table/interfaces/job.model';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Invoice } from '../models/invoice.model';\n\nconst USERS_URL = environment.authURL;\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public progressSource = new BehaviorSubject<number>(0);\n  public loggedInType ;\n  currenctUser :User;\n  AllUser:User[];\n  AllJob:Job[];\n  currentScrumboard:any;\n  currentJob:any;\n  currentParent:User;\n  workerJobInfo:any;\n  adminInfo:any;\n  clientJob:any;\n   constructor(private http:HttpClient,\n    private snackBar:MatSnackBar) {\n\n    }\n    \n    setCurrentUser(){\n      this.currenctUser = JSON.parse(localStorage.getItem('userInfo'));\n    }\n    setCurrentUserLocal(res){\n      localStorage.setItem('userInfo', JSON.stringify(res));\n      this.setCurrentUser();\n    }\n    setAllUser(){\n      this.AllUser = JSON.parse(localStorage.getItem('allUserInfo'));\n    }\n    setAllUsersLocal(res){\n      localStorage.setItem('allUserInfo', JSON.stringify(res));\n      this.setAllUser();\n    }\n    setAllJob(){\n      this.AllJob = JSON.parse(localStorage.getItem('allJobInfo'));\n    }\n    setAllJobsLocal(res){\n      localStorage.setItem('allJobInfo', JSON.stringify(res));\n      this.setAllJob();\n    }\n    setCurrentScrumboard(){\n      this.currentScrumboard = JSON.parse(localStorage.getItem('scrumboardInfo'));\n    }\n    setCurrentScrumboardLocal(res){\n      localStorage.setItem('scrumboardInfo', JSON.stringify(res));\n      this.setCurrentScrumboard();\n    }\n    setClientJob(){\n      this.clientJob = JSON.parse(localStorage.getItem('clientJobInfo'));\n    }\n    setClientJobLocal(res){\n      localStorage.setItem('clientJobInfo', JSON.stringify(res));\n      this.setClientJob();\n    }\n    \n    setCurrentParent(){\n      this.currentParent = JSON.parse(localStorage.getItem('parentInfo'))\n    }\n    setCurrentParentLocal(res){\n      localStorage.setItem('parentInfo', JSON.stringify(res));\n      this.setCurrentParent();\n    }\n    setCurrentWorkerJob(){\n      this.workerJobInfo = JSON.parse(localStorage.getItem('WorkerJobInfo'))\n    }\n    setCurrentWorkerJobLocal(res){\n      localStorage.setItem('WorkerJobInfo', JSON.stringify(res));\n      this.setCurrentWorkerJob();\n    }\n  login(email:string, password:string):Observable<any>{\n    return this.http.post<User>(`${USERS_URL}login`,{'emailAddress':email, 'hash':password}).pipe(\n      map((res:User) =>{\n        return res;\n      }),\n      catchError(err=>{\n        return null;\n      })\n    )\n  }\n\n  // public uploadProfile(formData){\n  //   return this.http.post<any>(USERS_URL, formData, {\n  //     reportProgress:true,\n  //     observe:'events'\n  //   });\n  // }\n  addJob(user:any,str):Observable<any>{\n    // if(type != 'other')\n    //   user['accountType'] = type;\n    // const httpHeaders = new HttpHeaders();\n    // httpHeaders.set('Content-Type', 'application/json');\n    user['clientId'] = str;\n    return this.http.post<Job>(`${USERS_URL}job/register`, user).pipe(\n      map((res:Job) =>{\n        return res;\n      }),\n      catchError(err=>{\n        return null;\n      })\n    )\n  }\n  getExpertTimesheets():Observable<any>{\n    return this.http.post<any>(`${USERS_URL}getExpertTimesheets`,{});\n  }\n  getImportPayroll(linesR:any):Observable<any>{\n    return this.http.post<any>(`${USERS_URL}getImportPayroll`,{linesR:linesR});\n  }\n  getAllPayroll():Observable<any>{\n    return this.http.post<any>(`${USERS_URL}getAllPayroll`,{});\n  }\n  getGenerateWorkerID():Observable<any>{\n    return this.http.post<any>(`${USERS_URL}getGenerateWorkerID`,{});\n  }\n  getUserByToken():Observable<User>{\n    const userToken = localStorage.getItem(environment.authTokenKey);\n    if(!userToken){\n      return of(null);\n    }\n    // return this.getAllUsers().pipe(\n    //   map((result:User[])=>{\n    //     if(result.length <= 0){\n    //       return null;\n    //     }\n    //     const user = find(result, (item:User) =>{\n    //       return (item.accessToken === userToken.toString());\n    //     });\n    //     if(!user){\n    //       return null;\n    //     }\n    //     user.hash = undefined;\n    //     return user;\n    //   })\n    // )\n  }\n  register(user:any, type = 'other'):Observable<any>{\n    if(type != 'other')\n      user['accountType'] = type;\n    // const httpHeaders = new HttpHeaders();\n    // httpHeaders.set('Content-Type', 'application/json');\n    return this.http.post<User>(`${USERS_URL}register`, user).pipe(\n      map((res:User) =>{\n        return res;\n      }),\n      catchError(err=>{\n        return null;\n      })\n    )\n  }\n  public requestPassword(email:string):Observable<any>{\n    return this.http.post(`${USERS_URL}` + 'forgot/' + email, {})\n      .pipe(catchError(this.handleError('forgot-password', [])));\n  }\n  // getAllUsers():Observable<User[]>{\n  //   return this.http.post<User[]>(`${USERS_URL}getAll`,{});\n  // }\n  async getAllUsers(): Promise<User[]> {\n    try {\n      let response = await this.http\n        .post(`${USERS_URL}getAll`,{})\n        .toPromise();\n      return response as User[];\n    } catch (error) {\n      await this.handleError(error);\n    }\n  }\n  async getAllUserAuth(): Promise<void>{\n    // this.getAllUsers().subscribe((res)=>{\n    //   this.AllUser = res;\n    //   this.setAllUsersLocal(this.AllUser);\n    //   console.log(res)\n    // })\n    this.AllUser = await this.getAllUsers();\n    console.log(this.AllUser)\n    console.log('3232323')\n  }\n  async getAllJobAuth(){\n    // await this.getAllJobs().subscribe((res)=>{\n    //   this.AllJob = res;\n    //   this.setAllJobsLocal(this.AllJob);\n    //   console.log(res)\n    // })\n    this.AllJob = await this.getAllJobs();\n    console.log(this.AllJob)\n    console.log('3232321212')\n  }\n  async getAllJobs():Promise<Job[]>{\n    return await this.http.post<Job[]>(`${USERS_URL}job/getAllJob`,{}).toPromise();\n  }\n   getAllJobsSync():Observable<Job[]>{\n    return  this.http.post<Job[]>(`${USERS_URL}job/getAllJob`,{});\n  }\n  getParent(id):Observable<User>{\n    return this.http.post<User>(`${USERS_URL}getParent`,{_id:id});\n  }\n  getWorkerJob(id):Observable<Job[]>{\n    return this.http.post<Job[]>(`${USERS_URL}getWorkerJob`,{_id:id});\n\n  }\n  private handleError<T>(operation = 'operation', result?:any){\n    return (error:any):Observable<any> =>{\n      console.error(error);\n      return of(result);\n    }\n  }\n  getTypeJobs():Observable<Job[]>{\n    return this.http.post<Job[]>(`${USERS_URL}job/getAllType`,{});\n  }\n  getAllInvoices():Observable<Invoice[]>{\n    return this.http.post<Invoice[]>(`${USERS_URL}getAllInvoices`,{});\n\n  }\n  getSelectedJobs():Observable<Job[]>{\n    return this.http.post<Job[]>(`${USERS_URL}job/getAll`,{});\n  }\n  getTypeUsers(type):Observable<User[]>{\n    return this.http.post<User[]>(`${USERS_URL}getAllType`,{accountType:type});\n  }\n  getTimesheets(type):Observable<any[]>{\n    return this.http.post<any[]>(`${USERS_URL}getFindTimesheets`,{status:type});\n  }\n  getTypeSubUsers(id):Observable<User[]>{\n    return this.http.post<User[]>(`${USERS_URL}getAllSubType`,{clientId:id});\n  }\n\n  getClientJob(id):Observable<Job[]>{\n    return this.http.post<Job[]>(`${USERS_URL}getClientJob`,{_id:id});\n  }\n  upload(file: File) {\n    let formData = new FormData();\n    formData.append(\"avatar\", file);\n\n    const req = new HttpRequest(\n      \"POST\",\n      \"http://localhost:5000/upload\",\n      formData,\n      {\n        reportProgress: true\n      }\n    );\n\n    return this.http.request(req).pipe(\n      map(event => this.getEventMessage(event, file)),\n      tap((envelope: any) => this.processProgress(envelope)),\n      last()\n    );\n  }\n\n  processProgress(envelope: any): void {\n    if (typeof envelope === \"number\") {\n      this.progressSource.next(envelope);\n    }\n  }\n\n  private getEventMessage(event: HttpEvent<any>, file: File) {\n    switch (event.type) {\n      case HttpEventType.Sent:\n        return `Uploading file \"${file.name}\" of size ${file.size}.`;\n      case HttpEventType.UploadProgress:\n        return Math.round((100 * event.loaded) / event.total);\n      case HttpEventType.Response:\n        return `File \"${file.name}\" was completely uploaded!`;\n      default:\n        return `File \"${file.name}\" surprising upload event: ${event.type}.`;\n    }\n  }\n  updateUser(_user: any): Observable<any> {\n    const httpHeaders = new HttpHeaders();\n    httpHeaders.set('Content-Type', 'application/json');\n        //   return this.http.put(API_USERS_URL, _user, { headers: httpHeaders });\n        console.log('... auth update user ..')\n        console.log(_user)\n        console.log('----------------')\n        return this.http.post(`${USERS_URL}profile`, _user, { headers: httpHeaders });\n  }\n  updateJob(_job:any): Observable<any> {\n        console.log('... auth update user ..')\n        console.log(_job)\n        console.log('----------------')\n        return this.http.post(`${USERS_URL}updatejob`, _job);\n  }\n  openSnackbar(str) {\n    this.snackBar.open(str, 'CLOSE', {\n      duration: 3000,\n      horizontalPosition: 'center'\n    });\n  }\n  setWorkerJob(id, tId,wId, img, name, flag): Observable<any> {\n    return this.http.post<any>(`${USERS_URL}addWorkerJob`, {id:id, tId:tId,wId:wId,img:img,name:name, flag:flag});\n  }\n  setStatusJob(id, status):Observable<any>{\n    return this.http.post<any>(`${USERS_URL}setStatusJob`, {id:id,status:status});\n  }\n  setStatusTimesheet(id, status):Observable<any>{\n    return this.http.post<any>(`${USERS_URL}setStatusTimesheet`, {id:id,status:status});\n  }\n  setJobWorkers(str:any[], id):Observable<any>{\n    return this.http.post<any>(`${USERS_URL}setJobWorkers`, {str:str, id:id});\n\n  }\n  deleteUser(obj:any, type):Observable<any>{\n    obj['accountType'] = type;\n    return this.http.post<any>(`${USERS_URL}removeUser`, obj);\n  }\n  deleteJob(obj:any):Observable<any>{\n    return this.http.post<any>(`${USERS_URL}removeJob`, obj);\n  }\n  cancelJob(obj, str):Observable<any>{\n    return this.http.post<any>(`${USERS_URL}canceljob`, {id:obj.id, str:str});\n  }\n  sendMsg(obj):Observable<any>{\n    return this.http.post<any>(`${USERS_URL}sendmsg`, obj);\n  }\n  addInvoice(obj):Observable<any>{\n    return this.http.post<any>(`${USERS_URL}invoiceregister`, obj);\n  }\n  updateInvoice(obj):Observable<any>{\n    return this.http.post<any>(`${USERS_URL}invoice/profile`, obj);\n  }\n  removeTimesheetsJob(obj):Observable<any>{\n    return this.http.post<any>(`${USERS_URL}removeTimesheetsJob`, {arr:obj});\n  }\n  sendEmail(obj):Observable<any>{\n    return this.http.post<any>(`${USERS_URL}client/verify/email`, obj);\n  }\n  resetPassword(obj):Observable<any>{\n    return this.http.post<any>(`${USERS_URL}resetpassword`, obj);\n  }\n  emailVerify(token):Observable<any>{\n    return this.http.post<any>(`${USERS_URL}setVerify`, token);\n  }\n}\n"]}