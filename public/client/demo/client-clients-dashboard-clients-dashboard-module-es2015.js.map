{"version":3,"sources":["./node_modules/@iconify/icons-ic/twotone-add.js","./node_modules/@iconify/icons-ic/twotone-edit.js","./node_modules/@iconify/icons-ic/twotone-filter-list.js","./node_modules/@iconify/icons-ic/twotone-folder.js","./node_modules/@iconify/icons-ic/twotone-mail.js","./node_modules/@iconify/icons-ic/twotone-map.js","./src/@vex/animations/fade-in-up.animation.ts","./src/@vex/animations/stagger.animation.ts","./src/app/client/clients-dashboard/client-job-table/client-job-table.component.ts","./src/app/client/clients-dashboard/client-job-table/client-job-table.component.html","./src/app/client/clients-dashboard/client-job-table/customer-create-update/customer-create-update.component.ts","./src/app/client/clients-dashboard/client-job-table/customer-create-update/customer-create-update.component.html","./src/app/client/clients-dashboard/clients-dashboard-routing.module.ts","./src/app/client/clients-dashboard/clients-dashboard.component.ts","./src/app/client/clients-dashboard/clients-dashboard.component.html","./src/app/client/clients-dashboard/clients-dashboard.module.ts"],"names":[],"mappings":"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","file":"client-clients-dashboard-clients-dashboard-module-es2015.js","sourcesContent":["var data = {\n\t\"body\": \"<path d=\\\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M5 18.08V19h.92l9.06-9.06l-.92-.92z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M20.71 7.04a.996.996 0 0 0 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29s-.51.1-.7.29l-1.83 1.83l3.75 3.75l1.83-1.83zM3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM5.92 19H5v-.92l9.06-9.06l.92.92L5.92 19z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path d=\\\"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M11.17 8l-.58-.59L9.17 6H4v12h16V8h-8z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 12H4V6h5.17l1.41 1.41l.59.59H20v10z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M20 6H4l8 4.99zM4 8v10h16V8l-8 5z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 2l-8 4.99L4 6h16zm0 12H4V8l8 5l8-5v10z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M5 18.31l3-1.16V5.45L5 6.46zm11 .24l3-1.01V5.69l-3 1.17z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M20.5 3l-.16.03L15 5.1L9 3L3.36 4.9c-.21.07-.36.25-.36.48V20.5c0 .28.22.5.5.5l.16-.03L9 18.9l6 2.1l5.64-1.9c.21-.07.36-.25.36-.48V3.5c0-.28-.22-.5-.5-.5zM8 17.15l-3 1.16V6.46l3-1.01v11.7zm6 1.38l-4-1.4V5.47l4 1.4v11.66zm5-.99l-3 1.01V6.86l3-1.16v11.84z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import { animate, style, transition, trigger } from '@angular/animations';\r\n\r\nexport function fadeInUpAnimation(duration: number) {\r\n  return trigger('fadeInUp', [\r\n    transition(':enter', [\r\n      style({\r\n        transform: 'translateY(20px)',\r\n        opacity: 0\r\n      }),\r\n      animate(`${duration}ms cubic-bezier(0.35, 0, 0.25, 1)`, style({\r\n        transform: 'translateY(0)',\r\n        opacity: 1\r\n      }))\r\n    ])\r\n  ]);\r\n}\r\n\r\nexport const fadeInUp400ms = fadeInUpAnimation(400);\r\n","import { animateChild, query, stagger, transition, trigger } from '@angular/animations';\r\n\r\nexport function staggerAnimation(timing: number) {\r\n  return trigger('stagger', [\r\n    transition('* => *', [ // each time the binding value changes\r\n      query(':enter', stagger(timing, animateChild()), { optional: true }),\r\n    ])\r\n  ]);\r\n}\r\n\r\nexport const stagger80ms = staggerAnimation(80);\r\nexport const stagger60ms = staggerAnimation(60);\r\nexport const stagger40ms = staggerAnimation(40);\r\nexport const stagger20ms = staggerAnimation(20);\r\n","import { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { Observable, of, ReplaySubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TableColumn } from '../../../../@vex/interfaces/table-column.interface';\nimport { aioTableData, aioTableLabels } from '../../../../static-data/aio-table-data';\nimport { CustomerCreateUpdateComponent } from './customer-create-update/customer-create-update.component';\nimport icEdit from '@iconify/icons-ic/twotone-edit';\nimport icDelete from '@iconify/icons-ic/twotone-delete';\nimport icSearch from '@iconify/icons-ic/twotone-search';\nimport icAdd from '@iconify/icons-ic/twotone-add';\nimport icFilterList from '@iconify/icons-ic/twotone-filter-list';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport icMoreHoriz from '@iconify/icons-ic/twotone-more-horiz';\nimport icFolder from '@iconify/icons-ic/twotone-folder';\nimport { fadeInUp400ms } from '../../../../@vex/animations/fade-in-up.animation';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldDefaultOptions } from '@angular/material/form-field';\nimport { stagger40ms } from '../../../../@vex/animations/stagger.animation';\nimport { FormControl } from '@angular/forms';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { MatSelectChange } from '@angular/material/select';\nimport icPhone from '@iconify/icons-ic/twotone-phone';\nimport icMail from '@iconify/icons-ic/twotone-mail';\nimport icMap from '@iconify/icons-ic/twotone-map';\nimport { Customer } from 'src/app/pages/apps/aio-table/interfaces/customer.model';\nimport { statusTableLabels, statusTableData } from 'src/static-data/status-table-data';\nimport { Job } from './interfaces/job.model';\nimport { AuthService } from 'src/app/services/auth.service';\n@Component({\n  selector: 'vex-client-job-table',\n  templateUrl: './client-job-table.component.html',\n  styleUrls: ['./client-job-table.component.scss'],\n  animations: [\n    fadeInUp400ms,\n    stagger40ms\n  ],\n  providers: [\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: {\n        appearance: 'standard'\n      } as MatFormFieldDefaultOptions\n    }\n  ]\n})\nexport class ClientJobTableComponent implements OnInit {\n\n  layoutCtrl = new FormControl('boxed');\n\n  /**\n   * Simulating a service with HTTP that returns Observables\n   * You probably want to remove this and do all requests in a service with HTTP\n   */\n  subject$: ReplaySubject<Job[]> = new ReplaySubject<Job[]>(1);\n  data$: Observable<Job[]> = this.subject$.asObservable();\n  customers: Job[];\n\n  @Input()\n  columns: TableColumn<Job>[] = [\n    // { label: 'Checkbox', property: 'checkbox', type: 'checkbox', visible: true },\n    { label: 'Client', property: 'client', type: 'text', visible: true, cssClasses: ['font-medium'] },\n    { label: 'Department', property: 'department', type: 'text', visible: true },\n    { label: 'Role', property: 'role', type: 'text', visible: false },\n    { label: 'Shift Date', property: 'shiftDateStr', type: 'text', visible: true },\n    { label: 'Start Time', property: 'startTime', type: 'text', visible: true },\n    { label: 'End Time', property: 'endTime', type: 'text', visible: true },\n    { label: 'Total Staff', property:'totalStaff', type:'text', visible:true},\n    { label: 'Status', property: 'status', type: 'button', visible: true },\n    { label: 'ID', property: '_id', type: 'text', visible: false },\n    // { label: 'Actions', property: 'actions', type: 'button', visible: true }\n  ];\n  pageSize = 10;\n  pageSizeOptions: number[] = [5, 10, 20, 50];\n  dataSource: MatTableDataSource<Job> | null;\n  selection = new SelectionModel<Job>(true, []);\n  // searchCtrl = new FormControl();\n\n  statuss = statusTableLabels;\n\n  icPhone = icPhone;\n  icMail = icMail;\n  icMap = icMap;\n  icEdit = icEdit;\n  icSearch = icSearch;\n  icDelete = icDelete;\n  icAdd = icAdd;\n  icFilterList = icFilterList;\n  icMoreHoriz = icMoreHoriz;\n  icFolder = icFolder;\n  currentUser;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  constructor(private dialog: MatDialog,\n    private authService:AuthService) {\n      if(!this.authService.currenctUser)\n       this.authService.setCurrentUser();\n      this.currentUser = this.authService.currenctUser;\n  }\n\n  get visibleColumns() {\n    return this.columns.filter(column => column.visible).map(column => column.property);\n  }\n  \n  /**\n   * Example on how to get data and pass it to the table - usually you would want a dedicated service with a HTTP request for this\n   * We are simulating this request here.\n   */\n  getData() {\n    this.authService.getTypeJobs().subscribe((clients)=>{\n      of(clients.map(client =>new Job(client))).subscribe(clientes =>{\n        console.log('123213123')  \n        console.log(clientes)  \n        this.subject$.next(clientes)\n      });\n    })\n    // return of(statusTableData.map(customer => new Job(customer)));\n  }\n\n  ngOnInit() {\n    if(!this.authService.currenctUser)\n    this.authService.setCurrentUser();\n    this.currentUser = this.authService.currenctUser;\n    this.getData();\n\n    this.dataSource = new MatTableDataSource();\n\n    this.data$.pipe(\n      filter<Job[]>(Boolean)\n    ).subscribe(customers => {\n      this.customers = customers;\n      this.dataSource.data = customers;\n    });\n\n    // this.searchCtrl.valueChanges.pipe(\n    //   untilDestroyed(this)\n    // ).subscribe(value => this.onFilterChange(value));\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  createCustomer() {\n    this.dialog.open(CustomerCreateUpdateComponent).afterClosed().subscribe((customer: Job) => {\n      /**\n       * Customer is the updated customer (if the user pressed Save - otherwise it's null)\n       */\n      if (customer) {\n        /**\n         * Here we are updating our local array.\n         * You would probably make an HTTP request here.\n         */\n        this.authService.addJob(customer, this.authService.currenctUser._id).subscribe((res)=>{\n          console.log('1')\n          this.authService.openSnackbar('New Job Added!');\n          var tempJob = new Job(customer);\n          var obj = {\n            subject : \"New job request from \" + this.currentUser['firstName'] + ' '+ this.currentUser['lastName'],\n            name : this.currentUser['firstName'] + ' '+ this.currentUser['lastName'],\n            email: 'fujingforward@gmail.com',\n            content1: `${this.currentUser['firstName']} ${this.currentUser['lastName']} has posted a new job on the portal for ${tempJob.shiftDateStr} looking for ${tempJob.total}workers.`,\n            content2: `You can review the applications by logging into the Portal.`,\n            btn:'LOGIN TO PORTAL',\n            btn_link:'http://imperial-recruitment.herokuapp.com/#/login',\n            link:''\n          };\n          this.authService.sendEmail(obj).subscribe((sendemail_res)=>{\n              console.log('crate job email')\n          })\n        })\n        customer['']\n        this.customers.unshift(new Job(customer));\n        this.subject$.next(this.customers);\n      }\n    });\n  }\n\n  updateCustomer(customer: Customer) {\n    this.dialog.open(CustomerCreateUpdateComponent, {\n      data: customer\n    }).afterClosed().subscribe(updatedCustomer => {\n      /**\n       * Customer is the updated customer (if the user pressed Save - otherwise it's null)\n       */\n      if (updatedCustomer) {\n        /**\n         * Here we are updating our local array.\n         * You would probably make an HTTP request here.\n         */\n        const index = this.customers.findIndex((existingCustomer) => existingCustomer.id === updatedCustomer.id);\n        this.customers[index] = new Job(updatedCustomer);\n        this.subject$.next(this.customers);\n      }\n    });\n  }\n\n  deleteCustomer(customer: Job) {\n    /**\n     * Here we are updating our local array.\n     * You would probably make an HTTP request here.\n     */\n    this.customers.splice(this.customers.findIndex((existingCustomer) => existingCustomer.id === customer.id), 1);\n    this.selection.deselect(customer);\n    this.subject$.next(this.customers);\n  }\n\n  deleteCustomers(customers: Job[]) {\n    /**\n     * Here we are updating our local array.\n     * You would probably make an HTTP request here.\n     */\n    customers.forEach(c => this.deleteCustomer(c));\n  }\n\n  onFilterChange(value: string) {\n    if (!this.dataSource) {\n      return;\n    }\n    value = value.trim();\n    value = value.toLowerCase();\n    this.dataSource.filter = value;\n  }\n\n  toggleColumnVisibility(column, event) {\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    column.visible = !column.visible;\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  trackByProperty<T>(index: number, column: TableColumn<T>) {\n    return column.property;\n  }\n\n  onLabelChange(change: MatSelectChange, row: Job) {\n    // const index = this.customers.findIndex(c => c === row);\n    // this.customers[index].status = change.value;\n    // this.subject$.next(this.customers);\n  }\n\n}\n","<div class=\"card overflow-auto -mt-16\">\n    <div class=\"bg-app-bar px-6 h-16 border-b sticky left-0\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n      <h2 class=\"title my-0 ltr:pr-4 rtl:pl-4 ltr:mr-4 rtl:ml-4 ltr:border-r rtl:border-l\" fxFlex=\"none\" fxHide.xs>\n        <span *ngIf=\"selection.isEmpty()\">Job List</span>\n        <span *ngIf=\"selection.hasValue()\">{{ selection.selected.length }}\n          Job<span *ngIf=\"selection.selected.length > 1\">s</span> selected</span>\n      </h2>\n\n      <div *ngIf=\"selection.hasValue()\" class=\"mr-4 pr-4 border-r\" fxFlex=\"none\">\n        <button (click)=\"deleteCustomers(selection.selected)\"\n                color=\"primary\"\n                mat-icon-button\n                matTooltip=\"Delete selected\"\n                type=\"button\">\n          <mat-icon [icIcon]=\"icDelete\"></mat-icon>\n        </button>\n\n        <button color=\"primary\" mat-icon-button matTooltip=\"Another action\" type=\"button\">\n          <mat-icon [icIcon]=\"icFolder\"></mat-icon>\n        </button>\n      </div>\n\n       <!-- <div class=\"bg-card rounded-full border px-4\"\n           fxFlex=\"400px\"\n           fxFlex.lt-md=\"auto\"\n           fxHide.xs\n           fxLayout=\"row\"\n           fxLayoutAlign=\"start center\">\n        <ic-icon [icIcon]=\"icSearch\" size=\"20px\"></ic-icon>\n       <input [formControl]=\"searchCtrl\"\n               class=\"px-4 py-3 border-0 outline-none w-full bg-transparent\"\n               placeholder=\"Search...\"\n               type=\"search\">\n      </div> -->\n\n      <span fxFlex></span>\n\n      <button class=\"ml-4\" fxFlex=\"none\" fxHide.gt-xs mat-icon-button type=\"button\">\n        <mat-icon [icIcon]=\"icSearch\"></mat-icon>\n      </button>\n\n      <button [matMenuTriggerFor]=\"columnFilterMenu\"\n              class=\"ml-4\"\n              fxFlex=\"none\"\n              mat-icon-button\n              matTooltip=\"Filter Columns\"\n              type=\"button\">\n        <mat-icon [icIcon]=\"icFilterList\"></mat-icon>\n      </button>\n\n      <button *ngIf=\"currentUser['clientType'] != 'User'\"(click)=\"createCustomer()\"\n              class=\"ml-4\"\n              color=\"primary\"\n              fxFlex=\"none\"\n              mat-mini-fab\n              matTooltip=\"Add Job\"\n              type=\"button\">\n        <mat-icon [icIcon]=\"icAdd\"></mat-icon>\n      </button>\n    </div>\n\n    <table @stagger [dataSource]=\"dataSource\" class=\"w-full\" mat-table matSort>\n\n      <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n\n      <!-- Checkbox Column -->\n      <!-- <ng-container matColumnDef=\"checkbox\">\n        <th *matHeaderCellDef mat-header-cell>\n          <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                        color=\"primary\">\n          </mat-checkbox>\n        </th>\n        <td *matCellDef=\"let row\" class=\"w-4\" mat-cell>\n          <mat-checkbox (change)=\"$event ? selection.toggle(row) : null\"\n                        (click)=\"$event.stopPropagation()\"\n                        [checked]=\"selection.isSelected(row)\"\n                        color=\"primary\">\n          </mat-checkbox>\n        </td>\n      </ng-container> -->\n\n      <!-- Text Columns -->\n      <ng-container *ngFor=\"let column of columns; trackBy: trackByProperty\">\n        <ng-container *ngIf=\"column.type === 'text'\" [matColumnDef]=\"column.property\">\n          <th *matHeaderCellDef class=\"uppercase\" mat-header-cell mat-sort-header> {{ column.label }}</th>\n          <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>{{ row[column.property] }}</td>\n        </ng-container>\n      </ng-container>\n\n      <!-- Contact Column -->\n      <ng-container matColumnDef=\"contact\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\n        <td *matCellDef=\"let row\" mat-cell>\n          <div class=\"flex\">\n            <a (click)=\"$event.stopPropagation()\"\n               class=\"w-8 h-8 leading-none flex items-center justify-center hover:bg-hover text-primary bg-primary-light\"\n               mat-icon-button>\n              <mat-icon [icIcon]=\"icPhone\" size=\"18px\"></mat-icon>\n            </a>\n\n            <a (click)=\"$event.stopPropagation()\"\n               class=\"w-8 h-8 leading-none flex items-center justify-center ml-1 hover:bg-hover text-teal bg-teal-light\"\n               mat-icon-button>\n              <mat-icon [icIcon]=\"icMail\" size=\"18px\"></mat-icon>\n            </a>\n\n            <a (click)=\"$event.stopPropagation()\"\n               class=\"w-8 h-8 leading-none flex items-center justify-center ml-1 hover:bg-hover text-green bg-green-light\"\n               mat-icon-button>\n              <mat-icon [icIcon]=\"icMap\" size=\"18px\"></mat-icon>\n            </a>\n          </div>\n        </td>\n      </ng-container>\n\n      <!-- Label Column -->\n      <ng-container matColumnDef=\"status\">\n        <th *matHeaderCellDef class=\"uppercase\" mat-header-cell mat-sort-header>Status</th>\n        <td *matCellDef=\"let row\" mat-cell>\n          <div fxLayoutAlign=\"start center\" fxLayoutGap=\"4px\">\n            <div\n                 [ngClass]=\"[row.status.textClass, row.status.bgClass]\"\n                 class=\"rounded px-2 py-1 font-medium text-xs\"\n                 fxFlex=\"none\">\n              {{ row.status.text }}\n            </div>\n            <!-- <div (click)=\"labelSelect.open()\" -->\n              <!-- <div\n                 class=\"text-secondary bg-base text-hint cursor-pointer hover:bg-hover\"\n                 fxFlex=\"none\"\n                 fxLayout=\"row\"\n                 fxLayoutAlign=\"center center\">\n              <ic-icon [icon]=\"icAdd\" size=\"18px\"></ic-icon>\n            </div> -->\n            <!-- <mat-select #labelSelect=\"matSelect\"\n                        (selectionChange)=\"onLabelChange($event, row)\"\n                        [value]=\"row.status\"\n                        class=\"invisible w-0 h-0 text-sm\"\n                        fxFlex=\"0 1 0px\"\n                        multiple>\n              <mat-option *ngFor=\"let label of labels\" [value]=\"label\">\n                <div [ngClass]=\"label.previewClass\"\n                     class=\"h-6 w-6 align-middle ltr:mr-2 rtl:ml-2 rounded inline-block\"></div>\n                <span>{{ label.text }}</span>\n              </mat-option>\n            </mat-select> -->\n          </div>\n        </td>\n      </ng-container>\n\n      <!-- Action Column -->\n      <!-- <ng-container matColumnDef=\"actions\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\n        <td *matCellDef=\"let row\" class=\"w-10 text-secondary\" mat-cell>\n          <button (click)=\"$event.stopPropagation()\"\n                  [matMenuTriggerData]=\"{ customer: row }\"\n                  [matMenuTriggerFor]=\"actionsMenu\"\n                  mat-icon-button\n                  type=\"button\">\n            <mat-icon [icIcon]=\"icMoreHoriz\"></mat-icon>\n          </button>\n        </td>\n      </ng-container> -->\n\n      <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\n      <!-- (click)=\"updateCustomer(row)\" -->\n      <tr \n          *matRowDef=\"let row; columns: visibleColumns;\"\n          @fadeInUp\n          class=\"hover:bg-hover trans-ease-out cursor-pointer\"\n          mat-row></tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" [pageSize]=\"pageSize\" class=\"sticky left-0\"></mat-paginator>\n  </div>\n  <mat-menu #columnFilterMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\n    <button (click)=\"toggleColumnVisibility(column, $event)\" *ngFor=\"let column of columns\"\n            class=\"checkbox-item mat-menu-item\">\n      <mat-checkbox (click)=\"$event.stopPropagation()\" [(ngModel)]=\"column.visible\" color=\"primary\">\n        {{ column.label }}\n      </mat-checkbox>\n    </button>\n  </mat-menu>\n  \n  <mat-menu #actionsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\n    <ng-template let-customer=\"customer\" matMenuContent>\n      <button [disabled]=\"currentUser['clientType'] == 'User'\" (click)=\"updateCustomer(customer)\" mat-menu-item>\n        <mat-icon [icIcon]=\"icEdit\"></mat-icon>\n        <span>Modify</span>\n      </button>\n      <button  [disabled]=\"currentUser['clientType'] == 'User'\" (click)=\"deleteCustomer(customer)\" mat-menu-item>\n        <mat-icon [icIcon]=\"icDelete\"></mat-icon>\n        <span>Delete</span>\n      </button>\n    </ng-template>\n  </mat-menu>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Job } from '../interfaces/job.model';\r\nimport icMoreVert from '@iconify/icons-ic/twotone-more-vert';\r\nimport icClose from '@iconify/icons-ic/twotone-close';\r\nimport icPrint from '@iconify/icons-ic/twotone-print';\r\nimport icDownload from '@iconify/icons-ic/twotone-cloud-download';\r\nimport icDelete from '@iconify/icons-ic/twotone-delete';\r\nimport icPhone from '@iconify/icons-ic/twotone-phone';\r\nimport icPerson from '@iconify/icons-ic/twotone-person';\r\nimport icMyLocation from '@iconify/icons-ic/twotone-my-location';\r\nimport icLocationCity from '@iconify/icons-ic/twotone-location-city';\r\nimport icEditLocation from '@iconify/icons-ic/twotone-edit-location';\r\nimport { statusTableLabels } from 'src/static-data/status-table-data';\r\nimport { formatDate } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'vex-customer-create-update',\r\n  templateUrl: './customer-create-update.component.html',\r\n  styleUrls: ['./customer-create-update.component.scss']\r\n})\r\nexport class CustomerCreateUpdateComponent implements OnInit {\r\n\r\n  static id = 100;\r\n\r\n  form: FormGroup;\r\n  mode: 'create' | 'update' = 'create';\r\n  selectedType = 'Housekeeping';\r\n  selectedRole = 'Linen Porter';\r\n  icMoreVert = icMoreVert;\r\n  icClose = icClose;\r\n\r\n  icPrint = icPrint;\r\n  icDownload = icDownload;\r\n  icDelete = icDelete;\r\n\r\n  icPerson = icPerson;\r\n  icMyLocation = icMyLocation;\r\n  icLocationCity = icLocationCity;\r\n  icEditLocation = icEditLocation;\r\n  icPhone = icPhone;\r\n  minDate;\r\n  minStart = 0;\r\n  constructor(@Inject(MAT_DIALOG_DATA) public defaults: any,\r\n              private dialogRef: MatDialogRef<CustomerCreateUpdateComponent>,\r\n              private fb: FormBuilder) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.minDate = '2020-08-15';\r\n    this.minDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\r\n    console.log('1213123')\r\n    console.log(this.minDate)\r\n    // this.minDate = formatDate(new Date(), 'YYYY-MM-DD').toString();\r\n    if (this.defaults) {\r\n      this.mode = 'update';\r\n    } else {\r\n      this.defaults = {} as Job;\r\n    }\r\n\r\n    this.form = this.fb.group({\r\n      id: [CustomerCreateUpdateComponent.id++],\r\n      _id:[this.defaults._id || ''],\r\n      client: [this.defaults.client || ''],\r\n      department: [this.defaults.department || this.selectedType],\r\n      role: [this.defaults.role || this.selectedRole],\r\n      shiftDate: [this.defaults.shiftDate || new Date()],\r\n      startTime: [this.defaults.startTime || 0],\r\n      endTime: [this.defaults.endTime || 1],\r\n      locationShift: [this.defaults.locationShift || ''],\r\n      purchaseOrderNo: [this.defaults.purchaseOrderNo || ''],\r\n      additionalInformation:[this.defaults.additionalInformation || ''],\r\n      total:[this.defaults.total || 1],\r\n      status:[this.defaults.status || statusTableLabels[1]]\r\n    });\r\n  }\r\n\r\n  save() {\r\n    if (this.mode === 'create') {\r\n      this.createCustomer();\r\n    } else if (this.mode === 'update') {\r\n      this.updateCustomer();\r\n    }\r\n  }\r\n\r\n  createCustomer() {\r\n    const customer = this.form.value;\r\n\r\n    // if (!customer.imageSrc) {\r\n    //   customer.imageSrc = 'assets/img/avatars/1.jpg';\r\n    // }\r\n\r\n    this.dialogRef.close(customer);\r\n  }\r\n\r\n  updateCustomer() {\r\n    const customer = this.form.value;\r\n    customer.id = this.defaults.id;\r\n\r\n    this.dialogRef.close(customer);\r\n  }\r\n\r\n  isCreateMode() {\r\n    return this.mode === 'create';\r\n  }\r\n\r\n  isUpdateMode() {\r\n    return this.mode === 'update';\r\n  }\r\n  changeAccountType(ev,i){\r\n    if(i == 1)\r\n    this.selectedType = ev.value();\r\n    else\r\n    this.selectedRole = ev.value();\r\n  }\r\n}\r\n","<form (ngSubmit)=\"save()\" [formGroup]=\"form\">\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" mat-dialog-title>\r\n    <!-- <img *ngIf=\"form.get('imageSrc').value\" [src]=\"form.get('imageSrc').value\" class=\"avatar mr-5\"> -->\r\n\r\n    <h2 *ngIf=\"form.get('client').value \"\r\n        class=\"headline m-0\"\r\n        fxFlex=\"auto\">{{ form.get('client').value}}</h2>\r\n    <h2 *ngIf=\"!form.get('client').value\"\r\n        class=\"headline m-0\"\r\n        fxFlex=\"auto\">New Job</h2>\r\n\r\n    <!-- <button [matMenuTriggerFor]=\"settingsMenu\" class=\"text-secondary\" mat-icon-button type=\"button\">\r\n      <mat-icon [icIcon]=\"icMoreVert\"></mat-icon>\r\n    </button> -->\r\n\r\n    <button class=\"text-secondary\" mat-dialog-close mat-icon-button type=\"button\">\r\n      <mat-icon [icIcon]=\"icClose\"></mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <mat-divider class=\"-mx-6 text-border\"></mat-divider>\r\n\r\n  <mat-dialog-content fxLayout=\"column\">\r\n    <div class=\"flex flex-col sm:flex-row\">\r\n      <mat-form-field class=\"mt-6 flex-auto\">\r\n        <mat-label>Client</mat-label>\r\n        <input cdkFocusInitial formControlName=\"client\" matInput>\r\n\r\n        <mat-icon [icIcon]=\"icPerson\" class=\"mr-3\" matPrefix></mat-icon>\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"flex flex-col sm:flex-row\">\r\n        <mat-form-field class=\"flex-auto\">\r\n          <mat-label>Department</mat-label>\r\n          <!-- <input formControlName=\"department\" matInput> -->\r\n          <mat-select formControlName=\"department\" (selectionChange)=\"changeAccountType($event , 1)\" [(ngModel)]=\"selectedType\">\r\n            <mat-option value=\"Housekeeping\">Housekeeping</mat-option>\r\n            <mat-option value=\"Food and Beverage\">Food and Beverage</mat-option>\r\n            <mat-option value=\"Back of House\">Back of House</mat-option>\r\n        </mat-select>\r\n          <!-- <mat-icon [icIcon]=\"icEditLocation\" class=\"mr-3\" matPrefix></mat-icon> -->\r\n      </mat-form-field>\r\n      <mat-form-field class=\"sm:ml-6 flex-auto\">\r\n        <mat-label>Role</mat-label>\r\n        <!-- <input formControlName=\"role\" matInput> -->\r\n        <mat-select formControlName=\"role\" (selectionChange)=\"changeAccountType($event , 2)\" [(ngModel)]=\"selectedRole\">\r\n          <mat-option *ngIf=\"selectedType == 'Housekeeping'\" value=\"Linen Porter\">Linen Porter</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Housekeeping'\" value=\"Floor Porter\">Floor Porter</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Housekeeping'\" value=\"Floor Supervisor\">Floor Supervisor</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Housekeeping'\" value=\"Room Supervisor\">Room Supervisor</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Housekeeping'\" value=\"Evening Room Attendant\">Evening Room Attendant</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Housekeeping'\" value=\"Public Area Attendant\">Public Area Attendant</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Housekeeping'\" value=\"Spa Attendant\">Spa Attendant</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Housekeeping'\" value=\"Valet\">Valet</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Housekeeping'\" value=\"Housekeeper\">Housekeeper</mat-option>\r\n\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Waiters\">Waiters</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Night Waiters\">Night Waiters</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Night Room Service\">Night Room Service</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Supervisor Banqueting\">Supervisor Banqueting</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Team Leader\">Team Leader</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Silver Service Waiters\">Silver Service Waiters</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Bar Staff\">Bar Staff</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Cloakroom\">Cloakroom</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Concierge\">Concierge</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Hostess\">Hostess</mat-option>\r\n\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Kitchen Porter\">Kitchen Porter</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Night Kitchen Porter\">Night Kitchen Porter</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Night Cleaners\">Night Cleaners</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Supervisor BOH (Back of House)\">Supervisor BOH (Back of House)</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Food Runners\">Food Runners</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Breakfast Runners\">Breakfast Runners</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Commis Chef\">Commis Chef</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Breakfast Chef\">Breakfast Chef</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Chef De Partie\">Chef De Partie</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Pastry Chef\">Pastry Chef</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Banqueting Porter\">Banqueting Porter</mat-option>\r\n      </mat-select>\r\n        <!-- <mat-icon [icIcon]=\"icEditLocation\" class=\"mr-3\" matPrefix></mat-icon> -->\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"flex flex-col sm:flex-row\">\r\n      <mat-form-field class=\"flex-auto\">\r\n        <mat-label>Shift Date</mat-label>\r\n        <input type=\"date\" formControlName=\"shiftDate\" matInput [min]=\"minDate\">\r\n        <mat-icon [icIcon]=\"icMyLocation\" class=\"mr-3\" matPrefix></mat-icon>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"sm:ml-3 flex-auto\">\r\n        <mat-label>Start Time</mat-label>\r\n        <input type=\"number\"formControlName=\"startTime\" matInput [(ngModel)]=\"minStart\" min=\"0\"max=\"23\">\r\n        <!-- <mat-icon [icIcon]=\"icLocationCity\" class=\"mr-3\" matPrefix></mat-icon> -->\r\n      </mat-form-field>\r\n      <mat-form-field class=\"sm:ml-3 flex-auto\">\r\n        <mat-label>End Time</mat-label>\r\n        <input  type=\"number\"formControlName=\"endTime\" matInput [min]=\"minStart + 1\" [value]=\"minStart + 1\" max=\"24\">\r\n        <!-- <mat-icon [icIcon]=\"icLocationCity\" class=\"mr-3\" matPrefix ></mat-icon> -->\r\n      </mat-form-field>\r\n      <mat-form-field class=\"sm:ml-3 flex-auto\">\r\n        <mat-label>Total Staff</mat-label>\r\n        <input  type=\"number\"formControlName=\"total\" matInput min=\"1\">\r\n        <!-- <mat-icon [icIcon]=\"icLocationCity\" class=\"mr-3\" matPrefix ></mat-icon> -->\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <mat-form-field class=\"flex-auto\">\r\n      <mat-label>Location of Shift</mat-label>\r\n      <input formControlName=\"locationShift\" matInput>\r\n      <mat-icon [icIcon]=\"icLocationCity\" class=\"mr-3\" matPrefix></mat-icon>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"flex-auto\">\r\n      <mat-label>Purchase Order No(Optional)</mat-label>\r\n      <input formControlName=\"purchaseOrderNo\" matInput/>\r\n    </mat-form-field>\r\n  <mat-form-field class=\"flex-auto\">\r\n    <mat-label>Additional Information</mat-label>\r\n    <input formControlName=\"additionalInformation\" matInput>\r\n  </mat-form-field>\r\n</mat-dialog-content>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button mat-dialog-close type=\"button\">CANCEL</button>\r\n    <button *ngIf=\"isCreateMode()\" color=\"primary\" mat-button type=\"submit\">CREATE JOB</button>\r\n    <button *ngIf=\"isUpdateMode()\" color=\"primary\" mat-button type=\"submit\">UPDATE JOB</button>\r\n  </mat-dialog-actions>\r\n</form>\r\n\r\n<mat-menu #settingsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n  <button mat-menu-item>\r\n    <mat-icon [icIcon]=\"icPrint\"></mat-icon>\r\n    <span>Print</span>\r\n  </button>\r\n\r\n  <button mat-menu-item>\r\n    <mat-icon [icIcon]=\"icDownload\"></mat-icon>\r\n    <span>Export</span>\r\n  </button>\r\n\r\n  <button mat-menu-item>\r\n    <mat-icon [icIcon]=\"icDelete\"></mat-icon>\r\n    <span>Delete</span>\r\n  </button>\r\n</mat-menu>\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ClientsDashboardComponent } from './clients-dashboard.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ClientsDashboardComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ClientsDashboardRoutingModule {\n}\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport icGroup from '@iconify/icons-ic/twotone-group';\nimport icPageView from '@iconify/icons-ic/twotone-pageview';\nimport icCloudOff from '@iconify/icons-ic/twotone-cloud-off';\nimport icTimer from '@iconify/icons-ic/twotone-timer';\nimport { defaultChartOptions } from '../../../@vex/utils/default-chart-options';\nimport { Order, tableSalesData } from '../../../static-data/table-sales-data';\nimport { TableColumn } from '../../../@vex/interfaces/table-column.interface';\nimport icMoreVert from '@iconify/icons-ic/twotone-more-vert';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'vex-clients-dashboard',\n  templateUrl: './clients-dashboard.component.html',\n  styleUrls: ['./clients-dashboard.component.scss']\n})\nexport class ClientsDashboardComponent implements OnInit {\n  clientJob:any;\n  totalJobs:number;\n  requestTime:number;\n\n  icGroup = icGroup;\n  icPageView = icPageView;\n  icCloudOff = icCloudOff;\n  icTimer = icTimer;\n  icMoreVert = icMoreVert;\n\n  constructor(private cd: ChangeDetectorRef,\n    private authService:AuthService) { }\n\n  ngOnInit() {\n    if(!this.authService.clientJob)\n      this.authService.setClientJob();\n    this.clientJob = this.authService.clientJob;\n    console.log('____________')\n    console.log(this.clientJob)\n    // this.totalJobs =  this.clientJob.filter((obj) => obj.statusStr == 'Completed').length;\n    this.totalJobs =  this.clientJob.length;\n    this.clientJob = this.authService.clientJob;\n    this.requestTime = 0;\n    console.log('____________+++=')\n    console.log(this.clientJob)\n    console.log(this.requestTime)\n    console.log(this.totalJobs)\n    this.clientJob.filter((obj) => {this.requestTime += parseInt(obj.endTime) - parseInt(obj.startTime)}).length;\n    this.clientJob = this.authService.clientJob;\n    setTimeout(() => {\n      const temp = [\n        {\n          name: 'Subscribers',\n          data: [55, 213, 55, 0, 213, 55, 33, 55]\n        },\n        {\n          name: ''\n        }\n      ];\n    }, 3000);\n  }\n\n}\n","<vex-secondary-toolbar current=\"Dashboard\">\n  <!-- <vex-breadcrumbs [crumbs]=\"['Dashboards', 'Analytics']\" class=\"flex-auto\"></vex-breadcrumbs> -->\n  <!-- <button class=\"ml-2\" color=\"primary\" mat-icon-button type=\"button\">\n    <mat-icon [icIcon]=\"icMoreVert\"></mat-icon>\n  </button> -->\n</vex-secondary-toolbar>\n\n<div class=\"p-gutter\"\n     gdColumns=\"1fr 1fr \"\n     gdColumns.lt-md=\"1fr 1fr\"\n     gdColumns.lt-sm=\"1fr\"\n     gdGap=\"16px\"\n     vexContainer>\n  <!-- <vex-widget-assistant gdColumn=\"1 / 3\" gdColumn.lt-md=\"1 / -1\" gdColumn.lt-sm=\"1\"></vex-widget-assistant>\n\n  <vex-widget-quick-line-chart [icon]=\"icPageView\"\n                               [series]=\"pageViewsSeries\"\n                               iconClass=\"text-primary bg-primary-light\"\n                               gdColumn.lt-sm=\"1\"\n                               label=\"Page Views\"\n                               value=\"92.4k\"></vex-widget-quick-line-chart>\n\n  <vex-widget-quick-line-chart [icon]=\"icGroup\"\n                               [options]=\"uniqueUsersOptions\"\n                               [series]=\"uniqueUsersSeries\"\n                               iconClass=\"text-orange bg-orange-light\"\n                               gdColumn.lt-sm=\"1\"\n                               label=\"Unique Users\"\n                               value=\"67.2k\"></vex-widget-quick-line-chart>\n\n  <vex-widget-large-chart [series]=\"userSessionsSeries\"\n                          gdColumn=\"1 / 3\"\n                          gdColumn.lt-md=\"1 / -1\"\n                          gdColumn.lt-sm=\"1\"></vex-widget-large-chart>\n\n  <vex-widget-table [columns]=\"tableColumns\"\n                    [data]=\"tableData\"\n                    class=\"w-full overflow-auto shadow\" gdColumn=\"3 / -1\"\n                    gdColumn.lt-md=\"1 / -1\"\n                    gdColumn.lt-sm=\"1\"></vex-widget-table> -->\n\n  <vex-widget-quick-value-center [change]=\"124.4\"\n                                 [icon]=\"icGroup\"\n                                 iconClass=\"text-primary bg-primary-light\"\n                                 gdColumn.lt-sm=\"1\"\n                                 label=\"Total Jobs\"\n                                 [value]=\"totalJobs\"></vex-widget-quick-value-center>\n  <!-- <vex-widget-quick-value-center [change]=\"-23.7\"\n                                 [icon]=\"icPageView\"\n                                 iconClass=\"text-orange bg-orange-light\"\n                                 gdColumn.lt-sm=\"1\"\n                                 helpText=\"Additional information\"\n                                 label=\"Request Time\"\n                                 value=\"96.2k\"></vex-widget-quick-value-center>\n  <vex-widget-quick-value-center [change]=\"23.2\"\n                                 [icon]=\"icCloudOff\"\n                                 iconClass=\"text-deep-orange bg-deep-orange-light\"\n                                 gdColumn.lt-sm=\"1\"\n                                 helpText=\"Explain something\"\n                                 label=\"Bounce Rate\"\n                                 value=\"6.92%\"></vex-widget-quick-value-center> -->\n  <vex-widget-quick-value-center [change]=\"34.5\"\n                                 [icon]=\"icTimer\"\n                                 iconClass=\"text-teal bg-teal-light\"\n                                 gdColumn.lt-sm=\"1\"\n                                 label=\"Request Time\"\n                                 [value]=\"requestTime\"></vex-widget-quick-value-center>\n\n  <div gdColumn=\"1 / -1\"  gdColumn.lt-sm=\"1\">\n    <vex-client-job-table></vex-client-job-table>\n  </div>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ClientsDashboardRoutingModule } from './clients-dashboard-routing.module';\nimport { ClientsDashboardComponent } from './clients-dashboard.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ChartModule } from '../../../@vex/components/chart/chart.module';\nimport { MatIconModule } from '@angular/material/icon';\nimport { WidgetQuickLineChartModule } from '../../../@vex/components/widgets/widget-quick-line-chart/widget-quick-line-chart.module';\nimport { WidgetQuickValueCenterModule } from '../../../@vex/components/widgets/widget-quick-value-center/widget-quick-value-center.module';\nimport { WidgetQuickValueStartModule } from '../../../@vex/components/widgets/widget-quick-value-start/widget-quick-value-start.module';\nimport { WidgetLargeGoalChartModule } from '../../../@vex/components/widgets/widget-large-goal-chart/widget-large-goal-chart.module';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { WidgetAssistantModule } from '../../../@vex/components/widgets/widget-assistant/widget-assistant.module';\nimport { WidgetLargeChartModule } from '../../../@vex/components/widgets/widget-large-chart/widget-large-chart.module';\nimport { WidgetTableModule } from '../../../@vex/components/widgets/widget-table/widget-table.module';\nimport { SecondaryToolbarModule } from '../../../@vex/components/secondary-toolbar/secondary-toolbar.module';\nimport { BreadcrumbsModule } from '../../../@vex/components/breadcrumbs/breadcrumbs.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { PageLayoutModule } from '../../../@vex/components/page-layout/page-layout.module';\nimport { ContainerModule } from '../../../@vex/directives/container/container.module';\nimport { ClientJobTableComponent } from './client-job-table/client-job-table.component';\nimport { ClientCreateUpdateModule } from 'src/app/admin/clients/client-create-update/client-create-update.module';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n\n@NgModule({\n  declarations: [ClientsDashboardComponent, ClientJobTableComponent ],\n  imports: [\n    CommonModule,\n    ClientsDashboardRoutingModule,\n    FlexLayoutModule,\n    ChartModule,\n    MatIconModule,\n    WidgetQuickLineChartModule,\n    WidgetQuickValueCenterModule,\n    WidgetQuickValueStartModule,\n    WidgetLargeGoalChartModule,\n    IconModule,\n    WidgetAssistantModule,\n    WidgetLargeChartModule,\n    WidgetTableModule,\n    SecondaryToolbarModule,\n    BreadcrumbsModule,\n    MatButtonModule,\n    PageLayoutModule,\n    ContainerModule,\n    PageLayoutModule,\n    FlexLayoutModule,\n    BreadcrumbsModule,\n    ClientCreateUpdateModule,\n    MatPaginatorModule,\n    MatTableModule,\n    MatSortModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule,\n    IconModule,\n    FormsModule,\n    MatTooltipModule,\n    ReactiveFormsModule,\n    ContainerModule,\n    MatSelectModule,\n    MatButtonToggleModule,\n    MatSnackBarModule\n  ]\n})\nexport class ClientsDashboardModule {\n}\n"],"sourceRoot":"webpack:///"}