{"version":3,"sources":["./src/app/pages/apps/scrumboard/components/scrumboard-dialog/scrumboard-dialog.component.ts","./src/app/pages/apps/scrumboard/components/scrumboard-dialog/scrumboard-dialog.component.html","./src/app/pages/apps/scrumboard/components/scrumboard-dialog/scrumboard-dialog.module.ts","./src/app/pages/apps/scrumboard/scrumboard-routing.module.ts","./src/app/pages/apps/scrumboard/scrumboard.component.ts","./src/app/pages/apps/scrumboard/scrumboard.component.html","./src/app/pages/apps/scrumboard/scrumboard.module.ts"],"names":[],"mappings":"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","file":"pages-apps-scrumboard-scrumboard-module-es2015.js","sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ScrumboardCard } from '../../interfaces/scrumboard-card.interface';\nimport { FormArray, FormBuilder, FormControl } from '@angular/forms';\nimport icAssignment from '@iconify/icons-ic/twotone-assignment';\nimport icAdd from '@iconify/icons-ic/twotone-add';\nimport { scrumboardLabels, scrumboardUsers } from '../../../../../../static-data/scrumboard';\nimport icDescription from '@iconify/icons-ic/twotone-description';\nimport icClose from '@iconify/icons-ic/twotone-close';\nimport { ScrumboardList } from '../../interfaces/scrumboard-list.interface';\nimport { Scrumboard } from '../../interfaces/scrumboard.interface';\nimport icMoreVert from '@iconify/icons-ic/twotone-more-vert';\nimport icDelete from '@iconify/icons-ic/twotone-delete';\nimport icImage from '@iconify/icons-ic/twotone-image';\nimport { ScrumboardAttachment } from '../../interfaces/scrumboard-attachment.interface';\nimport icAttachFile from '@iconify/icons-ic/twotone-attach-file';\nimport icInsertComment from '@iconify/icons-ic/twotone-insert-comment';\nimport { DateTime } from 'luxon';\nimport { ScrumboardComment } from '../../interfaces/scrumboard-comment.interface';\nimport icStar from '@iconify/icons-ic/twotone-star';\n\n@Component({\n  selector: 'vex-scrumboard-dialog',\n  templateUrl: './scrumboard-dialog.component.html',\n  styleUrls: ['./scrumboard-dialog.component.scss']\n})\nexport class ScrumboardDialogComponent implements OnInit {\n\n  form = this.fb.group({\n    title: null,\n    description: null,\n    dueDate: null,\n    cover: null,\n    attachments: this.fb.array([]),\n    comments: this.fb.array([]),\n    users: [],\n    labels: []\n  });\n\n  commentCtrl = new FormControl();\n\n  icAssignment = icAssignment;\n  icDescription = icDescription;\n  icClose = icClose;\n  icAdd = icAdd;\n  icMoreVert = icMoreVert;\n  icDelete = icDelete;\n  icImage = icImage;\n  icAttachFile = icAttachFile;\n  icInsertComment = icInsertComment;\n  icStar = icStar;\n\n  users = scrumboardUsers;\n  labels = scrumboardLabels;\n\n  list: ScrumboardList;\n  board: Scrumboard;\n\n  constructor(private dialogRef: MatDialogRef<ScrumboardDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) private data: {\n                card: ScrumboardCard;\n                list: ScrumboardList;\n                board: Scrumboard;\n              },\n              private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.list = this.data.list;\n    this.board = this.data.board;\n\n    const card = this.data.card;\n\n    this.form.valueChanges.subscribe(console.log);\n\n    this.form.patchValue({\n      title: card.title,\n      description: card.description,\n      dueDate: card.dueDate || null,\n      cover: card.cover || null,\n      users: card.users || [],\n      labels: card.labels || []\n    });\n\n    this.form.setControl('attachments', this.fb.array(card.attachments || []));\n    this.form.setControl('comments', this.fb.array(card.comments || []));\n  }\n\n  save() {\n    this.dialogRef.close(this.form.value);\n  }\n\n  isImageExtension(extension: string) {\n    return extension === 'jpg' || extension === 'png';\n  }\n\n  makeCover(attachment: ScrumboardAttachment) {\n    this.form.get('cover').setValue(attachment);\n  }\n\n  isCover(attachment: ScrumboardAttachment) {\n    return this.form.get('cover').value === attachment;\n  }\n\n  remove(attachment: ScrumboardAttachment) {\n    if (this.form.get('cover').value && attachment.id === this.form.get('cover').value.id) {\n      this.form.get('cover').setValue(null);\n    }\n\n    this.form.setControl('attachments', this.fb.array(this.form.get('attachments').value.filter(a => a !== attachment)));\n  }\n\n  addComment() {\n    if (!this.commentCtrl.value) {\n      return;\n    }\n\n    const comments = this.form.get('comments') as FormArray;\n    comments.push(new FormControl({\n      from: {\n        name: 'David Smith',\n        imageSrc: 'assets/img/avatars/1.jpg'\n      },\n      message: this.commentCtrl.value,\n      date: DateTime.local().minus({ seconds: 1 })\n    } as ScrumboardComment));\n\n    this.commentCtrl.setValue(null);\n  }\n}\n","<form (ngSubmit)=\"save()\" [formGroup]=\"form\">\r\n  <div class=\"mb-0 body-1\" mat-dialog-title>\r\n    <div>\r\n      <h2 class=\"title m-0\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n        <ic-icon [icon]=\"icAssignment\" class=\"ltr:mr-1 rtl:ml-1 text-secondary\" fxFlex=\"none\" size=\"24px\"></ic-icon>\r\n        <input [class.empty]=\"!form.get('title').value\"\r\n               class=\"hidden-input title bg-card\"\r\n               formControlName=\"title\"\r\n               fxFlex=\"auto\">\r\n        <button cdkFocusInitial class=\"text-secondary\" mat-dialog-close mat-icon-button type=\"button\">\r\n          <mat-icon [icIcon]=\"icClose\"></mat-icon>\r\n        </button>\r\n      </h2>\r\n\r\n      <div class=\"body-2 text-secondary ltr:ml-10 rtl:mr-10\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n        <span>{{ board?.label }}</span>\r\n        <div class=\"w-1 h-1 mx-2 bg-gray rounded-full\"></div>\r\n        <span>{{ list?.label }}</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"mt-3 ltr:ml-10 rtl:mr-10\" fxLayout=\"row wrap\" fxLayoutAlign=\"space-between start\">\r\n      <div class=\"members\" fxFlex=\"none\">\r\n        <div class=\"body-2 text-secondary\">MEMBERS</div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n          <img *ngFor=\"let user of form.get('users').value\"\r\n               [matTooltip]=\"user.name\"\r\n               [src]=\"user.imageSrc\"\r\n               class=\"avatar\"\r\n               fxFlex=\"none\">\r\n          <div (click)=\"memberSelect.open()\"\r\n               class=\"avatar text-secondary bg-app-bar cursor-pointer\"\r\n               fxFlex=\"none\"\r\n               fxLayout=\"row\"\r\n               fxLayoutAlign=\"center center\">\r\n            <ic-icon [icon]=\"icAdd\" size=\"24px\"></ic-icon>\r\n          </div>\r\n          <mat-select #memberSelect=\"matSelect\"\r\n                      class=\"invisible w-0 h-0 text-sm\"\r\n                      formControlName=\"users\"\r\n                      fxFlex=\"0 1 0px\"\r\n                      multiple>\r\n            <mat-option *ngFor=\"let user of users\" [value]=\"user\">\r\n              <img [src]=\"user.imageSrc\" class=\"avatar h-6 w-6 align-middle inline-block ltr:mr-2 rtl:ml-2\">\r\n              <span>{{ user.name }}</span>\r\n            </mat-option>\r\n          </mat-select>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"labels max-w-full\" fxFlex=\"none\">\r\n        <div class=\"body-2 text-secondary\">LABELS</div>\r\n        <div fxLayout=\"row wrap\" fxLayoutAlign=\"start center\" fxLayoutGap=\"4px\">\r\n          <div *ngFor=\"let label of form.get('labels').value\"\r\n               [ngClass]=\"[label.bgClass, label.textClass]\"\r\n               class=\"label\"\r\n               fxFlex=\"none\">\r\n            {{ label.label }}\r\n          </div>\r\n          <div (click)=\"labelSelect.open()\"\r\n               class=\"label text-secondary bg-app-bar cursor-pointer mt-1\"\r\n               fxFlex=\"none\"\r\n               fxLayout=\"row\"\r\n               fxLayoutAlign=\"center center\">\r\n            <ic-icon [icon]=\"icAdd\" size=\"24px\"></ic-icon>\r\n          </div>\r\n          <mat-select #labelSelect=\"matSelect\"\r\n                      class=\"invisible w-0 h-0 text-sm\"\r\n                      formControlName=\"labels\"\r\n                      fxFlex=\"0 1 0px\"\r\n                      multiple>\r\n            <mat-option *ngFor=\"let label of labels\" [value]=\"label\">\r\n              <div [ngClass]=\"label.bgClass\"\r\n                   class=\"h-6 w-6 align-middle ltr:mr-2 rtl:ml-2 rounded inline-block\"></div>\r\n              <span>{{ label.label }}</span>\r\n            </mat-option>\r\n          </mat-select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <mat-divider class=\"-mx-6 mt-6\"></mat-divider>\r\n  </div>\r\n\r\n  <mat-dialog-content class=\"pb-6 content\">\r\n\r\n    <h2 class=\"body-2 font-medium m-0 mt-6 text-secondary\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n      <ic-icon [icon]=\"icDescription\" class=\"ltr:mr-4 rtl:ml-4\" fxFlex=\"none\" size=\"24px\"></ic-icon>\r\n      <span>DESCRIPTION</span>\r\n    </h2>\r\n\r\n    <div class=\"ltr:ml-10 rtl:mr-10 mt-3\" fxLayout=\"column\">\r\n      <mat-form-field appearance=\"outline\" class=\"vex-dense-form-field body-1\">\r\n        <textarea cdkAutosizeMinRows=\"2\"\r\n                  formControlName=\"description\"\r\n                  matInput\r\n                  matTextareaAutosize\r\n                  placeholder=\"Add a description ...\"></textarea>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <h2 class=\"body-2 font-medium m-0 text-secondary mt-4\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n      <ic-icon [icon]=\"icAttachFile\" class=\"ltr:mr-4 rtl:ml-4\" fxFlex=\"none\" size=\"24px\"></ic-icon>\r\n      <span fxFlex=\"auto\">ATTACHMENTS</span>\r\n      <button color=\"primary\" mat-button type=\"button\">\r\n        <ic-icon [icon]=\"icAdd\" class=\"ltr:mr-1 rtl:ml-1 ltr:-ml-1 rtl:-mr-1\" inline=\"true\" size=\"18px\"></ic-icon>\r\n        <span>ADD AN ATTACHMENT</span>\r\n      </button>\r\n    </h2>\r\n\r\n    <div *ngIf=\"form.get('attachments').value?.length > 0\"\r\n         class=\"ltr:ml-10 rtl:mr-10 mt-3\"\r\n         gdColumns=\"1fr 1fr\"\r\n         gdColumns.xs=\"1fr\"\r\n         gdGap=\"16px\">\r\n      <div *ngFor=\"let attachment of form.get('attachments').value\"\r\n           class=\"border p-1 rounded\"\r\n           fxLayout=\"row\"\r\n           fxLayoutAlign=\"start center\">\r\n\r\n        <div *ngIf=\"isImageExtension(attachment.extension)\"\r\n             class=\"bg-app-bar rounded ltr:mr-3 rtl:ml-3 w-24 h-16 overflow-hidden relative\">\r\n          <img [src]=\"attachment.path\" class=\"object-cover w-full h-full\">\r\n        </div>\r\n\r\n        <div *ngIf=\"!isImageExtension(attachment.extension)\"\r\n             class=\"bg-app-bar p-1 rounded ltr:mr-3 rtl:ml-3 w-100 h-16 leading-none body-2\"\r\n             fxLayoutAlign=\"center center\">{{ attachment.extension }}</div>\r\n\r\n        <div fxFlex=\"auto\">\r\n          <h4 class=\"m-0 body-2 leading-snug text-secondary\">{{ attachment.name }}</h4>\r\n          <p class=\"m-0 caption leading-snug text-hint\">\r\n            <ic-icon *ngIf=\"isCover(attachment)\" [icon]=\"icStar\" inline=\"true\"></ic-icon>\r\n            <span>{{ attachment.size }}</span>\r\n          </p>\r\n        </div>\r\n\r\n        <button [matMenuTriggerData]=\"{ attachment: attachment }\"\r\n                [matMenuTriggerFor]=\"attachmentMenu\"\r\n                class=\"text-secondary ltr:ml-1 rtl:mr-1\"\r\n                mat-icon-button\r\n                type=\"button\">\r\n          <mat-icon [icIcon]=\"icMoreVert\"></mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <mat-divider class=\"-mx-6 mt-6\"></mat-divider>\r\n\r\n    <h2 class=\"body-2 m-0 pt-6 text-secondary\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n      <ic-icon [icon]=\"icInsertComment\" class=\"ltr:mr-4 rtl:ml-4\" fxFlex=\"none\" size=\"24px\"></ic-icon>\r\n      <span fxFlex=\"auto\">COMMENTS</span>\r\n    </h2>\r\n\r\n    <div class=\"ltr:ml-10 rtl:mr-10 mt-2\">\r\n      <div *ngFor=\"let comment of form.get('comments').value\" class=\"mt-4\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n          <img [src]=\"comment.from.imageSrc\" class=\"avatar h-8 w-8 ltr:mr-3 rtl:ml-3\">\r\n          <div>\r\n            <h4 class=\"body-2 m-0 leading-snug\">{{ comment.from.name }}</h4>\r\n            <h5 class=\"caption text-secondary m-0 leading-snug\">{{ comment.date | relativeDateTime }}</h5>\r\n          </div>\r\n        </div>\r\n\r\n        <p class=\"m-0 mt-2 caption text-secondary\">{{ comment.message }}</p>\r\n      </div>\r\n\r\n      <div class=\"mt-6\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n        <img class=\"avatar w-8 h-8 ltr:mr-3 rtl:ml-3\" fxFlex=\"none\" src=\"assets/img/avatars/1.jpg\">\r\n        <mat-form-field appearance=\"outline\" class=\"vex-dense-form-field vex-flex-form-field\" fxFlex=\"auto\">\r\n          <input [formControl]=\"commentCtrl\" matInput placeholder=\"Write a comment ...\">\r\n          <button (click)=\"addComment()\" class=\"-top-1\" color=\"primary\" mat-button matSuffix type=\"button\">SEND</button>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n  </mat-dialog-content>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button mat-dialog-close type=\"button\">CANCEL</button>\r\n    <button color=\"primary\" mat-raised-button type=\"submit\">SAVE</button>\r\n  </mat-dialog-actions>\r\n</form>\r\n\r\n\r\n<mat-menu #attachmentMenu=\"matMenu\">\r\n  <ng-template let-attachment=\"attachment\" matMenuContent>\r\n    <button (click)=\"makeCover(attachment)\" mat-menu-item>\r\n      <mat-icon [icIcon]=\"icImage\"></mat-icon>\r\n      <span>Make Cover</span>\r\n    </button>\r\n\r\n    <button (click)=\"remove(attachment)\" mat-menu-item>\r\n      <mat-icon [icIcon]=\"icDelete\"></mat-icon>\r\n      <span>Remove</span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ScrumboardDialogComponent } from './scrumboard-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { RelativeDateTimeModule } from '../../../../../../@vex/pipes/relative-date-time/relative-date-time.module';\n\n\n@NgModule({\n  declarations: [ScrumboardDialogComponent],\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    ReactiveFormsModule,\n    IconModule,\n    FlexLayoutModule,\n    MatTooltipModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatMenuModule,\n    MatDividerModule,\n    RelativeDateTimeModule\n  ],\n  exports: [ScrumboardDialogComponent],\n  entryComponents: [ScrumboardDialogComponent]\n})\nexport class ScrumboardDialogModule {\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ScrumboardComponent } from './scrumboard.component';\nimport { VexRoutes } from '../../../../@vex/interfaces/vex-route.interface';\n\n\nconst routes: VexRoutes = [\n  {\n    path: '',\n    redirectTo: '1'\n  },\n  {\n    path: ':scrumboardId',\n    component: ScrumboardComponent,\n    data: {\n      scrollDisabled: true,\n      containerEnabled: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ScrumboardRoutingModule {\n}\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { ScrumboardList } from './interfaces/scrumboard-list.interface';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { ScrumboardCard } from './interfaces/scrumboard-card.interface';\nimport { trackById } from '../../../../@vex/utils/track-by';\nimport { scrumboards, scrumboardUsers } from '../../../../static-data/scrumboard';\nimport icNotifications from '@iconify/icons-ic/twotone-notifications';\nimport icInsertComment from '@iconify/icons-ic/twotone-insert-comment';\nimport icAttachFile from '@iconify/icons-ic/twotone-attach-file';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ScrumboardDialogComponent } from './components/scrumboard-dialog/scrumboard-dialog.component';\nimport { filter, map } from 'rxjs/operators';\nimport { ActivatedRoute } from '@angular/router';\nimport { Scrumboard } from './interfaces/scrumboard.interface';\nimport icAdd from '@iconify/icons-ic/twotone-add';\nimport { PopoverService } from '../../../../@vex/components/popover/popover.service';\nimport icClose from '@iconify/icons-ic/twotone-close';\nimport { FormControl } from '@angular/forms';\nimport icStar from '@iconify/icons-ic/twotone-star';\nimport icStarBorder from '@iconify/icons-ic/twotone-star-border';\nimport { stagger80ms } from '../../../../@vex/animations/stagger.animation';\nimport { fadeInUp400ms } from '../../../../@vex/animations/fade-in-up.animation';\n\n@Component({\n  selector: 'vex-scrumboard',\n  templateUrl: './scrumboard.component.html',\n  styleUrls: ['./scrumboard.component.scss'],\n  animations: [\n    stagger80ms,\n    fadeInUp400ms\n  ]\n})\nexport class ScrumboardComponent implements OnInit {\n\n  static nextId = 100;\n\n  board$ = this.route.paramMap.pipe(\n    map(paramMap => +paramMap.get('scrumboardId')),\n    map(scrumboardId => scrumboards.find(board => board.id === scrumboardId))\n  );\n\n  addCardCtrl = new FormControl();\n  addListCtrl = new FormControl();\n\n  trackById = trackById;\n  icNotifications = icNotifications;\n  icInsertComment = icInsertComment;\n  icAttachFile = icAttachFile;\n  icAdd = icAdd;\n  icClose = icClose;\n  icStar = icStar;\n  icStarBorder = icStarBorder;\n\n  scrumboardUsers = scrumboardUsers;\n\n  constructor(private dialog: MatDialog,\n              private route: ActivatedRoute,\n              private popover: PopoverService) { }\n\n  ngOnInit() {\n  }\n\n  open(board: Scrumboard, list: ScrumboardList, card: ScrumboardCard) {\n    this.addCardCtrl.setValue(null);\n\n    this.dialog.open(ScrumboardDialogComponent, {\n      data: { card, list, board },\n      width: '700px',\n      maxWidth: '100%',\n      disableClose: true\n    }).beforeClosed().pipe(\n      filter<ScrumboardCard>(Boolean)\n    ).subscribe(value => {\n      console.log(value);\n      const index = list.children.findIndex(child => child.id === card.id);\n      if (index > -1) {\n        list.children[index] = value;\n      }\n    });\n  }\n\n  drop(event: CdkDragDrop<ScrumboardCard[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex);\n    }\n  }\n\n  dropList(event: CdkDragDrop<ScrumboardList[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex);\n    }\n  }\n\n  getConnectedList(board: Scrumboard) {\n    return board.children.map(x => `${x.id}`);\n  }\n\n  openAddCard(list: ScrumboardList, content: TemplateRef<any>, origin: HTMLElement) {\n    this.popover.open({\n      content,\n      origin,\n      position: [\n        {\n          originX: 'center',\n          originY: 'bottom',\n          overlayX: 'center',\n          overlayY: 'bottom'\n        },\n        {\n          originX: 'center',\n          originY: 'bottom',\n          overlayX: 'center',\n          overlayY: 'top',\n        },\n      ]\n    });\n  }\n\n  openAddList(board: Scrumboard, content: TemplateRef<any>, origin: HTMLElement) {\n    this.popover.open({\n      content,\n      origin,\n      position: [\n        {\n          originX: 'center',\n          originY: 'bottom',\n          overlayX: 'center',\n          overlayY: 'top'\n        },\n        {\n          originX: 'center',\n          originY: 'bottom',\n          overlayX: 'center',\n          overlayY: 'top',\n        },\n      ]\n    });\n  }\n\n  createCard(list: ScrumboardList, close: () => void) {\n    if (!this.addCardCtrl.value) {\n      return;\n    }\n\n    list.children.push({\n      id: ScrumboardComponent.nextId++,\n      title: this.addCardCtrl.value\n    });\n\n    close();\n\n    this.addCardCtrl.setValue(null);\n  }\n\n  createList(board: Scrumboard, close: () => void) {\n    if (!this.addListCtrl.value) {\n      return;\n    }\n\n    board.children.push({\n      id: ScrumboardComponent.nextId++,\n      label: this.addListCtrl.value,\n      children: []\n    });\n\n    close();\n\n    this.addListCtrl.setValue(null);\n  }\n\n  toggleStar(board: Scrumboard) {\n    board.starred = !board.starred;\n  }\n}\n","<div *ngIf=\"board$ | async as board\" class=\"h-full w-full overflow-hidden\" fxLayout=\"column\">\r\n\r\n  <div class=\"py-4 px-gutter\" fxFlex=\"none\" fxLayout=\"row\" fxLayoutAlign=\"start center\" vexContainer>\r\n    <h1 class=\"title m-0\">Tech Startup Board</h1>\r\n    <button (click)=\"toggleStar(board)\" class=\"ml-2\" mat-icon-button type=\"button\">\r\n      <mat-icon *ngIf=\"board.starred\" [icIcon]=\"icStar\" class=\"text-amber\"></mat-icon>\r\n      <mat-icon *ngIf=\"!board.starred\" [icIcon]=\"icStarBorder\"></mat-icon>\r\n    </button>\r\n\r\n    <span fxFlex></span>\r\n\r\n    <div *ngIf=\"scrumboardUsers?.length > 0\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n      <img *ngFor=\"let user of scrumboardUsers\"\r\n           [matTooltip]=\"user.name\"\r\n           [src]=\"user.imageSrc\"\r\n           class=\"avatar overlapping\">\r\n    </div>\r\n  </div>\r\n\r\n  <div (cdkDropListDropped)=\"dropList($event)\"\r\n       @stagger\r\n       [cdkDropListData]=\"board.children\"\r\n       cdkDropList\r\n       cdkDropListOrientation=\"horizontal\"\r\n       class=\"px-gutter pb-gutter min-h-0 overflow-x-auto\"\r\n       fxFlex=\"auto\"\r\n       fxLayout=\"row\"\r\n       fxLayoutAlign=\"start start\"\r\n       fxLayoutGap=\"24px\"\r\n       vexContainer>\r\n    <div *ngFor=\"let list of board.children; trackBy: trackById\"\r\n         @fadeInUp\r\n         [cdkDragData]=\"list\"\r\n         cdkDrag\r\n         cdkDropListGroup\r\n         class=\"rounded bg-app-bar overflow-hidden max-h-full w-full max-w-xxs\"\r\n         fxFlex=\"none\"\r\n         fxLayout=\"column\">\r\n      <div cdkDragHandle class=\"p-4 cursor-pointer\" fxFlex=\"none\">\r\n        <h2 class=\"subheading-2 font-medium m-0 select-none\" fxFlex=\"none\">{{ list.label }}</h2>\r\n      </div>\r\n\r\n      <vex-scrollbar class=\"flex-auto\">\r\n        <div (cdkDropListDropped)=\"drop($event)\"\r\n             [cdkDropListConnectedTo]=\"getConnectedList(board)\"\r\n             [cdkDropListData]=\"list.children\"\r\n             cdkDropList\r\n             class=\"px-4 pb-4\"\r\n             id=\"{{ list.id }}\">\r\n          <div (click)=\"open(board, list, card)\"\r\n               *ngFor=\"let card of list.children; trackBy: trackById\"\r\n               [cdkDragData]=\"card\"\r\n               cdkDrag\r\n               class=\"scrumboard-card card w-full cursor-pointer overflow-hidden\">\r\n\r\n            <div *ngIf=\"card.cover\" class=\"w-full h-40 overflow-hidden\">\r\n              <img [src]=\"card.cover.path\" class=\"object-cover w-full h-full\">\r\n            </div>\r\n\r\n            <div class=\"p-4\">\r\n              <div *ngIf=\"card.labels?.length > 0\" class=\"mb-2\" fxLayout=\"row\" fxLayoutGap=\"8px\">\r\n                <div *ngFor=\"let label of card.labels\"\r\n                     [ngClass]=\"label.bgClass\"\r\n                     class=\"label\"\r\n                     fxFlex></div>\r\n              </div>\r\n\r\n              <h3 class=\"body-2 m-0 select-none\">{{ card.title }}</h3>\r\n\r\n              <div *ngIf=\"card.dueDate || card.comments?.length > 0 || card.attachments?.length > 0 || card.users?.length > 0\"\r\n                   class=\"mt-2\"\r\n                   fxLayout=\"row\"\r\n                   fxLayoutGap=\"8px\">\r\n                <div *ngIf=\"card.dueDate\"\r\n                     [ngClass]=\"{ 'bg-green text-contrast-white': card.dueDate.done }\"\r\n                     class=\"box bg-app-bar text-secondary rounded caption\">\r\n                  <ic-icon [icon]=\"icNotifications\" inline=\"true\" size=\"16px\"></ic-icon>\r\n                  <span class=\"box-text\">{{ card.dueDate.date | dateTokens:'MMM, dd' }}</span>\r\n                </div>\r\n\r\n                <div *ngIf=\"card.comments?.length > 0\" class=\"box bg-app-bar text-secondary rounded caption\">\r\n                  <ic-icon [icon]=\"icInsertComment\" class=\"ml-1\" inline=\"true\" size=\"15px\"></ic-icon>\r\n                  <span class=\"box-text\">{{ card.comments.length }}</span>\r\n                </div>\r\n\r\n                <div *ngIf=\"card.attachments?.length > 0\" class=\"box bg-app-bar text-secondary rounded caption\">\r\n                  <ic-icon [icon]=\"icAttachFile\" inline=\"true\" size=\"16px\"></ic-icon>\r\n                  <span class=\"box-text\">{{ card.attachments.length }}</span>\r\n                </div>\r\n\r\n                <div *ngIf=\"card.users?.length > 0\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n                  <img *ngFor=\"let user of card.users\"\r\n                       [matTooltip]=\"user.name\"\r\n                       [src]=\"user.imageSrc\"\r\n                       class=\"avatar overlapping\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </vex-scrollbar>\r\n\r\n\r\n      <div #addCardOriginRef class=\"bg-hover\" fxFlex=\"none\">\r\n        <ng-template #addCardTemplate let-close=\"close\">\r\n          <div class=\"card px-4 py-6\">\r\n            <mat-form-field class=\"vex-dense-form-field\">\r\n              <mat-label>Card Title</mat-label>\r\n              <input [formControl]=\"addCardCtrl\" matInput placeholder=\"Enter your title...\">\r\n              <button (click)=\"createCard(list, close)\"\r\n                      class=\"-top-1\"\r\n                      color=\"primary\"\r\n                      mat-button\r\n                      matSuffix\r\n                      type=\"button\">CREATE\r\n              </button>\r\n            </mat-form-field>\r\n          </div>\r\n        </ng-template>\r\n\r\n        <button (click)=\"openAddCard(list, addCardTemplate, addCardOriginRef)\"\r\n                class=\"w-full\"\r\n                mat-button\r\n                type=\"button\">\r\n          <ic-icon [icon]=\"icAdd\" class=\"mr-1 -ml-1\" inline=\"true\"></ic-icon>\r\n          <span>ADD CARD</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div #addListOriginRef class=\"w-full max-w-xxs rounded bg-app-bar\" fxFlex=\"none\">\r\n      <ng-template #addListTemplate let-close=\"close\">\r\n        <div class=\"card px-4 pt-3 pb-2\">\r\n          <mat-form-field class=\"vex-dense-form-field\">\r\n            <mat-label>List Title</mat-label>\r\n            <input [formControl]=\"addListCtrl\" matInput placeholder=\"Enter your title...\">\r\n          </mat-form-field>\r\n\r\n          <div class=\"mt-3\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <button (click)=\"close()\" class=\"text-secondary w-8 h-8 leading-none\" mat-icon-button type=\"button\">\r\n              <mat-icon [icIcon]=\"icClose\" size=\"18px\"></mat-icon>\r\n            </button>\r\n            <button (click)=\"createList(board, close)\" color=\"primary\" mat-button type=\"button\">CREATE</button>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n\r\n      <button (click)=\"openAddList(board, addListTemplate, addListOriginRef)\"\r\n              class=\"w-full\"\r\n              mat-button\r\n              type=\"button\">\r\n        <ic-icon [icon]=\"icAdd\" class=\"mr-1 -ml-1\" inline=\"true\"></ic-icon>\r\n        <span>ADD LIST</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ScrumboardRoutingModule } from './scrumboard-routing.module';\nimport { ScrumboardComponent } from './scrumboard.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ScrollbarModule } from '../../../../@vex/components/scrollbar/scrollbar.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { DateTokensModule } from '../../../../@vex/pipes/date-tokens/date-tokens.module';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ScrumboardDialogModule } from './components/scrumboard-dialog/scrumboard-dialog.module';\nimport { PopoverModule } from '../../../../@vex/components/popover/popover.module';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ContainerModule } from '../../../../@vex/directives/container/container.module';\n\n\n@NgModule({\n  declarations: [ScrumboardComponent],\n  imports: [\n    CommonModule,\n    ScrumboardRoutingModule,\n    FlexLayoutModule,\n    ScrollbarModule,\n    MatButtonModule,\n    DragDropModule,\n    IconModule,\n    DateTokensModule,\n    MatTooltipModule,\n    ScrumboardDialogModule,\n    PopoverModule,\n    MatInputModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    ContainerModule\n  ]\n})\nexport class ScrumboardModule {\n}\n"],"sourceRoot":"webpack:///"}