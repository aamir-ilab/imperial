{"version":3,"sources":["./src/app/admin/clients/clients-routing.module.ts","./src/app/admin/clients/clients.component.ts","./src/app/admin/clients/clients.component.html","./src/app/admin/clients/clients.module.ts"],"names":[],"mappings":"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","file":"admin-clients-clients-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { VexRoutes } from '../../../@vex/interfaces/vex-route.interface';\r\nimport { ClientsComponent } from './clients.component';\r\n\r\n\r\nconst routes: VexRoutes = [\r\n  {\r\n    path: '',\r\n    component: ClientsComponent,\r\n    data: {\r\n      toolbarShadowEnabled: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ClientsRoutingModule {\r\n}\r\n","import { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { Observable, of, ReplaySubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n// import { client } from './interfaces/client.model';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TableColumn } from '../../../@vex/interfaces/table-column.interface';\nimport { aioTableData, aioTableLabels } from '../../../static-data/aio-table-data';\nimport { ClientCreateUpdateComponent } from './client-create-update/client-create-update.component';\nimport icEdit from '@iconify/icons-ic/twotone-edit';\nimport icDelete from '@iconify/icons-ic/twotone-delete';\nimport icSearch from '@iconify/icons-ic/twotone-search';\nimport icAdd from '@iconify/icons-ic/twotone-add';\nimport icFilterList from '@iconify/icons-ic/twotone-filter-list';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport icMoreHoriz from '@iconify/icons-ic/twotone-more-horiz';\nimport icFolder from '@iconify/icons-ic/twotone-folder';\nimport { fadeInUp400ms } from '../../../@vex/animations/fade-in-up.animation';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldDefaultOptions } from '@angular/material/form-field';\nimport { stagger40ms } from '../../../@vex/animations/stagger.animation';\nimport { FormControl } from '@angular/forms';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { MatSelectChange } from '@angular/material/select';\nimport icPhone from '@iconify/icons-ic/twotone-phone';\nimport icMail from '@iconify/icons-ic/twotone-mail';\nimport icMap from '@iconify/icons-ic/twotone-map';\nimport { Client } from 'src/app/models/client.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { User } from 'src/app/models/user.model';\n\n\n@UntilDestroy()\n@Component({\n  selector: 'vex-clients',\n  templateUrl: './clients.component.html',\n  styleUrls: ['./clients.component.scss'],\n  animations: [\n    fadeInUp400ms,\n    stagger40ms\n  ],\n  providers: [\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: {\n        appearance: 'standard'\n      } as MatFormFieldDefaultOptions\n    }\n  ]\n})\nexport class ClientsComponent implements OnInit, AfterViewInit {\n\n  layoutCtrl = new FormControl('boxed');\n\n  /**\n   * Simulating a service with HTTP that returns Observables\n   * You probably want to remove this and do all requests in a service with HTTP\n   */\n  subject$: ReplaySubject<Client[]> = new ReplaySubject<Client[]>(1);\n  data$: Observable<Client[]> = this.subject$.asObservable();\n  clients: Client[];\n\n  @Input()\n  columns: TableColumn<Client>[] = [\n    { label: 'Checkbox', property: 'checkbox', type: 'checkbox', visible: true },\n    // { label: 'Image', property: 'profilePhoto', type: 'image', visible: true },\n    { label: 'Name', property: 'name', type: 'text', visible: true, cssClasses: ['font-medium'] },\n    { label: 'First Name', property: 'firstName', type: 'text', visible: false },\n    { label: 'Last Name', property: 'lastName', type: 'text', visible: false },\n    { label: 'Email', property: 'emailAddress', type: 'text', visible: true },\n    { label: 'Company Name', property: 'companyName', type: 'text', visible: true },\n    { label: 'Company Address', property: 'companyAddress', type: 'text', visible: true },\n    { label: 'Company PhoneNumber', property: 'companyPhoneNumber', type: 'text', visible: true },\n    { label: 'Email Address AccountsTeam', property: 'emailAddressAccountsTeam', type: 'text', visible: false },\n    { label: 'VATNumber', property: 'VATNumber', type: 'text', visible: false },\n    { label: 'CompanyRegNumber', property: 'companyRegNumber', type: 'text', visible: false },\n    { label: 'Position', property: 'position', type: 'text', visible: true },\n    { label: 'Actions', property: 'actions', type: 'button', visible: true },\n    { label: 'ID', property: '_id', type: 'button', visible: false }\n  ];\n  pageSize = 10;\n  pageSizeOptions: number[] = [5, 10, 20, 50];\n  dataSource: MatTableDataSource<Client> | null;\n  selection = new SelectionModel<Client>(true, []);\n  searchCtrl = new FormControl();\n\n  labels = aioTableLabels;\n\n  icPhone = icPhone;\n  icMail = icMail;\n  icMap = icMap;\n  icEdit = icEdit;\n  icSearch = icSearch;\n  icDelete = icDelete;\n  icAdd = icAdd;\n  icFilterList = icFilterList;\n  icMoreHoriz = icMoreHoriz;\n  icFolder = icFolder;\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  constructor(private dialog: MatDialog,\n    private authService:AuthService) {\n  }\n\n  get visibleColumns() {\n    return this.columns.filter(column => column.visible).map(column => column.property);\n  }\n\n  /**\n   * Example on how to get data and pass it to the table - usually you would want a dedicated service with a HTTP request for this\n   * We are simulating this request here.\n   */\n  getData() {\n    this.authService.getTypeUsers('Client').subscribe((clients)=>{\n      of(clients.map(client =>new Client(client))).subscribe(clientes =>{\n        console.log('123213123')  \n        console.log(clientes)  \n        this.subject$.next(clientes)\n      });\n    })\n    // return of(aioTableData.map(client => new Client(client)));\n  }\n\n  ngOnInit() {\n    this.getData();\n\n    this.dataSource = new MatTableDataSource();\n\n    this.data$.pipe(\n      filter<Client[]>(Boolean)\n    ).subscribe(clients => {\n      this.clients = clients;\n      this.dataSource.data = clients;\n    });\n\n    this.searchCtrl.valueChanges.pipe(\n      untilDestroyed(this)\n    ).subscribe(value => this.onFilterChange(value));\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  createClient() {\n    this.dialog.open(ClientCreateUpdateComponent).afterClosed().subscribe((client: Client) => {\n      /**\n       * Client is the updated client (if the user pressed Save - otherwise it's null)\n       */\n      if (client) {\n        /**\n         * Here we are updating our local array.\n         * You would probably make an HTTP request here.\n         */\n        this.authService.register(client, 'Client').subscribe((res)=>{\n          console.log('new created client')\n          this.authService.openSnackbar('New Client Added!');\n        })\n        this.clients.unshift(new Client(client));\n        this.subject$.next(this.clients);\n      }\n    });\n  }\n\n  updateClient(client: Client) {\n    this.dialog.open(ClientCreateUpdateComponent, {\n      data: client\n    }).afterClosed().subscribe(updatedClient => {\n      /**\n       * Client is the updated client (if the user pressed Save - otherwise it's null)\n       */\n      if (updatedClient) {\n        /**\n         * Here we are updating our local array.\n         * You would probably make an HTTP request here.\n         */\n        console.log('********')\n        console.log(updatedClient)\n        this.authService.updateUser(updatedClient).subscribe((res =>{\n            this.authService.openSnackbar('Updated Successfully!')\n        }))\n        const index = this.clients.findIndex((existingClient) => existingClient.id === updatedClient.id);\n        this.clients[index] = new Client(updatedClient);\n        this.subject$.next(this.clients);\n      }\n    });\n  }\n\n  deleteClient(client: Client) {\n    /**\n     * Here we are updating our local array.\n     * You would probably make an HTTP request here.\n     */\n      this.authService.deleteUser(client,'Client').subscribe((res =>{\n      this.authService.openSnackbar('Removed Successfully!')\n  }))\n    this.clients.splice(this.clients.findIndex((existingClient) => existingClient.id === client.id), 1);\n    this.selection.deselect(client);\n    this.subject$.next(this.clients);\n  }\n\n  deleteClients(clients: Client[]) {\n    /**\n     * Here we are updating our local array.\n     * You would probably make an HTTP request here.\n     */\n    clients.forEach(c =>{\n      this.authService.deleteUser(c,'Client').subscribe((res) =>{\n        console.log(res);\n        // this.authService.openSnackbar('Removed Successfully!')\n    })});\n        // this.authService.openSnackbar('Removed Successfully!')\n\n    clients.forEach(c => this.deleteClient(c));\n  }\n\n  onFilterChange(value: string) {\n    if (!this.dataSource) {\n      return;\n    }\n    value = value.trim();\n    value = value.toLowerCase();\n    this.dataSource.filter = value;\n  }\n\n  toggleColumnVisibility(column, event) {\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    column.visible = !column.visible;\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  trackByProperty<T>(index: number, column: TableColumn<T>) {\n    return column.property;\n  }\n\n  onLabelChange(change: MatSelectChange, row: Client) {\n    const index = this.clients.findIndex(c => c === row);\n    // this.clients[index].labels = change.value;\n    this.subject$.next(this.clients);\n  }\n\n}\n","<vex-page-layout>\r\n\r\n  <vex-page-layout-header class=\"pb-16\" fxLayout=\"column\" fxLayoutAlign=\"center start\">\r\n    <div [class.container]=\"layoutCtrl.value === 'boxed'\"\r\n         [class.px-gutter]=\"layoutCtrl.value === 'fullwidth'\"\r\n         class=\"w-full flex flex-col sm:flex-row justify-between\">\r\n      <div>\r\n        <h1 class=\"title mt-0 mb-1\">Clients Management</h1>\r\n        <!-- <vex-breadcrumbs [crumbs]=\"['admin', 'clients']\"></vex-breadcrumbs> -->\r\n      </div>\r\n\r\n      <!-- <mat-button-toggle-group [formControl]=\"layoutCtrl\" class=\"mt-4 sm:mt-0\">\r\n        <mat-button-toggle value=\"boxed\">BOXED</mat-button-toggle>\r\n        <mat-button-toggle value=\"fullwidth\">FULL-WIDTH</mat-button-toggle>\r\n      </mat-button-toggle-group> -->\r\n    </div>\r\n  </vex-page-layout-header>\r\n\r\n  <vex-page-layout-content [class.container]=\"layoutCtrl.value === 'boxed'\"\r\n                           [class.px-gutter]=\"layoutCtrl.value === 'fullwidth'\"\r\n                           class=\"-mt-6\">\r\n\r\n    <div class=\"card overflow-auto -mt-16\">\r\n      <div class=\"bg-app-bar px-6 h-16 border-b sticky left-0\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n        <h2 class=\"title my-0 ltr:pr-4 rtl:pl-4 ltr:mr-4 rtl:ml-4 ltr:border-r rtl:border-l\" fxFlex=\"none\" fxHide.xs>\r\n          <span *ngIf=\"selection.isEmpty()\">Clients</span>\r\n          <span *ngIf=\"selection.hasValue()\">{{ selection.selected.length }}\r\n            Client<span *ngIf=\"selection.selected.length > 1\">s</span> selected</span>\r\n        </h2>\r\n\r\n        <div *ngIf=\"selection.hasValue()\" class=\"mr-4 pr-4 border-r\" fxFlex=\"none\">\r\n          <button (click)=\"deleteClients(selection.selected)\"\r\n                  color=\"primary\"\r\n                  mat-icon-button\r\n                  matTooltip=\"Delete selected\"\r\n                  type=\"button\">\r\n            <mat-icon [icIcon]=\"icDelete\"></mat-icon>\r\n          </button>\r\n\r\n          <button color=\"primary\" mat-icon-button matTooltip=\"Another action\" type=\"button\">\r\n            <mat-icon [icIcon]=\"icFolder\"></mat-icon>\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"bg-card rounded-full border px-4\"\r\n             fxFlex=\"400px\"\r\n             fxFlex.lt-md=\"auto\"\r\n             fxHide.xs\r\n             fxLayout=\"row\"\r\n             fxLayoutAlign=\"start center\">\r\n          <ic-icon [icIcon]=\"icSearch\" size=\"20px\"></ic-icon>\r\n          <input [formControl]=\"searchCtrl\"\r\n                 class=\"px-4 py-3 border-0 outline-none w-full bg-transparent\"\r\n                 placeholder=\"Search...\"\r\n                 type=\"search\">\r\n        </div>\r\n\r\n        <span fxFlex></span>\r\n\r\n        <button class=\"ml-4\" fxFlex=\"none\" fxHide.gt-xs mat-icon-button type=\"button\">\r\n          <mat-icon [icIcon]=\"icSearch\"></mat-icon>\r\n        </button>\r\n\r\n        <button [matMenuTriggerFor]=\"columnFilterMenu\"\r\n                class=\"ml-4\"\r\n                fxFlex=\"none\"\r\n                mat-icon-button\r\n                matTooltip=\"Filter Columns\"\r\n                type=\"button\">\r\n          <mat-icon [icIcon]=\"icFilterList\"></mat-icon>\r\n        </button>\r\n\r\n        <button (click)=\"createClient()\"\r\n                class=\"ml-4\"\r\n                color=\"primary\"\r\n                fxFlex=\"none\"\r\n                mat-mini-fab\r\n                matTooltip=\"Add Client\"\r\n                type=\"button\">\r\n          <mat-icon [icIcon]=\"icAdd\"></mat-icon>\r\n        </button>\r\n      </div>\r\n\r\n      <table @stagger [dataSource]=\"dataSource\" class=\"w-full\" mat-table matSort>\r\n\r\n        <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n        <!-- Checkbox Column -->\r\n        <ng-container matColumnDef=\"checkbox\">\r\n          <th *matHeaderCellDef mat-header-cell>\r\n            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                          [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                          [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                          color=\"primary\">\r\n            </mat-checkbox>\r\n          </th>\r\n          <td *matCellDef=\"let row\" class=\"w-4\" mat-cell>\r\n            <mat-checkbox (change)=\"$event ? selection.toggle(row) : null\"\r\n                          (click)=\"$event.stopPropagation()\"\r\n                          [checked]=\"selection.isSelected(row)\"\r\n                          color=\"primary\">\r\n            </mat-checkbox>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Image Column -->\r\n        <ng-container matColumnDef=\"image\">\r\n          <th *matHeaderCellDef mat-header-cell></th>\r\n          <td *matCellDef=\"let row\" class=\"w-8 min-w-8 pr-0\" mat-cell>\r\n            <!-- <img [src]=\"row['profilePhoto']\" class=\"avatar h-8 w-8 align-middle\"> -->\r\n            <img src=\"assets/img/avatars/1.jpg\" class=\"avatar h-8 w-8 align-middle\">\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Text Columns -->\r\n        <ng-container *ngFor=\"let column of columns; trackBy: trackByProperty\">\r\n          <ng-container *ngIf=\"column.type === 'text'\" [matColumnDef]=\"column.property\">\r\n            <th *matHeaderCellDef class=\"uppercase\" mat-header-cell mat-sort-header> {{ column.label }}</th>\r\n            <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>{{ row[column.property] }}</td>\r\n          </ng-container>\r\n        </ng-container>\r\n\r\n        <!-- Contact Column -->\r\n        <ng-container matColumnDef=\"contact\">\r\n          <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n          <td *matCellDef=\"let row\" mat-cell>\r\n            <div class=\"flex\">\r\n              <a (click)=\"$event.stopPropagation()\"\r\n                 class=\"w-8 h-8 leading-none flex items-center justify-center hover:bg-hover text-primary bg-primary-light\"\r\n                 mat-icon-button>\r\n                <mat-icon [icIcon]=\"icPhone\" size=\"18px\"></mat-icon>\r\n              </a>\r\n\r\n              <a (click)=\"$event.stopPropagation()\"\r\n                 class=\"w-8 h-8 leading-none flex items-center justify-center ml-1 hover:bg-hover text-teal bg-teal-light\"\r\n                 mat-icon-button>\r\n                <mat-icon [icIcon]=\"icMail\" size=\"18px\"></mat-icon>\r\n              </a>\r\n\r\n              <a (click)=\"$event.stopPropagation()\"\r\n                 class=\"w-8 h-8 leading-none flex items-center justify-center ml-1 hover:bg-hover text-green bg-green-light\"\r\n                 mat-icon-button>\r\n                <mat-icon [icIcon]=\"icMap\" size=\"18px\"></mat-icon>\r\n              </a>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Label Column -->\r\n        <ng-container matColumnDef=\"labels\">\r\n          <th *matHeaderCellDef class=\"uppercase\" mat-header-cell mat-sort-header>Labels</th>\r\n          <td *matCellDef=\"let row\" mat-cell>\r\n            <div (click)=\"$event.stopPropagation()\" fxLayoutAlign=\"start center\" fxLayoutGap=\"4px\">\r\n              <div *ngFor=\"let label of row.labels\"\r\n                   [ngClass]=\"[label.textClass, label.bgClass]\"\r\n                   class=\"rounded px-2 py-1 font-medium text-xs\"\r\n                   fxFlex=\"none\">\r\n                {{ label.text }}\r\n              </div>\r\n              <div (click)=\"labelSelect.open()\"\r\n                   class=\"text-secondary bg-base text-hint cursor-pointer hover:bg-hover\"\r\n                   fxFlex=\"none\"\r\n                   fxLayout=\"row\"\r\n                   fxLayoutAlign=\"center center\">\r\n                <ic-icon [icon]=\"icAdd\" size=\"18px\"></ic-icon>\r\n              </div>\r\n              <mat-select #labelSelect=\"matSelect\"\r\n                          (selectionChange)=\"onLabelChange($event, row)\"\r\n                          [value]=\"row.labels\"\r\n                          class=\"invisible w-0 h-0 text-sm\"\r\n                          fxFlex=\"0 1 0px\"\r\n                          multiple>\r\n                <mat-option *ngFor=\"let label of labels\" [value]=\"label\">\r\n                  <div [ngClass]=\"label.previewClass\"\r\n                       class=\"h-6 w-6 align-middle ltr:mr-2 rtl:ml-2 rounded inline-block\"></div>\r\n                  <span>{{ label.text }}</span>\r\n                </mat-option>\r\n              </mat-select>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Action Column -->\r\n        <ng-container matColumnDef=\"actions\">\r\n          <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n          <td *matCellDef=\"let row\" class=\"w-10 text-secondary\" mat-cell>\r\n            <button (click)=\"$event.stopPropagation()\"\r\n                    [matMenuTriggerData]=\"{ client: row }\"\r\n                    [matMenuTriggerFor]=\"actionsMenu\"\r\n                    mat-icon-button\r\n                    type=\"button\">\r\n              <mat-icon [icIcon]=\"icMoreHoriz\"></mat-icon>\r\n            </button>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\r\n        <tr (click)=\"updateClient(row)\"\r\n            *matRowDef=\"let row; columns: visibleColumns;\"\r\n            @fadeInUp\r\n            class=\"hover:bg-hover trans-ease-out cursor-pointer\"\r\n            mat-row></tr>\r\n      </table>\r\n\r\n      <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" [pageSize]=\"pageSize\" class=\"sticky left-0\"></mat-paginator>\r\n    </div>\r\n\r\n  </vex-page-layout-content>\r\n\r\n</vex-page-layout>\r\n\r\n<mat-menu #columnFilterMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n  <button (click)=\"toggleColumnVisibility(column, $event)\" *ngFor=\"let column of columns\"\r\n          class=\"checkbox-item mat-menu-item\">\r\n    <mat-checkbox (click)=\"$event.stopPropagation()\" [(ngModel)]=\"column.visible\" color=\"primary\">\r\n      {{ column.label }}\r\n    </mat-checkbox>\r\n  </button>\r\n</mat-menu>\r\n\r\n<mat-menu #actionsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n  <ng-template let-client=\"client\" matMenuContent>\r\n    <button (click)=\"updateClient(client)\" mat-menu-item>\r\n      <mat-icon [icIcon]=\"icEdit\"></mat-icon>\r\n      <span>Modify</span>\r\n    </button>\r\n    <button (click)=\"deleteClient(client)\" mat-menu-item>\r\n      <mat-icon [icIcon]=\"icDelete\"></mat-icon>\r\n      <span>Delete</span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ClientsRoutingModule } from './clients-routing.module';\nimport { ClientsComponent } from './clients.component';\nimport { PageLayoutModule } from '../../../@vex/components/page-layout/page-layout.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BreadcrumbsModule } from '../../../@vex/components/breadcrumbs/breadcrumbs.module';\nimport { ClientCreateUpdateModule } from './client-create-update/client-create-update.module';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ContainerModule } from '../../../@vex/directives/container/container.module';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\n\n@NgModule({\n  declarations: [ClientsComponent],\n  imports: [\n    CommonModule,\n    ClientsRoutingModule,\n    PageLayoutModule,\n    FlexLayoutModule,\n    BreadcrumbsModule,\n    ClientCreateUpdateModule,\n    MatPaginatorModule,\n    MatTableModule,\n    MatSortModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule,\n    IconModule,\n    FormsModule,\n    MatTooltipModule,\n    ReactiveFormsModule,\n    ContainerModule,\n    MatSelectModule,\n    MatButtonToggleModule,\n  ]\n})\nexport class ClientsModule {\n}\n"],"sourceRoot":"webpack:///"}