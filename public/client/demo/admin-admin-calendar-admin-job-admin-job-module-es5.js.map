{"version":3,"sources":["webpack:///src/app/admin/admin-calendar/admin-job/admin-job-routing.module.ts","webpack:///src/app/admin/admin-calendar/admin-job/admin-job.component.ts","webpack:///src/app/admin/admin-calendar/admin-job/admin-job.component.html","webpack:///src/app/admin/admin-calendar/admin-job/admin-job.module.ts","webpack:///src/app/admin/admin-calendar/admin-job/components/scrumboard-dialog/scrumboard-dialog.component.html","webpack:///src/app/admin/admin-calendar/admin-job/components/scrumboard-dialog/scrumboard-dialog.component.ts","webpack:///src/app/admin/admin-calendar/admin-job/components/scrumboard-dialog/scrumboard-dialog.module.ts"],"names":["routes","path","redirectTo","component","data","scrollDisabled","containerEnabled","AdminJobRoutingModule","forChild","imports","exports","id","AdminJobComponent","dialog","route","popover","authService","currentScrum","currentJob","addCardCtrl","trackById","icNotifications","icInsertComment","icAttachFile","icAdd","icClose","icStar","icStarBorder","console","log","currentScrumboard","setCurrentScrumboard","board$","paramMap","pipe","get","scrumboardId","find","board","list","card","setValue","open","width","maxWidth","disableClose","beforeClosed","Boolean","subscribe","value","index","children","findIndex","child","event","previousContainer","container","previousIndex","currentIndex","setStatusJob","res","openSnackbar","map","x","content","origin","position","originX","originY","overlayX","overlayY","close","push","nextId","title","starred","selector","templateUrl","styleUrls","animations","AdminJobModule","declarations","ScrumboardDialogComponent","dialogRef","fb","form","group","client","department","role","shiftDate","startTime","endTime","locationShift","purchaseOrderNo","additionalInformation","statusStr","fulfilled","total","totalStaff","clientId","timesheetId","users","commentCtrl","originalTimesheets","icAssignment","icDescription","icMoreVert","icDelete","icImage","labels","wokersSelect","AllUser","getAllJobAuth","tempArr","workerId","forEach","obj","accountType","profilePhoto","name","forename","surename","emailAddress","_id","length","newWorkerId","oldWorkerId","element","shiftDateStr","Date","toString","valueChanges","patchValue","removeTimesheetsJob","setJobWorkers","controls","resultArr","filter","id1","some","id2","elementR","subject","JobId","email","content1","firstName","lastName","content2","content3","btn","btn_link","link","sendEmail","sendemail_res","extension","attachment","setControl","array","a","comments","from","imageSrc","message","date","local","minus","seconds","ev","save","onWorker","ScrumboardDialogModule","entryComponents"],"mappings":"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","file":"admin-admin-calendar-admin-job-admin-job-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AdminJobComponent } from './admin-job.component';\nimport { VexRoutes } from '../../../../@vex/interfaces/vex-route.interface';\n\n\nconst routes: VexRoutes = [\n  {\n    path: '',\n    redirectTo: '1'\n  },\n  {\n    path: ':scrumboardId',\n    component: AdminJobComponent,\n    data: {\n      scrollDisabled: true,\n      containerEnabled: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminJobRoutingModule {\n}\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { ScrumboardList } from './interfaces/scrumboard-list.interface';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { ScrumboardCard } from './interfaces/scrumboard-card.interface';\nimport { trackById } from '../../../../@vex/utils/track-by';\nimport { scrumboards, scrumboardUsers } from '../../../../static-data/scrumboard';\nimport icNotifications from '@iconify/icons-ic/twotone-notifications';\nimport icInsertComment from '@iconify/icons-ic/twotone-insert-comment';\nimport icAttachFile from '@iconify/icons-ic/twotone-attach-file';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ScrumboardDialogComponent } from './components/scrumboard-dialog/scrumboard-dialog.component';\nimport { filter, map } from 'rxjs/operators';\nimport { ActivatedRoute } from '@angular/router';\nimport { Scrumboard } from './interfaces/scrumboard.interface';\nimport icAdd from '@iconify/icons-ic/twotone-add';\nimport { PopoverService } from '../../../../@vex/components/popover/popover.service';\nimport icClose from '@iconify/icons-ic/twotone-close';\nimport { FormControl } from '@angular/forms';\nimport icStar from '@iconify/icons-ic/twotone-star';\nimport icStarBorder from '@iconify/icons-ic/twotone-star-border';\nimport { stagger80ms } from '../../../../@vex/animations/stagger.animation';\nimport { fadeInUp400ms } from '../../../../@vex/animations/fade-in-up.animation';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'vex-admin-job',\n  templateUrl: './admin-job.component.html',\n  styleUrls: ['./admin-job.component.scss'],\n  animations: [\n    stagger80ms,\n    fadeInUp400ms\n  ]\n})\nexport class AdminJobComponent implements OnInit {\n\n  static nextId = 100;\n  currentScrum = this.authService.currentJob;\n  board$:any;\n\n  addCardCtrl = new FormControl();\n  // addListCtrl = new FormControl();\n\n  trackById = trackById;\n  icNotifications = icNotifications;\n  icInsertComment = icInsertComment;\n  icAttachFile = icAttachFile;\n  icAdd = icAdd;\n  icClose = icClose;\n  icStar = icStar;\n  icStarBorder = icStarBorder;\n  fulfilled;\n  // scrumboardUsers;\n\n  constructor(private dialog: MatDialog,\n              private route: ActivatedRoute,\n              private popover: PopoverService,\n              private authService:AuthService) { \n    console.log('admin job scrumboard construct')\n\n              }\n\n  ngOnInit() {\n    console.log('admin job scrumboard ng on int')\n    if(!this.authService.currentScrumboard)\n      this.authService.setCurrentScrumboard();\n    console.log(this.authService.currentScrumboard)\n    this.board$ =  this.route.paramMap.pipe(\n      map(paramMap => +paramMap.get('scrumboardId')),\n      map(scrumboardId => this.authService.currentScrumboard.find(board => board.id === scrumboardId))\n    );\n  }\n\n  open(board: Scrumboard, list: ScrumboardList, card: ScrumboardCard) {\n    this.addCardCtrl.setValue(null);\n\n    this.dialog.open(ScrumboardDialogComponent, {\n      data: { card, list, board },\n      width: '700px',\n      maxWidth: '100%',\n      disableClose: true\n    }).beforeClosed().pipe(\n      filter<ScrumboardCard>(Boolean)\n    ).subscribe(value => {\n      console.log(value);\n      const index = list.children.findIndex(child => child.id === card.id);\n      if (index > -1) {\n        list.children[index] = value;\n      }\n    });\n  }\n\n  drop(event: CdkDragDrop<any[]>) {\n    if (event.previousContainer === event.container) {\n      // alert('1')\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      // alert('2')\n      transferArrayItem(event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex);\n        // alert(event.container.id)\n        this.authService.setStatusJob(event.container.data[0].id,event.container.id).subscribe((res)=>{\n          console.log(res)\n          this.authService.openSnackbar('status has updated successfully');\n        });\n        // console.log('^&^&^&')\n        // console.log(event.container)\n      }\n  }\n\n  dropList(event: CdkDragDrop<ScrumboardList[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex);\n    }\n  }\n\n  getConnectedList(board: Scrumboard) {\n    return board.children.map(x => `${x.id}`);\n  }\n\n  openAddCard(list: ScrumboardList, content: TemplateRef<any>, origin: HTMLElement) {\n    this.popover.open({\n      content,\n      origin,\n      position: [\n        {\n          originX: 'center',\n          originY: 'bottom',\n          overlayX: 'center',\n          overlayY: 'bottom'\n        },\n        {\n          originX: 'center',\n          originY: 'bottom',\n          overlayX: 'center',\n          overlayY: 'top',\n        },\n      ]\n    });\n  }\n\n  openAddList(board: Scrumboard, content: TemplateRef<any>, origin: HTMLElement) {\n    this.popover.open({\n      content,\n      origin,\n      position: [\n        {\n          originX: 'center',\n          originY: 'bottom',\n          overlayX: 'center',\n          overlayY: 'top'\n        },\n        {\n          originX: 'center',\n          originY: 'bottom',\n          overlayX: 'center',\n          overlayY: 'top',\n        },\n      ]\n    });\n  }\n\n  createCard(list: ScrumboardList, close: () => void) {\n    if (!this.addCardCtrl.value) {\n      return;\n    }\n\n    list.children.push({\n      id: AdminJobComponent.nextId++,\n      title: this.addCardCtrl.value\n    });\n\n    close();\n\n    this.addCardCtrl.setValue(null);\n  }\n\n  // createList(board: Scrumboard, close: () => void) {\n  //   if (!this.addListCtrl.value) {\n  //     return;\n  //   }\n\n  //   board.children.push({\n  //     id: AdminJobComponent.nextId++,\n  //     label: this.addListCtrl.value,\n  //     children: []\n  //   });\n\n  //   close();\n\n  //   this.addListCtrl.setValue(null);\n  // }\n\n  toggleStar(board: Scrumboard) {\n    board.starred = !board.starred;\n  }\n}\n","<div *ngIf=\"board$ | async as board\" class=\"h-full w-full overflow-hidden\" fxLayout=\"column\">\r\n\r\n  <div class=\"py-4 px-gutter\" fxFlex=\"none\" fxLayout=\"row\" fxLayoutAlign=\"start center\" vexContainer>\r\n    <h1 class=\"title m-0\">{{currentScrum.title + ' ( ' + currentScrum.startTime + 'h ~ ' + currentScrum.endTime +'h )'}}</h1>\r\n    <button (click)=\"toggleStar(board)\" class=\"ml-2\" mat-icon-button type=\"button\">\r\n      <mat-icon *ngIf=\"board.starred\" [icIcon]=\"icStar\" class=\"text-amber\"></mat-icon>\r\n      <mat-icon *ngIf=\"!board.starred\" [icIcon]=\"icStarBorder\"></mat-icon>\r\n    </button>\r\n\r\n    <span fxFlex></span>\r\n\r\n    <!-- <div *ngIf=\"users?.length > 0\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n      <img *ngFor=\"let user of users\"\r\n           [matTooltip]=\"user.workerId\"\r\n           [src]=\"user.profilePhoto\"\r\n           class=\"avatar overlapping\">\r\n    </div> -->\r\n  </div>\r\n\r\n  <div (cdkDropListDropped)=\"dropList($event)\"\r\n       @stagger\r\n       [cdkDropListData]=\"board.children\"\r\n       cdkDropList\r\n       cdkDropListOrientation=\"horizontal\"\r\n       class=\"px-gutter pb-gutter min-h-0 overflow-x-auto\"\r\n       fxFlex=\"auto\"\r\n       fxLayout=\"row\"\r\n       fxLayoutAlign=\"start start\"\r\n       fxLayoutGap=\"24px\"\r\n       vexContainer>\r\n    <div *ngFor=\"let list of board.children; trackBy: trackById\"\r\n         @fadeInUp\r\n         [cdkDragData]=\"list\"\r\n         cdkDrag\r\n         cdkDropListGroup\r\n         class=\"rounded bg-app-bar overflow-hidden max-h-full w-full max-w-xxs\"\r\n         fxFlex=\"none\"\r\n         fxLayout=\"column\">\r\n      <div cdkDragHandle class=\"p-4 cursor-pointer\" fxFlex=\"none\">\r\n        <h2 class=\"subheading-2 font-medium m-0 select-none\" fxFlex=\"none\">{{ list.label }}</h2>\r\n      </div>\r\n\r\n      <vex-scrollbar class=\"flex-auto\">\r\n        <div (cdkDropListDropped)=\"drop($event)\"\r\n             [cdkDropListConnectedTo]=\"getConnectedList(board)\"\r\n             [cdkDropListData]=\"list.children\"\r\n             cdkDropList\r\n             class=\"px-4 pb-4\"\r\n             id=\"{{ list.id }}\">\r\n          <div (click)=\"open(board, list, card)\"\r\n               *ngFor=\"let card of list.children; trackBy: trackById\"\r\n               [cdkDragData]=\"card\"\r\n               cdkDrag\r\n               class=\"scrumboard-card card w-full cursor-pointer overflow-hidden\">\r\n\r\n            <!-- <div *ngIf=\"card.cover\" class=\"w-full h-40 overflow-hidden\">\r\n              <img [src]=\"card.cover.path\" class=\"object-cover w-full h-full\">\r\n            </div> -->\r\n\r\n            <div class=\"p-4\">\r\n              <div *ngIf=\"card.labels?.length > 0\" class=\"mb-2\" fxLayout=\"row\" fxLayoutGap=\"8px\">\r\n                <div *ngFor=\"let label of card.labels\"\r\n                     [ngClass]=\"label.bgClass\"\r\n                     class=\"label\"\r\n                     fxFlex></div>\r\n              </div>\r\n              \r\n\r\n              <!-- <h3 class=\"body-2 m-0 select-none\">client {{ card.client }} - {{card.total}} Workers need</h3> -->\r\n              <h3 class=\"body-2 m-0 select-none\">{{card.title}} -  {{card.timesheetId?.length}}/{{card.total}}</h3>\r\n\r\n              <div *ngIf=\"card.workerId?.length > 0\"\r\n                   class=\"mt-2\"\r\n                   fxLayout=\"row\"\r\n                   fxLayoutGap=\"8px\">\r\n                <!-- <div *ngIf=\"card.dueDate\"\r\n                     [ngClass]=\"{ 'bg-green text-contrast-white': card.dueDate.done }\"\r\n                     class=\"box bg-app-bar text-secondary rounded caption\">\r\n                  <ic-icon [icon]=\"icNotifications\" inline=\"true\" size=\"16px\"></ic-icon>\r\n                  <span class=\"box-text\">{{ card.dueDate.date | dateTokens:'MMM, dd' }}</span>\r\n                </div> -->\r\n\r\n                <!-- <div *ngIf=\"card.comments?.length > 0\" class=\"box bg-app-bar text-secondary rounded caption\">\r\n                  <ic-icon [icon]=\"icInsertComment\" class=\"ml-1\" inline=\"true\" size=\"15px\"></ic-icon>\r\n                  <span class=\"box-text\">{{ card.comments.length }}</span>\r\n                </div>\r\n\r\n                <div *ngIf=\"card.attachments?.length > 0\" class=\"box bg-app-bar text-secondary rounded caption\">\r\n                  <ic-icon [icon]=\"icAttachFile\" inline=\"true\" size=\"16px\"></ic-icon>\r\n                  <span class=\"box-text\">{{ card.attachments.length }}</span>\r\n                </div>\r\n-->\r\n                <div *ngIf=\"card.timesheetId?.length > 0\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n                  <img *ngFor=\"let user of card.timesheetId\"\r\n                       [matTooltip]=\"user.workerId\"\r\n                       [src]=\"user.profilePhoto\"\r\n                       class=\"avatar overlapping\">\r\n                </div> \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </vex-scrollbar>\r\n\r\n\r\n      <div #addCardOriginRef class=\"bg-hover\" fxFlex=\"none\">\r\n        <ng-template #addCardTemplate let-close=\"close\">\r\n          <div class=\"card px-4 py-6\">\r\n            <mat-form-field class=\"vex-dense-form-field\">\r\n              <mat-label>Card Title</mat-label>\r\n              <input [formControl]=\"addCardCtrl\" matInput placeholder=\"Enter your title...\">\r\n              <button (click)=\"createCard(list, close)\"\r\n                      class=\"-top-1\"\r\n                      color=\"primary\"\r\n                      mat-button\r\n                      matSuffix\r\n                      type=\"button\">CREATE\r\n              </button>\r\n            </mat-form-field>\r\n          </div>\r\n        </ng-template>\r\n\r\n        <!-- <button (click)=\"openAddCard(list, addCardTemplate, addCardOriginRef)\"\r\n                class=\"w-full\"\r\n                mat-button\r\n                type=\"button\">\r\n          <ic-icon [icon]=\"icAdd\" class=\"mr-1 -ml-1\" inline=\"true\"></ic-icon>\r\n          <span>ADD CARD</span>\r\n        </button> -->\r\n      </div>\r\n    </div>\r\n\r\n    <!-- <div #addListOriginRef class=\"w-full max-w-xxs rounded bg-app-bar\" fxFlex=\"none\">\r\n      <ng-template #addListTemplate let-close=\"close\">\r\n        <div class=\"card px-4 pt-3 pb-2\">\r\n          <mat-form-field class=\"vex-dense-form-field\">\r\n            <mat-label>List Title</mat-label>\r\n            <input [formControl]=\"addListCtrl\" matInput placeholder=\"Enter your title...\">\r\n          </mat-form-field>\r\n\r\n          <div class=\"mt-3\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <button (click)=\"close()\" class=\"text-secondary w-8 h-8 leading-none\" mat-icon-button type=\"button\">\r\n              <mat-icon [icIcon]=\"icClose\" size=\"18px\"></mat-icon>\r\n            </button>\r\n            <button (click)=\"createList(board, close)\" color=\"primary\" mat-button type=\"button\">CREATE</button>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n\r\n      <button (click)=\"openAddList(board, addListTemplate, addListOriginRef)\"\r\n              class=\"w-full\"\r\n              mat-button\r\n              type=\"button\">\r\n        <ic-icon [icon]=\"icAdd\" class=\"mr-1 -ml-1\" inline=\"true\"></ic-icon>\r\n        <span>ADD LIST</span>\r\n      </button>\r\n    </div> -->\r\n  </div>\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AdminJobRoutingModule } from './admin-job-routing.module';\nimport { AdminJobComponent } from './admin-job.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ScrollbarModule } from '../../../../@vex/components/scrollbar/scrollbar.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { DateTokensModule } from '../../../../@vex/pipes/date-tokens/date-tokens.module';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ScrumboardDialogModule } from './components/scrumboard-dialog/scrumboard-dialog.module';\nimport { PopoverModule } from '../../../../@vex/components/popover/popover.module';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ContainerModule } from '../../../../@vex/directives/container/container.module';\n\n\n@NgModule({\n  declarations: [AdminJobComponent],\n  imports: [\n    CommonModule,\n    AdminJobRoutingModule,\n    FlexLayoutModule,\n    ScrollbarModule,\n    MatButtonModule,\n    DragDropModule,\n    IconModule,\n    DateTokensModule,\n    MatTooltipModule,\n    ScrumboardDialogModule,\n    PopoverModule,\n    MatInputModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    ContainerModule\n  ]\n})\nexport class AdminJobModule {\n}\n","<form (ngSubmit)=\"save()\" [formGroup]=\"form\">\r\n  <div class=\"mb-0 body-1\" mat-dialog-title>\r\n    <div>\r\n      <h2 class=\"title m-0\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n        <ic-icon [icon]=\"icAssignment\" class=\"ltr:mr-1 rtl:ml-1 text-secondary\" fxFlex=\"none\" size=\"24px\"></ic-icon>\r\n        <input [class.empty]=\"!form.get('title').value\"\r\n               class=\"hidden-input title bg-card\"\r\n               formControlName=\"title\"\r\n               fxFlex=\"auto\">\r\n        <button cdkFocusInitial class=\"text-secondary\" mat-dialog-close mat-icon-button type=\"button\">\r\n          <mat-icon [icIcon]=\"icClose\"></mat-icon>\r\n        </button>\r\n      </h2>\r\n\r\n      <div class=\"body-2 text-secondary ltr:ml-10 rtl:mr-10\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n        <span>{{ board?.label }}</span>\r\n        <div class=\"w-1 h-1 mx-2 bg-gray rounded-full\"></div>\r\n        <span>{{ list?.label }}</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"mt-3 ltr:ml-10 rtl:mr-10\" fxLayout=\"row wrap\" fxLayoutAlign=\"space-between start\">\r\n      <div class=\"members\" fxFlex=\"none\">\r\n        <div class=\"body-2 text-secondary\">WORKERS {{fulfilled}} / {{form.get('total').value}}</div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n          <img *ngFor=\"let user of form.get('timesheetId').value\"\r\n               [matTooltip]=\"user.workerId.workerId\"\r\n               [src]=\"user.profilePhoto\"\r\n               class=\"avatar\"\r\n               fxFlex=\"none\">\r\n          <div (click)=\"memberSelect.open()\"\r\n               class=\"avatar text-secondary bg-app-bar cursor-pointer\"\r\n               fxFlex=\"none\"\r\n               fxLayout=\"row\"\r\n               fxLayoutAlign=\"center center\">\r\n            <ic-icon [icon]=\"icAdd\" size=\"24px\"></ic-icon>\r\n          </div>\r\n          <mat-select #memberSelect=\"matSelect\"\r\n                      class=\"invisible w-0 h-0 text-sm\"\r\n                      formControlName=\"timesheetId\"\r\n                      fxFlex=\"0 1 0px\"\r\n                      (selectionChange)=\"onWorker($event)\"\r\n                      [(ngModel)]=\"newWorkerId \"\r\n                      multiple>\r\n            <mat-option *ngFor=\"let user of workerId\" [value]=\"user\">\r\n              <img [src]=\"user.profilePhoto\" class=\"avatar h-6 w-6 align-middle inline-block ltr:mr-2 rtl:ml-2\">\r\n              <span>{{ user.workerId }}</span>\r\n            </mat-option>\r\n          </mat-select>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- <div class=\"labels max-w-full\" fxFlex=\"none\">\r\n        <div class=\"body-2 text-secondary\">LABELS</div>\r\n        <div fxLayout=\"row wrap\" fxLayoutAlign=\"start center\" fxLayoutGap=\"4px\">\r\n          <div *ngFor=\"let label of form.get('labels').value\"\r\n               [ngClass]=\"[label.bgClass, label.textClass]\"\r\n               class=\"label\"\r\n               fxFlex=\"none\">\r\n            {{ label.label }}\r\n          </div>\r\n          <div (click)=\"labelSelect.open()\"\r\n               class=\"label text-secondary bg-app-bar cursor-pointer mt-1\"\r\n               fxFlex=\"none\"\r\n               fxLayout=\"row\"\r\n               fxLayoutAlign=\"center center\">\r\n            <ic-icon [icon]=\"icAdd\" size=\"24px\"></ic-icon>\r\n          </div>\r\n          <mat-select #labelSelect=\"matSelect\"\r\n                      class=\"invisible w-0 h-0 text-sm\"\r\n                      formControlName=\"labels\"\r\n                      fxFlex=\"0 1 0px\"\r\n                      multiple>\r\n            <mat-option *ngFor=\"let label of labels\" [value]=\"label\">\r\n              <div [ngClass]=\"label.bgClass\"\r\n                   class=\"h-6 w-6 align-middle ltr:mr-2 rtl:ml-2 rounded inline-block\"></div>\r\n              <span>{{ label.label }}</span>\r\n            </mat-option>\r\n          </mat-select>\r\n        </div>\r\n      </div> -->\r\n    </div>\r\n\r\n    <mat-divider class=\"-mx-6 mt-6\"></mat-divider>\r\n  </div>\r\n\r\n  <mat-dialog-content class=\"pb-6 content\">\r\n\r\n    <h2 class=\"body-2 font-medium m-0 mt-6 text-secondary\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n      <ic-icon [icon]=\"icDescription\" class=\"ltr:mr-4 rtl:ml-4\" fxFlex=\"none\" size=\"24px\"></ic-icon>\r\n      <span>Job Detail Info</span>\r\n    </h2>\r\n\r\n    <!-- <div class=\"ltr:ml-10 rtl:mr-10 mt-3\" fxLayout=\"column\">\r\n      <mat-form-field appearance=\"outline\" class=\"vex-dense-form-field body-1\">\r\n        <textarea cdkAutosizeMinRows=\"2\"\r\n                  formControlName=\"description\"\r\n                  matInput\r\n                  matTextareaAutosize\r\n                  placeholder=\"Add a description ...\"></textarea>\r\n      </mat-form-field>\r\n    </div> -->\r\n    <div fxLayout=\"row\" fxLayout.lt-sm=\"column\" fxLayoutGap=\"16px\" fxLayoutGap.lt-sm=\"0\">\r\n        <mat-form-field  appearance=\"outline\" fxFlex=\"auto\">\r\n            <mat-label>Client\r\n            </mat-label>\r\n            <input formControlName=\"client\"  matInput readonly required>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"auto\">\r\n            <mat-label>Department</mat-label>\r\n            <input formControlName=\"department\" matInput readonly required>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"auto\">\r\n          <mat-label>Role</mat-label>\r\n          <input formControlName=\"role\" matInput readonly required>\r\n      </mat-form-field>\r\n    </div>\r\n      <div fxLayout=\"row\" fxLayout.lt-sm=\"column\" fxLayoutGap=\"16px\" fxLayoutGap.lt-sm=\"0\">\r\n        <mat-form-field  appearance=\"outline\" fxFlex=\"auto\">\r\n            <mat-label>Shift Date\r\n            </mat-label>\r\n            <input formControlName=\"shiftDate\" matInput readonly required>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"auto\">\r\n            <mat-label>Start Time</mat-label>\r\n            <input formControlName=\"startTime\" matInput readonly required>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"auto\">\r\n          <mat-label>End Time</mat-label>\r\n          <input formControlName=\"endTime\" matInput readonly required>\r\n      </mat-form-field>\r\n  </div>\r\n    <!-- <h2 class=\"body-2 font-medium m-0 text-secondary mt-4\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n      <ic-icon [icon]=\"icAttachFile\" class=\"ltr:mr-4 rtl:ml-4\" fxFlex=\"none\" size=\"24px\"></ic-icon>\r\n      <span fxFlex=\"auto\">ATTACHMENTS</span>\r\n      <button color=\"primary\" mat-button type=\"button\">\r\n        <ic-icon [icon]=\"icAdd\" class=\"ltr:mr-1 rtl:ml-1 ltr:-ml-1 rtl:-mr-1\" inline=\"true\" size=\"18px\"></ic-icon>\r\n        <span>ADD AN ATTACHMENT</span>\r\n      </button>\r\n    </h2>\r\n\r\n    <div *ngIf=\"form.get('attachments').value?.length > 0\"\r\n         class=\"ltr:ml-10 rtl:mr-10 mt-3\"\r\n         gdColumns=\"1fr 1fr\"\r\n         gdColumns.xs=\"1fr\"\r\n         gdGap=\"16px\">\r\n      <div *ngFor=\"let attachment of form.get('attachments').value\"\r\n           class=\"border p-1 rounded\"\r\n           fxLayout=\"row\"\r\n           fxLayoutAlign=\"start center\">\r\n\r\n        <div *ngIf=\"isImageExtension(attachment.extension)\"\r\n             class=\"bg-app-bar rounded ltr:mr-3 rtl:ml-3 w-24 h-16 overflow-hidden relative\">\r\n          <img [src]=\"attachment.path\" class=\"object-cover w-full h-full\">\r\n        </div>\r\n\r\n        <div *ngIf=\"!isImageExtension(attachment.extension)\"\r\n             class=\"bg-app-bar p-1 rounded ltr:mr-3 rtl:ml-3 w-100 h-16 leading-none body-2\"\r\n             fxLayoutAlign=\"center center\">{{ attachment.extension }}</div>\r\n\r\n        <div fxFlex=\"auto\">\r\n          <h4 class=\"m-0 body-2 leading-snug text-secondary\">{{ attachment.name }}</h4>\r\n          <p class=\"m-0 caption leading-snug text-hint\">\r\n            <ic-icon *ngIf=\"isCover(attachment)\" [icon]=\"icStar\" inline=\"true\"></ic-icon>\r\n            <span>{{ attachment.size }}</span>\r\n          </p>\r\n        </div>\r\n\r\n        <button [matMenuTriggerData]=\"{ attachment: attachment }\"\r\n                [matMenuTriggerFor]=\"attachmentMenu\"\r\n                class=\"text-secondary ltr:ml-1 rtl:mr-1\"\r\n                mat-icon-button\r\n                type=\"button\">\r\n          <mat-icon [icIcon]=\"icMoreVert\"></mat-icon>\r\n        </button>\r\n      </div>\r\n    </div> -->\r\n\r\n    <!-- <mat-divider class=\"-mx-6 mt-6\"></mat-divider>\r\n\r\n    <h2 class=\"body-2 m-0 pt-6 text-secondary\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n      <ic-icon [icon]=\"icInsertComment\" class=\"ltr:mr-4 rtl:ml-4\" fxFlex=\"none\" size=\"24px\"></ic-icon>\r\n      <span fxFlex=\"auto\">COMMENTS</span>\r\n    </h2>\r\n\r\n    <div class=\"ltr:ml-10 rtl:mr-10 mt-2\">\r\n      <div *ngFor=\"let comment of form.get('comments').value\" class=\"mt-4\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n          <img [src]=\"comment.from.imageSrc\" class=\"avatar h-8 w-8 ltr:mr-3 rtl:ml-3\">\r\n          <div>\r\n            <h4 class=\"body-2 m-0 leading-snug\">{{ comment.from.name }}</h4>\r\n            <h5 class=\"caption text-secondary m-0 leading-snug\">{{ comment.date | relativeDateTime }}</h5>\r\n          </div>\r\n        </div>\r\n\r\n        <p class=\"m-0 mt-2 caption text-secondary\">{{ comment.message }}</p>\r\n      </div>\r\n\r\n      <div class=\"mt-6\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n        <img class=\"avatar w-8 h-8 ltr:mr-3 rtl:ml-3\" fxFlex=\"none\" src=\"assets/img/avatars/1.jpg\">\r\n        <mat-form-field appearance=\"outline\" class=\"vex-dense-form-field vex-flex-form-field\" fxFlex=\"auto\">\r\n          <input [formControl]=\"commentCtrl\" matInput placeholder=\"Write a comment ...\">\r\n          <button (click)=\"addComment()\" class=\"-top-1\" color=\"primary\" mat-button matSuffix type=\"button\">SEND</button>\r\n        </mat-form-field>\r\n      </div>\r\n    </div> -->\r\n  </mat-dialog-content>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button mat-dialog-close type=\"button\">CANCEL</button>\r\n    <button color=\"primary\" mat-raised-button type=\"submit\">SAVE</button>\r\n  </mat-dialog-actions>\r\n</form>\r\n\r\n\r\n<mat-menu #attachmentMenu=\"matMenu\">\r\n  <ng-template let-attachment=\"attachment\" matMenuContent>\r\n    <button (click)=\"makeCover(attachment)\" mat-menu-item>\r\n      <mat-icon [icIcon]=\"icImage\"></mat-icon>\r\n      <span>Make Cover</span>\r\n    </button>\r\n\r\n    <button (click)=\"remove(attachment)\" mat-menu-item>\r\n      <mat-icon [icIcon]=\"icDelete\"></mat-icon>\r\n      <span>Remove</span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>\r\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ScrumboardCard } from '../../interfaces/scrumboard-card.interface';\nimport { FormArray, FormBuilder, FormControl } from '@angular/forms';\nimport icAssignment from '@iconify/icons-ic/twotone-assignment';\nimport icAdd from '@iconify/icons-ic/twotone-add';\nimport { scrumboardLabels, scrumboardUsers } from '../../../../../../static-data/scrumboard';\nimport icDescription from '@iconify/icons-ic/twotone-description';\nimport icClose from '@iconify/icons-ic/twotone-close';\nimport { ScrumboardList } from '../../interfaces/scrumboard-list.interface';\nimport { Scrumboard } from '../../interfaces/scrumboard.interface';\nimport icMoreVert from '@iconify/icons-ic/twotone-more-vert';\nimport icDelete from '@iconify/icons-ic/twotone-delete';\nimport icImage from '@iconify/icons-ic/twotone-image';\nimport { ScrumboardAttachment } from '../../interfaces/scrumboard-attachment.interface';\nimport icAttachFile from '@iconify/icons-ic/twotone-attach-file';\nimport icInsertComment from '@iconify/icons-ic/twotone-insert-comment';\nimport { DateTime } from 'luxon';\nimport { ScrumboardComment } from '../../interfaces/scrumboard-comment.interface';\nimport icStar from '@iconify/icons-ic/twotone-star';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { formatDate } from '@angular/common';\n\n@Component({\n  selector: 'vex-scrumboard-dialog',\n  templateUrl: './scrumboard-dialog.component.html',\n  styleUrls: ['./scrumboard-dialog.component.scss']\n})\nexport class ScrumboardDialogComponent implements OnInit {\n\n  form = this.fb.group({\n    title:null,\n    client: null,\n    department:null,\n    role: null,\n    shiftDate:null,\n    startTime:null,\n    endTime:null,\n    locationShift:null,\n    purchaseOrderNo: null,\n    additionalInformation:null,\n    statusStr:null,\n    fulfilled:0,\n    total:0,\n    totalStaff:null,\n    clientId:null,\n    timesheetId:[],\n    // cover: null,\n    // attachments: this.fb.array([]),\n    // comments: this.fb.array([]),\n    users: [],\n    // labels: []\n  });\n\n  commentCtrl = new FormControl();\n  originalTimesheets:any[] = [];\n  icAssignment = icAssignment;\n  icDescription = icDescription;\n  icClose = icClose;\n  icAdd = icAdd;\n  icMoreVert = icMoreVert;\n  icDelete = icDelete;\n  icImage = icImage;\n  icAttachFile = icAttachFile;\n  icInsertComment = icInsertComment;\n  icStar = icStar;\n  jobId;\n  // users = scrumboardUsers;\n  labels = scrumboardLabels;\n  workerId:any;\n  list: ScrumboardList;\n  board: Scrumboard;\n  fulfilled;\n  newWorkerId:any;\n  oldWorkerId:any;\n  wokersSelect:any = [];\n  constructor(private dialogRef: MatDialogRef<ScrumboardDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) private data: {\n                card: any;\n                list: ScrumboardList;\n                board: Scrumboard;\n              },\n              private fb: FormBuilder,\n              private authService:AuthService) { }\n\n  async ngOnInit() {\n    if(!this.authService.AllUser){\n      await this.authService.getAllJobAuth();\n    }\n    console.log('<><><><><><><><><><><<><><><><><><><><>')\n    console.log(this.authService.AllUser)\n    var tempArr = this.authService.AllUser;\n    this.workerId = [];\n    tempArr.forEach(obj =>{\n      if(obj.accountType == 'Worker')\n        this.workerId.push({profilePhoto:obj.profilePhoto, name:`${obj.forename} ${obj.surename}`,workerId:obj.workerId,emailAddress:obj.emailAddress, id:obj._id});\n    });\n    console.log(this.workerId)\n    console.log(this.data.card)\n    // tempArr.filter(obj => if(obj.accountType == 'Worker'){ return {profilePhoto:obj.profilePhoto, };});\n    this.list = this.data.list;\n    this.board = this.data.board;\n    const card = this.data.card;\n    this.fulfilled = card.timesheetId.length;\n    this.originalTimesheets = card.timesheetId;\n    // this.workerId = card.workerId;\n    this.newWorkerId = [];\n    this.oldWorkerId = [];\n    card.timesheetId.forEach(element => {\n      this.newWorkerId.push({profilePhoto:element.profilePhoto, workerId:element.workerId, id:element.id});\n      this.oldWorkerId.push({profilePhoto:element.profilePhoto, workerId:element.workerId, id:element.id});\n    });\n    var shiftDateStr = formatDate(new Date(card.shiftDate), 'yyyy-MM-dd','en').toString();\n    console.log(card)\n    console.log(this.workerId)\n    this.form.valueChanges.subscribe(console.log);\n\n    this.form.patchValue({\n      title:card.title || null,\n      client:card.client ||  null,\n      department:card.department || null,\n      role: card.role || null,\n      shiftDate: shiftDateStr || null,\n      startTime:card.startTime || null,\n      endTime:card.endTime || null,\n      locationShift:card.locationShift || null,\n      purchaseOrderNo: card.purchaseOrderNo || null,\n      additionalInformation:card.additionalInformation || null,\n      statusStr:card.statusStr || null,\n      fulfilled:card.fulfilled || 0,\n      total:card.total || 0,\n      totalStaff:card.totalStaff || null,\n      clientId:card.clientId || null,\n      timesheetId:this.newWorkerId|| [],\n      users: card.users || [],\n      // labels: card.labels || []\n    });\n\n    // this.form.setControl('attachments', this.fb.array(card.attachments || []));\n    // this.form.setControl('comments', this.fb.array(card.comments || []));\n  }\n\n  save() {\n    console.log('.........../.././././')\n    // console.log(this.data.card.timesheetId[0].JobId)\n    console.log(this.newWorkerId)\n    if(this.originalTimesheets.length > 0){\n    this.authService.removeTimesheetsJob(this.originalTimesheets).subscribe((res)=>{\n      console.log(this.data.card.timesheetId)\n      console.log(this.data.card.id)\n                this.authService.setJobWorkers(this.newWorkerId,this.data.card.id).subscribe((res)=>{\n            // this.authService.setJobWorkers(JSON.stringify(this.newWorkerId)).subscribe((res)=>{\n            console.log('setJobWOrker')\n            console.log(res)\n          })\n          this.dialogRef.close(this.form.value);\n        })\n    }\n    else{\n      console.log('./.././././')\n      console.log(this.newWorkerId)\n      console.log(this.data.card.id)\n        this.authService.setJobWorkers(this.newWorkerId,this.data.card.id).subscribe((res)=>{\n      // this.authService.setJobWorkers(JSON.stringify(this.newWorkerId)).subscribe((res)=>{\n      console.log('setJobWOrker')\n      console.log(res)\n      this.authService.openSnackbar('updated Successfully')\n    })\n    this.dialogRef.close(this.form.value);\n    }\n    this.authService.openSnackbar('updated Successfully')\n    const controls = this.form.controls;\n    const resultArr = this.oldWorkerId.filter(({ id: id1 }) => !this.newWorkerId.some(({ id: id2 }) => id2 === id1));\n    if(resultArr.length > 0){\n      resultArr.forEach(elementR => {\n        var obj = {\n        subject : \"Your shift has been cancelled  \" + this.data.card.timesheetId[0].JobId,\n        name : elementR.workerId.forename + ' ' + elementR.workerId.surename,\n        email: elementR.workerId.emailAddress,\n        content1: `Your shift with ${this.data.card.clientId.firstName} ${this.data.card.clientId.lastName} has been cancelled.`,\n        content2: `We are sorry for any inconvenience this may have caused.`,\n        content3:`If you have any questions, please feel free to contact us.`,\n        btn:'LOGIN TO PORTAL',\n        btn_link:'http://imperial-recruitment.herokuapp.com/#/login',\n        link:''\n      };\n      console.log('obj');\n      console.log(obj)\n      this.authService.sendEmail(obj).subscribe((sendemail_res)=>{\n        console.log('crate job email')\n    })\n});  \n    }\n    this.newWorkerId.forEach(element => {\n            var obj = {\n            subject : \"You have been assigned a new shift \" + this.data.card.timesheetId[0].JobId,\n            name : element.name,\n            email: element.emailAddress,\n            content1: `You have been assigned a shift with ${this.data.card.clientId.firstName} ${this.data.card.clientId.lastName} `,\n            content2: `Please read the shift details carefully below. If you have any questions relating to the shift, or if you’re unable to attend this shift, please contact Imperial Recruitment as soon as possible on 020 7436 7424.`,\n            content3:`<span>Shift Date: ${controls.shiftDate.value} </span><br/>\n            <span>Shift start time: ${controls.startTime.value} – ${controls.endTime.value}</span><br/>\n            <span>Role: ${controls.role.value}</span><br/>`,\n            btn:'LOGIN TO PORTAL',\n            btn_link:'http://imperial-recruitment.herokuapp.com/#/login',\n            link:''\n          };\n          console.log('obj');\n          console.log(obj)\n          this.authService.sendEmail(obj).subscribe((sendemail_res)=>{\n            console.log('crate job email')\n        })\n    });  \n  }\n\n  isImageExtension(extension: string) {\n    return extension === 'jpg' || extension === 'png';\n  }\n\n  makeCover(attachment: ScrumboardAttachment) {\n    this.form.get('cover').setValue(attachment);\n  }\n\n  isCover(attachment: ScrumboardAttachment) {\n    return this.form.get('cover').value === attachment;\n  }\n\n  remove(attachment: ScrumboardAttachment) {\n    if (this.form.get('cover').value && attachment.id === this.form.get('cover').value.id) {\n      this.form.get('cover').setValue(null);\n    }\n\n    this.form.setControl('attachments', this.fb.array(this.form.get('attachments').value.filter(a => a !== attachment)));\n  }\n\n  addComment() {\n    if (!this.commentCtrl.value) {\n      return;\n    }\n\n    const comments = this.form.get('comments') as FormArray;\n    comments.push(new FormControl({\n      from: {\n        name: 'David Smith',\n        imageSrc: 'assets/img/avatars/1.jpg'\n      },\n      message: this.commentCtrl.value,\n      date: DateTime.local().minus({ seconds: 1 })\n    } as ScrumboardComment));\n\n    this.commentCtrl.setValue(null);\n  }\n  onWorker(ev){\n    // console.log('//////')\n    // console.log(ev)\n    this.fulfilled = ev.value.length;\n    // console.log(this.newWorkerId);\n    // console.log(this.workerId);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ScrumboardDialogComponent } from './scrumboard-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { RelativeDateTimeModule } from '../../../../../../@vex/pipes/relative-date-time/relative-date-time.module';\n\n\n@NgModule({\n  declarations: [ScrumboardDialogComponent],\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    ReactiveFormsModule,\n    IconModule,\n    FlexLayoutModule,\n    MatTooltipModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatMenuModule,\n    MatDividerModule,\n    RelativeDateTimeModule\n  ],\n  exports: [ScrumboardDialogComponent],\n  entryComponents: [ScrumboardDialogComponent]\n})\nexport class ScrumboardDialogModule {\n}\n"]}