{"version":3,"sources":["./src/app/pages/ui/components/components-overview/components/components-overview-dialogs/components-overview-dialogs.component.ts","./src/app/pages/ui/components/components-overview/components/components-overview-dialogs/components-overview-dialogs.component.html","./src/app/pages/ui/components/components-overview/components/components-overview-dialogs/components-overview-dialogs.module.ts"],"names":[],"mappings":"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","file":"default~components-dialogs-components-dialogs-module~components-overview-components-overview-module-es2015.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport icClose from '@iconify/icons-ic/twotone-close';\r\n\r\n@Component({\r\n  selector: 'vex-components-overview-dialogs',\r\n  templateUrl: './components-overview-dialogs.component.html',\r\n  styleUrls: ['./components-overview-dialogs.component.scss']\r\n})\r\nexport class ComponentsOverviewDialogsComponent {\r\n\r\n  result: string;\r\n\r\n  dialogHTML =\r\n    `<button mat-raised-button type=\"button\" (click)=\"openDialog()\" color=\"primary\">Open Dialog</button>\r\n<p *ngIf=\"result\">You chose: {{ result }}</p>\r\n`;\r\n\r\n  constructor(private dialog: MatDialog) {\r\n  }\r\n\r\n  openDialog() {\r\n    this.dialog.open(DemoDialogComponent, {\r\n      disableClose: false,\r\n      width: '400px'\r\n    }).afterClosed().subscribe(result => {\r\n      this.result = result;\r\n    });\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'vex-components-overview-demo-dialog',\r\n  template: `\r\n      <div mat-dialog-title fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <div>Question</div>\r\n          <button type=\"button\" mat-icon-button (click)=\"close('No answer')\" tabindex=\"-1\">\r\n              <mat-icon [icIcon]=\"icClose\"></mat-icon>\r\n          </button>\r\n      </div>\r\n\r\n      <mat-dialog-content>\r\n          <p>Do you like Pizza?</p>\r\n      </mat-dialog-content>\r\n\r\n\r\n      <mat-dialog-actions align=\"end\">\r\n          <button mat-button (click)=\"close('No')\">NO</button>\r\n          <button mat-button color=\"primary\" (click)=\"close('Yes')\">YES</button>\r\n      </mat-dialog-actions>\r\n  `\r\n})\r\nexport class DemoDialogComponent {\r\n\r\n  icClose = icClose;\r\n\r\n  constructor(private dialogRef: MatDialogRef<DemoDialogComponent>) {\r\n  }\r\n\r\n  close(answer: string) {\r\n    this.dialogRef.close(answer);\r\n  }\r\n}\r\n","<div class=\"card\" fxLayout=\"column\" fxLayout.gt-sm=\"row\">\r\n  <div class=\"p-6\">\r\n    <h2 class=\"title mt-0 mb-4\">Preview</h2>\r\n    <div fxLayout=\"column\" fxLayoutAlign=\"start center\" fxLayoutGap=\"24px\">\r\n      <button (click)=\"openDialog()\" color=\"primary\" mat-raised-button type=\"button\">OPEN DIALOG</button>\r\n      <p *ngIf=\"result\">You answered with: {{ result }}</p>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"border-l\" fxFlex>\r\n    <div class=\"p-6\">\r\n      <h2 class=\"title mt-0 mb-4\">Dialogs</h2>\r\n      <h4 class=\"body-2 text-secondary m-0\">&lt;mat-dialog&gt;</h4>\r\n    </div>\r\n\r\n    <mat-tab-group class=\"vex-tabs\">\r\n      <mat-tab label=\"DESCRIPTION\">\r\n        <p class=\"p-6\">\r\n          Dialogs contain text and UI controls. They retain focus until dismissed or a required action has been taken.\r\n          Use dialogs sparingly because they are interruptive.\r\n          <br>\r\n          <br><span class=\"semi-bold\">Some dialog types include:</span>\r\n          <br><span class=\"semi-bold\">Alerts</span> are urgent interruptions that inform about a situation and require\r\n          acknowledgement.\r\n          <br><span class=\"semi-bold\">Simple menus</span> display options for list items, whereas simple dialogs can\r\n          provide details or actions about a list item.\r\n          <br><span class=\"semi-bold\">Confirmation dialogs</span> require users to explicitly confirm a choice.\r\n        </p>\r\n      </mat-tab>\r\n      <mat-tab label=\"SOURCE CODE\">\r\n        <pre><code [vexHighlight]=\"dialogHTML\"></code></pre>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsOverviewDialogsComponent, DemoDialogComponent } from './components-overview-dialogs.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { HighlightModule } from '../../../../../../../@vex/components/highlight/highlight.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { IconModule } from '@visurel/iconify-angular';\n\n\n@NgModule({\n  declarations: [ComponentsOverviewDialogsComponent, DemoDialogComponent],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatTabsModule,\n    HighlightModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatIconModule,\n    IconModule\n  ],\n  exports: [ComponentsOverviewDialogsComponent],\n  entryComponents: [DemoDialogComponent]\n})\nexport class ComponentsOverviewDialogsModule {\n}\n"],"sourceRoot":"webpack:///"}