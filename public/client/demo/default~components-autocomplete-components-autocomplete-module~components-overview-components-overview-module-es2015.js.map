{"version":3,"sources":["./src/app/pages/ui/components/components-overview/components/components-overview-autocomplete/components-overview-autocomplete.component.ts","./src/app/pages/ui/components/components-overview/components/components-overview-autocomplete/components-overview-autocomplete.component.html","./src/app/pages/ui/components/components-overview/components/components-overview-autocomplete/components-overview-autocomplete.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACL;AACG;AAGwB;AAClB;;;;;;;;;;;;;;;ICE9C,iFACE;IAAA,qEACA;IAAA,2EAAqB;IAAA,uDAAgB;IAAA,4DAAO;IAC5C,2EAAyB;IAAA,8DAAE;IAAA,4DAAO;IAClC,2EAAqC;IAAA,uDAAkC;IAAA,4DAAO;IAChF,4DAAa;;;IAL6C,gFAAoB;IACvE,0DAAkB;IAAlB,2IAAkB;IACF,0DAAgB;IAAhB,8EAAgB;IAEA,0DAAkC;IAAlC,yGAAkC;;;;IAG3E,6EACE;IADM,yTAAS,wBAAiB,IAAC;IACjC,0EAAoE;IACtE,4DAAS;;;IADG,0DAAkB;IAAlB,kFAAkB;;;IAE9B,6EACE;IAAA,0EAA4E;IAC9E,4DAAS;;;IADG,0DAA0B;IAA1B,0FAA0B;;ADNrC,MAAM,uCAAuC;IALpD;QAOE,qBAAgB,GACd;;;;;;;;;CASH,CAAC;QAKA,WAAM,GAAmB;YACvB;gBACE,IAAI,EAAE,UAAU;gBAChB,UAAU,EAAE,QAAQ;gBACpB,+DAA+D;gBAC/D,IAAI,EAAE,0EAA0E;aACjF;YACD;gBACE,IAAI,EAAE,YAAY;gBAClB,UAAU,EAAE,QAAQ;gBACpB,iEAAiE;gBACjE,IAAI,EAAE,4EAA4E;aACnF;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,UAAU,EAAE,QAAQ;gBACpB,8DAA8D;gBAC9D,IAAI,EAAE,yEAAyE;aAChF;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,UAAU,EAAE,QAAQ;gBACpB,4DAA4D;gBAC5D,IAAI,EAAE,uEAAuE;aAC9E;SACF,CAAC;QAEF,YAAO,GAAG,sEAAO,CAAC;QAClB,oBAAe,GAAG,gFAAe,CAAC;KAcnC;IAZC,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,0DAAW,EAAE,CAAC;QACnC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CACrD,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CACrE,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,IAAY;QACvB,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAChC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAChE,CAAC;;8HA1DU,uCAAuC;uHAAvC,uCAAuC;QCbpD,yEACE;QAAA,yEACE;QAAA,wEAA4B;QAAA,kEAAO;QAAA,4DAAK;QAExC,oFACE;QAAA,4EAAW;QAAA,yEAAc;QAAA,4DAAY;QACrC,sEACA;QAAA,4FACE;QAAA,mJACE;;QAKJ,4DAAmB;QACnB,2IACE;QAEF,2IACE;QAEF,4EAAU;QAAA,0FAA8B;QAAA,4DAAW;QACrD,4DAAiB;QACnB,4DAAM;QAEN,0EACE;QAAA,2EACE;QAAA,yEAA4B;QAAA,wEAAY;QAAA,4DAAK;QAC7C,0EAAsC;QAAA,8EAAwB;QAAA,4DAAK;QACrE,4DAAM;QAEN,qFACE;QAAA,+EACE;QAAA,2EACE;QAAA,yEACE;QAAA,kLAEA;QAAA,iEACA;QAAA,iEAAI;QAAA,4EAA0B;QAAA,0FAA8B;QAAA,4DAAO;QACrE,4DAAI;QACJ,sEACE;QAAA,sEAAI;QAAA,yIAAwE;QAAA,4DAAK;QACjF,sEAAI;QAAA,gGAAoC;QAAA,4DAAK;QAC7C,sEAAI;QAAA,mIAAuE;QAAA,4DAAK;QAClF,4DAAK;QACP,4DAAM;QACR,4DAAU;QACV,+EACE;QAAA,uEAAK;QAAA,uEAA+C;QAAA,4DAAM;QAC5D,4DAAU;QACZ,4DAAgB;QAClB,4DAAM;QACR,4DAAM;;;QA9CO,0DAAyB;QAAzB,sFAAyB;QAElB,0DAA6C;QAA7C,0JAA6C;QAOvB,0DAAuB;QAAvB,qFAAuB;QAGnD,0DAAwB;QAAxB,sFAAwB;QA8BnB,2DAAiC;QAAjC,8FAAiC;;6FDnCvC,uCAAuC;cALnD,uDAAS;eAAC;gBACT,QAAQ,EAAE,sCAAsC;gBAChD,WAAW,EAAE,mDAAmD;gBAChE,SAAS,EAAE,CAAC,mDAAmD,CAAC;aACjE;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACwD;AAC9C;AACc;AAChB;AACI;AACH;AACD;AACF;AAC6C;AAC5C;;AAmB/C,MAAM,oCAAoC;;mHAApC,oCAAoC;kMAApC,oCAAoC,kBAdtC;YACP,4DAAY;YACZ,sEAAc;YACd,oFAAqB;YACrB,oEAAa;YACb,wEAAe;YACf,qEAAgB;YAChB,oEAAa;YACb,kEAAmB;YACnB,2FAAe;YACf,oEAAU;SACX;mIAGU,oCAAoC,mBAfhC,mHAAuC,aAEpD,4DAAY;QACZ,sEAAc;QACd,oFAAqB;QACrB,oEAAa;QACb,wEAAe;QACf,qEAAgB;QAChB,oEAAa;QACb,kEAAmB;QACnB,2FAAe;QACf,oEAAU,aAEF,mHAAuC;6FAEtC,oCAAoC;cAhBhD,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,mHAAuC,CAAC;gBACvD,OAAO,EAAE;oBACP,4DAAY;oBACZ,sEAAc;oBACd,oFAAqB;oBACrB,oEAAa;oBACb,wEAAe;oBACf,qEAAgB;oBAChB,oEAAa;oBACb,kEAAmB;oBACnB,2FAAe;oBACf,oEAAU;iBACX;gBACD,OAAO,EAAE,CAAC,mHAAuC,CAAC;aACnD","file":"default~components-autocomplete-components-autocomplete-module~components-overview-components-overview-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { CountryState } from '../../../../forms/form-elements/form-elements.component';\r\nimport icArrowDropDown from '@iconify/icons-ic/twotone-arrow-drop-down';\r\nimport icClose from '@iconify/icons-ic/twotone-close';\r\n\r\n@Component({\r\n  selector: 'vex-components-overview-autocomplete',\r\n  templateUrl: './components-overview-autocomplete.component.html',\r\n  styleUrls: ['./components-overview-autocomplete.component.scss']\r\n})\r\nexport class ComponentsOverviewAutocompleteComponent implements OnInit {\r\n\r\n  autocompleteHTML =\r\n    `<mat-input-container>\r\n  <mat-label>State</mat-label>\r\n  <input type=\"text\" matInput [matAutocomplete]=\"auto\" [formControl]=\"stateCtrl\">\r\n  <mat-autocomplete #auto=\"matAutocomplete\">\r\n    <mat-option *ngFor=\"let option of options\" [value]=\"option\">\r\n      {{ option }}\r\n    </mat-option>\r\n  </mat-autocomplete>\r\n</mat-input-container>\r\n`;\r\n\r\n  stateCtrl: FormControl;\r\n  filteredStates$: Observable<CountryState[]>;\r\n\r\n  states: CountryState[] = [\r\n    {\r\n      name: 'Arkansas',\r\n      population: '2.978M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Arkansas.svg\r\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Arkansas.svg'\r\n    },\r\n    {\r\n      name: 'California',\r\n      population: '39.14M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_California.svg\r\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_California.svg'\r\n    },\r\n    {\r\n      name: 'Florida',\r\n      population: '20.27M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Florida.svg\r\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Florida.svg'\r\n    },\r\n    {\r\n      name: 'Texas',\r\n      population: '27.47M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Texas.svg\r\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Texas.svg'\r\n    }\r\n  ];\r\n\r\n  icClose = icClose;\r\n  icArrowDropDown = icArrowDropDown;\r\n\r\n  ngOnInit() {\r\n    this.stateCtrl = new FormControl();\r\n    this.filteredStates$ = this.stateCtrl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(state => state ? this.filterStates(state) : this.states.slice())\r\n    );\r\n  }\r\n\r\n  filterStates(name: string) {\r\n    return this.states.filter(state =>\r\n      state.name.toLowerCase().indexOf(name.toLowerCase()) === 0);\r\n  }\r\n}\r\n","<div class=\"card\" fxLayout=\"column\" fxLayout.gt-sm=\"row\">\r\n  <div class=\"p-6\" fxFlex=\"none\">\r\n    <h2 class=\"title mt-0 mb-4\">Preview</h2>\r\n\r\n    <mat-form-field class=\"w-300 max-w-full\">\r\n      <mat-label>Select a State</mat-label>\r\n      <input [formControl]=\"stateCtrl\" [matAutocomplete]=\"auto\" matInput>\r\n      <mat-autocomplete #auto=\"matAutocomplete\">\r\n        <mat-option *ngFor=\"let state of filteredStates$ | async\" [value]=\"state.name\">\r\n          <img [src]=\"state.flag\" class=\"align-middle mr-4 shadow-6 h-6 inline-block\">\r\n          <span class=\"body-1\">{{ state.name }}</span>\r\n          <span class=\"text-hint\"> | </span>\r\n          <span class=\"caption text-secondary\">Population: {{ state.population }}</span>\r\n        </mat-option>\r\n      </mat-autocomplete>\r\n      <button (click)=\"stateCtrl.reset()\" *ngIf=\"stateCtrl.value\" mat-icon-button matSuffix type=\"button\">\r\n        <mat-icon [icIcon]=\"icClose\" [inline]=\"true\" size=\"24px\"></mat-icon>\r\n      </button>\r\n      <button *ngIf=\"!stateCtrl.value\" mat-icon-button matSuffix type=\"button\">\r\n        <mat-icon [icIcon]=\"icArrowDropDown\" [inline]=\"true\" size=\"24px\"></mat-icon>\r\n      </button>\r\n      <mat-hint>Add this hint for a better UX!</mat-hint>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div class=\"border-l\" fxFlex=\"auto\">\r\n    <div class=\"p-6\">\r\n      <h2 class=\"title mt-0 mb-4\">Autocomplete</h2>\r\n      <h4 class=\"body-2 text-secondary m-0\">&lt;mat-autocomplete&gt;</h4>\r\n    </div>\r\n\r\n    <mat-tab-group class=\"vex-tabs\">\r\n      <mat-tab label=\"DESCRIPTION\">\r\n        <div class=\"p-6\">\r\n          <p class=\"m-0\">\r\n            Input text can be used with autocomplete to help users who have limited literacy or who write in a foreign\r\n            language.\r\n            <br>\r\n            <br><span class=\"font-medium\">For example, autocomplete can:</span>\r\n          </p>\r\n          <ul>\r\n            <li>Suggest input as itâ€™s typed (refreshing suggestions with each keystroke)</li>\r\n            <li>Fill a field with default input text</li>\r\n            <li>Pressing the return button accepts the current autocomplete suggestion.</li>\r\n          </ul>\r\n        </div>\r\n      </mat-tab>\r\n      <mat-tab label=\"SOURCE CODE\">\r\n        <pre><code [vexHighlight]=\"autocompleteHTML\"></code></pre>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsOverviewAutocompleteComponent } from './components-overview-autocomplete.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HighlightModule } from '../../../../../../../@vex/components/highlight/highlight.module';\nimport { IconModule } from '@visurel/iconify-angular';\n\n\n@NgModule({\n  declarations: [ComponentsOverviewAutocompleteComponent],\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatIconModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    MatTabsModule,\n    ReactiveFormsModule,\n    HighlightModule,\n    IconModule\n  ],\n  exports: [ComponentsOverviewAutocompleteComponent]\n})\nexport class ComponentsOverviewAutocompleteModule {\n}\n"],"sourceRoot":"webpack:///"}