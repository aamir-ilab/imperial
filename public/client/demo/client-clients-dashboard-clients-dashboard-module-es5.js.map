{"version":3,"sources":["webpack:///node_modules/@iconify/icons-ic/twotone-add.js","webpack:///node_modules/@iconify/icons-ic/twotone-edit.js","webpack:///node_modules/@iconify/icons-ic/twotone-filter-list.js","webpack:///node_modules/@iconify/icons-ic/twotone-folder.js","webpack:///node_modules/@iconify/icons-ic/twotone-mail.js","webpack:///node_modules/@iconify/icons-ic/twotone-map.js","webpack:///src/@vex/animations/fade-in-up.animation.ts","webpack:///src/@vex/animations/stagger.animation.ts","webpack:///src/app/client/clients-dashboard/client-job-table/client-job-table.component.ts","webpack:///src/app/client/clients-dashboard/client-job-table/client-job-table.component.html","webpack:///src/app/client/clients-dashboard/client-job-table/customer-create-update/customer-create-update.component.ts","webpack:///src/app/client/clients-dashboard/client-job-table/customer-create-update/customer-create-update.component.html","webpack:///src/app/client/clients-dashboard/clients-dashboard-routing.module.ts","webpack:///src/app/client/clients-dashboard/clients-dashboard.component.ts","webpack:///src/app/client/clients-dashboard/clients-dashboard.component.html","webpack:///src/app/client/clients-dashboard/clients-dashboard.module.ts"],"names":["data","exports","__esModule","fadeInUpAnimation","duration","transform","opacity","fadeInUp400ms","staggerAnimation","timing","optional","stagger80ms","stagger60ms","stagger40ms","stagger20ms","$event","stopPropagation","ClientJobTableComponent","dialog","authService","layoutCtrl","subject$","data$","asObservable","columns","label","property","type","visible","cssClasses","pageSize","pageSizeOptions","selection","statuss","icPhone","icMail","icMap","icEdit","icSearch","icDelete","icAdd","icFilterList","icMoreHoriz","icFolder","currenctUser","setCurrentUser","currentUser","getTypeJobs","subscribe","clients","map","client","clientes","console","log","next","getData","dataSource","pipe","Boolean","customers","paginator","sort","open","afterClosed","customer","addJob","_id","res","openSnackbar","tempJob","obj","subject","name","email","content1","shiftDateStr","total","content2","btn","btn_link","link","sendEmail","sendemail_res","unshift","updatedCustomer","index","findIndex","existingCustomer","id","splice","deselect","forEach","c","deleteCustomer","value","trim","toLowerCase","filter","column","event","stopImmediatePropagation","numSelected","selected","length","numRows","isAllSelected","clear","row","select","change","provide","useValue","appearance","selector","templateUrl","styleUrls","animations","providers","CustomerCreateUpdateComponent","defaults","dialogRef","fb","mode","selectedType","selectedRole","icMoreVert","icClose","icPrint","icDownload","icPerson","icMyLocation","icLocationCity","icEditLocation","minStart","minDate","Date","form","group","department","role","shiftDate","startTime","endTime","locationShift","purchaseOrderNo","additionalInformation","status","createCustomer","updateCustomer","close","ev","i","save","changeAccountType","routes","path","component","ClientsDashboardRoutingModule","forChild","imports","ClientsDashboardComponent","cd","icGroup","icPageView","icCloudOff","icTimer","clientJob","setClientJob","totalJobs","requestTime","parseInt","setTimeout","temp","ClientsDashboardModule","declarations"],"mappings":"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","file":"client-clients-dashboard-clients-dashboard-module-es5.js","sourcesContent":["var data = {\n\t\"body\": \"<path d=\\\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M5 18.08V19h.92l9.06-9.06l-.92-.92z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M20.71 7.04a.996.996 0 0 0 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29s-.51.1-.7.29l-1.83 1.83l3.75 3.75l1.83-1.83zM3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM5.92 19H5v-.92l9.06-9.06l.92.92L5.92 19z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path d=\\\"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M11.17 8l-.58-.59L9.17 6H4v12h16V8h-8z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 12H4V6h5.17l1.41 1.41l.59.59H20v10z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M20 6H4l8 4.99zM4 8v10h16V8l-8 5z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 2l-8 4.99L4 6h16zm0 12H4V8l8 5l8-5v10z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M5 18.31l3-1.16V5.45L5 6.46zm11 .24l3-1.01V5.69l-3 1.17z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M20.5 3l-.16.03L15 5.1L9 3L3.36 4.9c-.21.07-.36.25-.36.48V20.5c0 .28.22.5.5.5l.16-.03L9 18.9l6 2.1l5.64-1.9c.21-.07.36-.25.36-.48V3.5c0-.28-.22-.5-.5-.5zM8 17.15l-3 1.16V6.46l3-1.01v11.7zm6 1.38l-4-1.4V5.47l4 1.4v11.66zm5-.99l-3 1.01V6.86l3-1.16v11.84z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import { animate, style, transition, trigger } from '@angular/animations';\r\n\r\nexport function fadeInUpAnimation(duration: number) {\r\n  return trigger('fadeInUp', [\r\n    transition(':enter', [\r\n      style({\r\n        transform: 'translateY(20px)',\r\n        opacity: 0\r\n      }),\r\n      animate(`${duration}ms cubic-bezier(0.35, 0, 0.25, 1)`, style({\r\n        transform: 'translateY(0)',\r\n        opacity: 1\r\n      }))\r\n    ])\r\n  ]);\r\n}\r\n\r\nexport const fadeInUp400ms = fadeInUpAnimation(400);\r\n","import { animateChild, query, stagger, transition, trigger } from '@angular/animations';\r\n\r\nexport function staggerAnimation(timing: number) {\r\n  return trigger('stagger', [\r\n    transition('* => *', [ // each time the binding value changes\r\n      query(':enter', stagger(timing, animateChild()), { optional: true }),\r\n    ])\r\n  ]);\r\n}\r\n\r\nexport const stagger80ms = staggerAnimation(80);\r\nexport const stagger60ms = staggerAnimation(60);\r\nexport const stagger40ms = staggerAnimation(40);\r\nexport const stagger20ms = staggerAnimation(20);\r\n","import { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { Observable, of, ReplaySubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TableColumn } from '../../../../@vex/interfaces/table-column.interface';\nimport { aioTableData, aioTableLabels } from '../../../../static-data/aio-table-data';\nimport { CustomerCreateUpdateComponent } from './customer-create-update/customer-create-update.component';\nimport icEdit from '@iconify/icons-ic/twotone-edit';\nimport icDelete from '@iconify/icons-ic/twotone-delete';\nimport icSearch from '@iconify/icons-ic/twotone-search';\nimport icAdd from '@iconify/icons-ic/twotone-add';\nimport icFilterList from '@iconify/icons-ic/twotone-filter-list';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport icMoreHoriz from '@iconify/icons-ic/twotone-more-horiz';\nimport icFolder from '@iconify/icons-ic/twotone-folder';\nimport { fadeInUp400ms } from '../../../../@vex/animations/fade-in-up.animation';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldDefaultOptions } from '@angular/material/form-field';\nimport { stagger40ms } from '../../../../@vex/animations/stagger.animation';\nimport { FormControl } from '@angular/forms';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { MatSelectChange } from '@angular/material/select';\nimport icPhone from '@iconify/icons-ic/twotone-phone';\nimport icMail from '@iconify/icons-ic/twotone-mail';\nimport icMap from '@iconify/icons-ic/twotone-map';\nimport { Customer } from 'src/app/pages/apps/aio-table/interfaces/customer.model';\nimport { statusTableLabels, statusTableData } from 'src/static-data/status-table-data';\nimport { Job } from './interfaces/job.model';\nimport { AuthService } from 'src/app/services/auth.service';\n@Component({\n  selector: 'vex-client-job-table',\n  templateUrl: './client-job-table.component.html',\n  styleUrls: ['./client-job-table.component.scss'],\n  animations: [\n    fadeInUp400ms,\n    stagger40ms\n  ],\n  providers: [\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: {\n        appearance: 'standard'\n      } as MatFormFieldDefaultOptions\n    }\n  ]\n})\nexport class ClientJobTableComponent implements OnInit {\n\n  layoutCtrl = new FormControl('boxed');\n\n  /**\n   * Simulating a service with HTTP that returns Observables\n   * You probably want to remove this and do all requests in a service with HTTP\n   */\n  subject$: ReplaySubject<Job[]> = new ReplaySubject<Job[]>(1);\n  data$: Observable<Job[]> = this.subject$.asObservable();\n  customers: Job[];\n\n  @Input()\n  columns: TableColumn<Job>[] = [\n    // { label: 'Checkbox', property: 'checkbox', type: 'checkbox', visible: true },\n    { label: 'Client', property: 'client', type: 'text', visible: true, cssClasses: ['font-medium'] },\n    { label: 'Department', property: 'department', type: 'text', visible: true },\n    { label: 'Role', property: 'role', type: 'text', visible: false },\n    { label: 'Shift Date', property: 'shiftDateStr', type: 'text', visible: true },\n    { label: 'Start Time', property: 'startTime', type: 'text', visible: true },\n    { label: 'End Time', property: 'endTime', type: 'text', visible: true },\n    { label: 'Total Staff', property:'totalStaff', type:'text', visible:true},\n    { label: 'Status', property: 'status', type: 'button', visible: true },\n    { label: 'ID', property: '_id', type: 'text', visible: false },\n    // { label: 'Actions', property: 'actions', type: 'button', visible: true }\n  ];\n  pageSize = 10;\n  pageSizeOptions: number[] = [5, 10, 20, 50];\n  dataSource: MatTableDataSource<Job> | null;\n  selection = new SelectionModel<Job>(true, []);\n  // searchCtrl = new FormControl();\n\n  statuss = statusTableLabels;\n\n  icPhone = icPhone;\n  icMail = icMail;\n  icMap = icMap;\n  icEdit = icEdit;\n  icSearch = icSearch;\n  icDelete = icDelete;\n  icAdd = icAdd;\n  icFilterList = icFilterList;\n  icMoreHoriz = icMoreHoriz;\n  icFolder = icFolder;\n  currentUser;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  constructor(private dialog: MatDialog,\n    private authService:AuthService) {\n      if(!this.authService.currenctUser)\n       this.authService.setCurrentUser();\n      this.currentUser = this.authService.currenctUser;\n  }\n\n  get visibleColumns() {\n    return this.columns.filter(column => column.visible).map(column => column.property);\n  }\n  \n  /**\n   * Example on how to get data and pass it to the table - usually you would want a dedicated service with a HTTP request for this\n   * We are simulating this request here.\n   */\n  getData() {\n    this.authService.getTypeJobs().subscribe((clients)=>{\n      of(clients.map(client =>new Job(client))).subscribe(clientes =>{\n        console.log('123213123')  \n        console.log(clientes)  \n        this.subject$.next(clientes)\n      });\n    })\n    // return of(statusTableData.map(customer => new Job(customer)));\n  }\n\n  ngOnInit() {\n    if(!this.authService.currenctUser)\n    this.authService.setCurrentUser();\n    this.currentUser = this.authService.currenctUser;\n    this.getData();\n\n    this.dataSource = new MatTableDataSource();\n\n    this.data$.pipe(\n      filter<Job[]>(Boolean)\n    ).subscribe(customers => {\n      this.customers = customers;\n      this.dataSource.data = customers;\n    });\n\n    // this.searchCtrl.valueChanges.pipe(\n    //   untilDestroyed(this)\n    // ).subscribe(value => this.onFilterChange(value));\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  createCustomer() {\n    this.dialog.open(CustomerCreateUpdateComponent).afterClosed().subscribe((customer: Job) => {\n      /**\n       * Customer is the updated customer (if the user pressed Save - otherwise it's null)\n       */\n      if (customer) {\n        /**\n         * Here we are updating our local array.\n         * You would probably make an HTTP request here.\n         */\n        this.authService.addJob(customer, this.authService.currenctUser._id).subscribe((res)=>{\n          console.log('1')\n          this.authService.openSnackbar('New Job Added!');\n          var tempJob = new Job(customer);\n          var obj = {\n            subject : \"New job request from \" + this.currentUser['firstName'] + ' '+ this.currentUser['lastName'],\n            name : this.currentUser['firstName'] + ' '+ this.currentUser['lastName'],\n            email: 'fujingforward@gmail.com',\n            content1: `${this.currentUser['firstName']} ${this.currentUser['lastName']} has posted a new job on the portal for ${tempJob.shiftDateStr} looking for ${tempJob.total}workers.`,\n            content2: `You can review the applications by logging into the Portal.`,\n            btn:'LOGIN TO PORTAL',\n            btn_link:'http://imperial-recruitment.herokuapp.com/#/login',\n            link:''\n          };\n          this.authService.sendEmail(obj).subscribe((sendemail_res)=>{\n              console.log('crate job email')\n          })\n        })\n        customer['']\n        this.customers.unshift(new Job(customer));\n        this.subject$.next(this.customers);\n      }\n    });\n  }\n\n  updateCustomer(customer: Customer) {\n    this.dialog.open(CustomerCreateUpdateComponent, {\n      data: customer\n    }).afterClosed().subscribe(updatedCustomer => {\n      /**\n       * Customer is the updated customer (if the user pressed Save - otherwise it's null)\n       */\n      if (updatedCustomer) {\n        /**\n         * Here we are updating our local array.\n         * You would probably make an HTTP request here.\n         */\n        const index = this.customers.findIndex((existingCustomer) => existingCustomer.id === updatedCustomer.id);\n        this.customers[index] = new Job(updatedCustomer);\n        this.subject$.next(this.customers);\n      }\n    });\n  }\n\n  deleteCustomer(customer: Job) {\n    /**\n     * Here we are updating our local array.\n     * You would probably make an HTTP request here.\n     */\n    this.customers.splice(this.customers.findIndex((existingCustomer) => existingCustomer.id === customer.id), 1);\n    this.selection.deselect(customer);\n    this.subject$.next(this.customers);\n  }\n\n  deleteCustomers(customers: Job[]) {\n    /**\n     * Here we are updating our local array.\n     * You would probably make an HTTP request here.\n     */\n    customers.forEach(c => this.deleteCustomer(c));\n  }\n\n  onFilterChange(value: string) {\n    if (!this.dataSource) {\n      return;\n    }\n    value = value.trim();\n    value = value.toLowerCase();\n    this.dataSource.filter = value;\n  }\n\n  toggleColumnVisibility(column, event) {\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    column.visible = !column.visible;\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  trackByProperty<T>(index: number, column: TableColumn<T>) {\n    return column.property;\n  }\n\n  onLabelChange(change: MatSelectChange, row: Job) {\n    // const index = this.customers.findIndex(c => c === row);\n    // this.customers[index].status = change.value;\n    // this.subject$.next(this.customers);\n  }\n\n}\n","<div class=\"card overflow-auto -mt-16\">\n    <div class=\"bg-app-bar px-6 h-16 border-b sticky left-0\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n      <h2 class=\"title my-0 ltr:pr-4 rtl:pl-4 ltr:mr-4 rtl:ml-4 ltr:border-r rtl:border-l\" fxFlex=\"none\" fxHide.xs>\n        <span *ngIf=\"selection.isEmpty()\">Job List</span>\n        <span *ngIf=\"selection.hasValue()\">{{ selection.selected.length }}\n          Job<span *ngIf=\"selection.selected.length > 1\">s</span> selected</span>\n      </h2>\n\n      <div *ngIf=\"selection.hasValue()\" class=\"mr-4 pr-4 border-r\" fxFlex=\"none\">\n        <button (click)=\"deleteCustomers(selection.selected)\"\n                color=\"primary\"\n                mat-icon-button\n                matTooltip=\"Delete selected\"\n                type=\"button\">\n          <mat-icon [icIcon]=\"icDelete\"></mat-icon>\n        </button>\n\n        <button color=\"primary\" mat-icon-button matTooltip=\"Another action\" type=\"button\">\n          <mat-icon [icIcon]=\"icFolder\"></mat-icon>\n        </button>\n      </div>\n\n       <!-- <div class=\"bg-card rounded-full border px-4\"\n           fxFlex=\"400px\"\n           fxFlex.lt-md=\"auto\"\n           fxHide.xs\n           fxLayout=\"row\"\n           fxLayoutAlign=\"start center\">\n        <ic-icon [icIcon]=\"icSearch\" size=\"20px\"></ic-icon>\n       <input [formControl]=\"searchCtrl\"\n               class=\"px-4 py-3 border-0 outline-none w-full bg-transparent\"\n               placeholder=\"Search...\"\n               type=\"search\">\n      </div> -->\n\n      <span fxFlex></span>\n\n      <button class=\"ml-4\" fxFlex=\"none\" fxHide.gt-xs mat-icon-button type=\"button\">\n        <mat-icon [icIcon]=\"icSearch\"></mat-icon>\n      </button>\n\n      <button [matMenuTriggerFor]=\"columnFilterMenu\"\n              class=\"ml-4\"\n              fxFlex=\"none\"\n              mat-icon-button\n              matTooltip=\"Filter Columns\"\n              type=\"button\">\n        <mat-icon [icIcon]=\"icFilterList\"></mat-icon>\n      </button>\n\n      <button *ngIf=\"currentUser['clientType'] != 'User'\"(click)=\"createCustomer()\"\n              class=\"ml-4\"\n              color=\"primary\"\n              fxFlex=\"none\"\n              mat-mini-fab\n              matTooltip=\"Add Job\"\n              type=\"button\">\n        <mat-icon [icIcon]=\"icAdd\"></mat-icon>\n      </button>\n    </div>\n\n    <table @stagger [dataSource]=\"dataSource\" class=\"w-full\" mat-table matSort>\n\n      <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n\n      <!-- Checkbox Column -->\n      <!-- <ng-container matColumnDef=\"checkbox\">\n        <th *matHeaderCellDef mat-header-cell>\n          <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                        color=\"primary\">\n          </mat-checkbox>\n        </th>\n        <td *matCellDef=\"let row\" class=\"w-4\" mat-cell>\n          <mat-checkbox (change)=\"$event ? selection.toggle(row) : null\"\n                        (click)=\"$event.stopPropagation()\"\n                        [checked]=\"selection.isSelected(row)\"\n                        color=\"primary\">\n          </mat-checkbox>\n        </td>\n      </ng-container> -->\n\n      <!-- Text Columns -->\n      <ng-container *ngFor=\"let column of columns; trackBy: trackByProperty\">\n        <ng-container *ngIf=\"column.type === 'text'\" [matColumnDef]=\"column.property\">\n          <th *matHeaderCellDef class=\"uppercase\" mat-header-cell mat-sort-header> {{ column.label }}</th>\n          <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>{{ row[column.property] }}</td>\n        </ng-container>\n      </ng-container>\n\n      <!-- Contact Column -->\n      <ng-container matColumnDef=\"contact\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\n        <td *matCellDef=\"let row\" mat-cell>\n          <div class=\"flex\">\n            <a (click)=\"$event.stopPropagation()\"\n               class=\"w-8 h-8 leading-none flex items-center justify-center hover:bg-hover text-primary bg-primary-light\"\n               mat-icon-button>\n              <mat-icon [icIcon]=\"icPhone\" size=\"18px\"></mat-icon>\n            </a>\n\n            <a (click)=\"$event.stopPropagation()\"\n               class=\"w-8 h-8 leading-none flex items-center justify-center ml-1 hover:bg-hover text-teal bg-teal-light\"\n               mat-icon-button>\n              <mat-icon [icIcon]=\"icMail\" size=\"18px\"></mat-icon>\n            </a>\n\n            <a (click)=\"$event.stopPropagation()\"\n               class=\"w-8 h-8 leading-none flex items-center justify-center ml-1 hover:bg-hover text-green bg-green-light\"\n               mat-icon-button>\n              <mat-icon [icIcon]=\"icMap\" size=\"18px\"></mat-icon>\n            </a>\n          </div>\n        </td>\n      </ng-container>\n\n      <!-- Label Column -->\n      <ng-container matColumnDef=\"status\">\n        <th *matHeaderCellDef class=\"uppercase\" mat-header-cell mat-sort-header>Status</th>\n        <td *matCellDef=\"let row\" mat-cell>\n          <div fxLayoutAlign=\"start center\" fxLayoutGap=\"4px\">\n            <div\n                 [ngClass]=\"[row.status.textClass, row.status.bgClass]\"\n                 class=\"rounded px-2 py-1 font-medium text-xs\"\n                 fxFlex=\"none\">\n              {{ row.status.text }}\n            </div>\n            <!-- <div (click)=\"labelSelect.open()\" -->\n              <!-- <div\n                 class=\"text-secondary bg-base text-hint cursor-pointer hover:bg-hover\"\n                 fxFlex=\"none\"\n                 fxLayout=\"row\"\n                 fxLayoutAlign=\"center center\">\n              <ic-icon [icon]=\"icAdd\" size=\"18px\"></ic-icon>\n            </div> -->\n            <!-- <mat-select #labelSelect=\"matSelect\"\n                        (selectionChange)=\"onLabelChange($event, row)\"\n                        [value]=\"row.status\"\n                        class=\"invisible w-0 h-0 text-sm\"\n                        fxFlex=\"0 1 0px\"\n                        multiple>\n              <mat-option *ngFor=\"let label of labels\" [value]=\"label\">\n                <div [ngClass]=\"label.previewClass\"\n                     class=\"h-6 w-6 align-middle ltr:mr-2 rtl:ml-2 rounded inline-block\"></div>\n                <span>{{ label.text }}</span>\n              </mat-option>\n            </mat-select> -->\n          </div>\n        </td>\n      </ng-container>\n\n      <!-- Action Column -->\n      <!-- <ng-container matColumnDef=\"actions\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\n        <td *matCellDef=\"let row\" class=\"w-10 text-secondary\" mat-cell>\n          <button (click)=\"$event.stopPropagation()\"\n                  [matMenuTriggerData]=\"{ customer: row }\"\n                  [matMenuTriggerFor]=\"actionsMenu\"\n                  mat-icon-button\n                  type=\"button\">\n            <mat-icon [icIcon]=\"icMoreHoriz\"></mat-icon>\n          </button>\n        </td>\n      </ng-container> -->\n\n      <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\n      <!-- (click)=\"updateCustomer(row)\" -->\n      <tr \n          *matRowDef=\"let row; columns: visibleColumns;\"\n          @fadeInUp\n          class=\"hover:bg-hover trans-ease-out cursor-pointer\"\n          mat-row></tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" [pageSize]=\"pageSize\" class=\"sticky left-0\"></mat-paginator>\n  </div>\n  <mat-menu #columnFilterMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\n    <button (click)=\"toggleColumnVisibility(column, $event)\" *ngFor=\"let column of columns\"\n            class=\"checkbox-item mat-menu-item\">\n      <mat-checkbox (click)=\"$event.stopPropagation()\" [(ngModel)]=\"column.visible\" color=\"primary\">\n        {{ column.label }}\n      </mat-checkbox>\n    </button>\n  </mat-menu>\n  \n  <mat-menu #actionsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\n    <ng-template let-customer=\"customer\" matMenuContent>\n      <button [disabled]=\"currentUser['clientType'] == 'User'\" (click)=\"updateCustomer(customer)\" mat-menu-item>\n        <mat-icon [icIcon]=\"icEdit\"></mat-icon>\n        <span>Modify</span>\n      </button>\n      <button  [disabled]=\"currentUser['clientType'] == 'User'\" (click)=\"deleteCustomer(customer)\" mat-menu-item>\n        <mat-icon [icIcon]=\"icDelete\"></mat-icon>\n        <span>Delete</span>\n      </button>\n    </ng-template>\n  </mat-menu>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Job } from '../interfaces/job.model';\r\nimport icMoreVert from '@iconify/icons-ic/twotone-more-vert';\r\nimport icClose from '@iconify/icons-ic/twotone-close';\r\nimport icPrint from '@iconify/icons-ic/twotone-print';\r\nimport icDownload from '@iconify/icons-ic/twotone-cloud-download';\r\nimport icDelete from '@iconify/icons-ic/twotone-delete';\r\nimport icPhone from '@iconify/icons-ic/twotone-phone';\r\nimport icPerson from '@iconify/icons-ic/twotone-person';\r\nimport icMyLocation from '@iconify/icons-ic/twotone-my-location';\r\nimport icLocationCity from '@iconify/icons-ic/twotone-location-city';\r\nimport icEditLocation from '@iconify/icons-ic/twotone-edit-location';\r\nimport { statusTableLabels } from 'src/static-data/status-table-data';\r\nimport { formatDate } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'vex-customer-create-update',\r\n  templateUrl: './customer-create-update.component.html',\r\n  styleUrls: ['./customer-create-update.component.scss']\r\n})\r\nexport class CustomerCreateUpdateComponent implements OnInit {\r\n\r\n  static id = 100;\r\n\r\n  form: FormGroup;\r\n  mode: 'create' | 'update' = 'create';\r\n  selectedType = 'Housekeeping';\r\n  selectedRole = 'Linen Porter';\r\n  icMoreVert = icMoreVert;\r\n  icClose = icClose;\r\n\r\n  icPrint = icPrint;\r\n  icDownload = icDownload;\r\n  icDelete = icDelete;\r\n\r\n  icPerson = icPerson;\r\n  icMyLocation = icMyLocation;\r\n  icLocationCity = icLocationCity;\r\n  icEditLocation = icEditLocation;\r\n  icPhone = icPhone;\r\n  minDate;\r\n  minStart = 0;\r\n  constructor(@Inject(MAT_DIALOG_DATA) public defaults: any,\r\n              private dialogRef: MatDialogRef<CustomerCreateUpdateComponent>,\r\n              private fb: FormBuilder) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.minDate = '2020-08-15';\r\n    this.minDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\r\n    console.log('1213123')\r\n    console.log(this.minDate)\r\n    // this.minDate = formatDate(new Date(), 'YYYY-MM-DD').toString();\r\n    if (this.defaults) {\r\n      this.mode = 'update';\r\n    } else {\r\n      this.defaults = {} as Job;\r\n    }\r\n\r\n    this.form = this.fb.group({\r\n      id: [CustomerCreateUpdateComponent.id++],\r\n      _id:[this.defaults._id || ''],\r\n      client: [this.defaults.client || ''],\r\n      department: [this.defaults.department || this.selectedType],\r\n      role: [this.defaults.role || this.selectedRole],\r\n      shiftDate: [this.defaults.shiftDate || new Date()],\r\n      startTime: [this.defaults.startTime || 0],\r\n      endTime: [this.defaults.endTime || 1],\r\n      locationShift: [this.defaults.locationShift || ''],\r\n      purchaseOrderNo: [this.defaults.purchaseOrderNo || ''],\r\n      additionalInformation:[this.defaults.additionalInformation || ''],\r\n      total:[this.defaults.total || 1],\r\n      status:[this.defaults.status || statusTableLabels[1]]\r\n    });\r\n  }\r\n\r\n  save() {\r\n    if (this.mode === 'create') {\r\n      this.createCustomer();\r\n    } else if (this.mode === 'update') {\r\n      this.updateCustomer();\r\n    }\r\n  }\r\n\r\n  createCustomer() {\r\n    const customer = this.form.value;\r\n\r\n    // if (!customer.imageSrc) {\r\n    //   customer.imageSrc = 'assets/img/avatars/1.jpg';\r\n    // }\r\n\r\n    this.dialogRef.close(customer);\r\n  }\r\n\r\n  updateCustomer() {\r\n    const customer = this.form.value;\r\n    customer.id = this.defaults.id;\r\n\r\n    this.dialogRef.close(customer);\r\n  }\r\n\r\n  isCreateMode() {\r\n    return this.mode === 'create';\r\n  }\r\n\r\n  isUpdateMode() {\r\n    return this.mode === 'update';\r\n  }\r\n  changeAccountType(ev,i){\r\n    if(i == 1)\r\n    this.selectedType = ev.value();\r\n    else\r\n    this.selectedRole = ev.value();\r\n  }\r\n}\r\n","<form (ngSubmit)=\"save()\" [formGroup]=\"form\">\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" mat-dialog-title>\r\n    <!-- <img *ngIf=\"form.get('imageSrc').value\" [src]=\"form.get('imageSrc').value\" class=\"avatar mr-5\"> -->\r\n\r\n    <h2 *ngIf=\"form.get('client').value \"\r\n        class=\"headline m-0\"\r\n        fxFlex=\"auto\">{{ form.get('client').value}}</h2>\r\n    <h2 *ngIf=\"!form.get('client').value\"\r\n        class=\"headline m-0\"\r\n        fxFlex=\"auto\">New Job</h2>\r\n\r\n    <!-- <button [matMenuTriggerFor]=\"settingsMenu\" class=\"text-secondary\" mat-icon-button type=\"button\">\r\n      <mat-icon [icIcon]=\"icMoreVert\"></mat-icon>\r\n    </button> -->\r\n\r\n    <button class=\"text-secondary\" mat-dialog-close mat-icon-button type=\"button\">\r\n      <mat-icon [icIcon]=\"icClose\"></mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <mat-divider class=\"-mx-6 text-border\"></mat-divider>\r\n\r\n  <mat-dialog-content fxLayout=\"column\">\r\n    <div class=\"flex flex-col sm:flex-row\">\r\n      <mat-form-field class=\"mt-6 flex-auto\">\r\n        <mat-label>Client</mat-label>\r\n        <input cdkFocusInitial formControlName=\"client\" matInput>\r\n\r\n        <mat-icon [icIcon]=\"icPerson\" class=\"mr-3\" matPrefix></mat-icon>\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"flex flex-col sm:flex-row\">\r\n        <mat-form-field class=\"flex-auto\">\r\n          <mat-label>Department</mat-label>\r\n          <!-- <input formControlName=\"department\" matInput> -->\r\n          <mat-select formControlName=\"department\" (selectionChange)=\"changeAccountType($event , 1)\" [(ngModel)]=\"selectedType\">\r\n            <mat-option value=\"Housekeeping\">Housekeeping</mat-option>\r\n            <mat-option value=\"Food and Beverage\">Food and Beverage</mat-option>\r\n            <mat-option value=\"Back of House\">Back of House</mat-option>\r\n        </mat-select>\r\n          <!-- <mat-icon [icIcon]=\"icEditLocation\" class=\"mr-3\" matPrefix></mat-icon> -->\r\n      </mat-form-field>\r\n      <mat-form-field class=\"sm:ml-6 flex-auto\">\r\n        <mat-label>Role</mat-label>\r\n        <!-- <input formControlName=\"role\" matInput> -->\r\n        <mat-select formControlName=\"role\" (selectionChange)=\"changeAccountType($event , 2)\" [(ngModel)]=\"selectedRole\">\r\n          <mat-option *ngIf=\"selectedType == 'Housekeeping'\" value=\"Linen Porter\">Linen Porter</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Housekeeping'\" value=\"Floor Porter\">Floor Porter</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Housekeeping'\" value=\"Floor Supervisor\">Floor Supervisor</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Housekeeping'\" value=\"Room Supervisor\">Room Supervisor</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Housekeeping'\" value=\"Evening Room Attendant\">Evening Room Attendant</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Housekeeping'\" value=\"Public Area Attendant\">Public Area Attendant</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Housekeeping'\" value=\"Spa Attendant\">Spa Attendant</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Housekeeping'\" value=\"Valet\">Valet</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Housekeeping'\" value=\"Housekeeper\">Housekeeper</mat-option>\r\n\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Waiters\">Waiters</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Night Waiters\">Night Waiters</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Night Room Service\">Night Room Service</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Supervisor Banqueting\">Supervisor Banqueting</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Team Leader\">Team Leader</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Silver Service Waiters\">Silver Service Waiters</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Bar Staff\">Bar Staff</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Cloakroom\">Cloakroom</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Concierge\">Concierge</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Hostess\">Hostess</mat-option>\r\n\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Kitchen Porter\">Kitchen Porter</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Night Kitchen Porter\">Night Kitchen Porter</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Night Cleaners\">Night Cleaners</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Supervisor BOH (Back of House)\">Supervisor BOH (Back of House)</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Food Runners\">Food Runners</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Breakfast Runners\">Breakfast Runners</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Commis Chef\">Commis Chef</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Breakfast Chef\">Breakfast Chef</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Chef De Partie\">Chef De Partie</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Pastry Chef\">Pastry Chef</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Banqueting Porter\">Banqueting Porter</mat-option>\r\n      </mat-select>\r\n        <!-- <mat-icon [icIcon]=\"icEditLocation\" class=\"mr-3\" matPrefix></mat-icon> -->\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"flex flex-col sm:flex-row\">\r\n      <mat-form-field class=\"flex-auto\">\r\n        <mat-label>Shift Date</mat-label>\r\n        <input type=\"date\" formControlName=\"shiftDate\" matInput [min]=\"minDate\">\r\n        <mat-icon [icIcon]=\"icMyLocation\" class=\"mr-3\" matPrefix></mat-icon>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"sm:ml-3 flex-auto\">\r\n        <mat-label>Start Time</mat-label>\r\n        <input type=\"number\"formControlName=\"startTime\" matInput [(ngModel)]=\"minStart\" min=\"0\"max=\"23\">\r\n        <!-- <mat-icon [icIcon]=\"icLocationCity\" class=\"mr-3\" matPrefix></mat-icon> -->\r\n      </mat-form-field>\r\n      <mat-form-field class=\"sm:ml-3 flex-auto\">\r\n        <mat-label>End Time</mat-label>\r\n        <input  type=\"number\"formControlName=\"endTime\" matInput [min]=\"minStart + 1\" [value]=\"minStart + 1\" max=\"24\">\r\n        <!-- <mat-icon [icIcon]=\"icLocationCity\" class=\"mr-3\" matPrefix ></mat-icon> -->\r\n      </mat-form-field>\r\n      <mat-form-field class=\"sm:ml-3 flex-auto\">\r\n        <mat-label>Total Staff</mat-label>\r\n        <input  type=\"number\"formControlName=\"total\" matInput min=\"1\">\r\n        <!-- <mat-icon [icIcon]=\"icLocationCity\" class=\"mr-3\" matPrefix ></mat-icon> -->\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <mat-form-field class=\"flex-auto\">\r\n      <mat-label>Location of Shift</mat-label>\r\n      <input formControlName=\"locationShift\" matInput>\r\n      <mat-icon [icIcon]=\"icLocationCity\" class=\"mr-3\" matPrefix></mat-icon>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"flex-auto\">\r\n      <mat-label>Purchase Order No(Optional)</mat-label>\r\n      <input formControlName=\"purchaseOrderNo\" matInput/>\r\n    </mat-form-field>\r\n  <mat-form-field class=\"flex-auto\">\r\n    <mat-label>Additional Information</mat-label>\r\n    <input formControlName=\"additionalInformation\" matInput>\r\n  </mat-form-field>\r\n</mat-dialog-content>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button mat-dialog-close type=\"button\">CANCEL</button>\r\n    <button *ngIf=\"isCreateMode()\" color=\"primary\" mat-button type=\"submit\">CREATE JOB</button>\r\n    <button *ngIf=\"isUpdateMode()\" color=\"primary\" mat-button type=\"submit\">UPDATE JOB</button>\r\n  </mat-dialog-actions>\r\n</form>\r\n\r\n<mat-menu #settingsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n  <button mat-menu-item>\r\n    <mat-icon [icIcon]=\"icPrint\"></mat-icon>\r\n    <span>Print</span>\r\n  </button>\r\n\r\n  <button mat-menu-item>\r\n    <mat-icon [icIcon]=\"icDownload\"></mat-icon>\r\n    <span>Export</span>\r\n  </button>\r\n\r\n  <button mat-menu-item>\r\n    <mat-icon [icIcon]=\"icDelete\"></mat-icon>\r\n    <span>Delete</span>\r\n  </button>\r\n</mat-menu>\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ClientsDashboardComponent } from './clients-dashboard.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ClientsDashboardComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ClientsDashboardRoutingModule {\n}\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport icGroup from '@iconify/icons-ic/twotone-group';\nimport icPageView from '@iconify/icons-ic/twotone-pageview';\nimport icCloudOff from '@iconify/icons-ic/twotone-cloud-off';\nimport icTimer from '@iconify/icons-ic/twotone-timer';\nimport { defaultChartOptions } from '../../../@vex/utils/default-chart-options';\nimport { Order, tableSalesData } from '../../../static-data/table-sales-data';\nimport { TableColumn } from '../../../@vex/interfaces/table-column.interface';\nimport icMoreVert from '@iconify/icons-ic/twotone-more-vert';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'vex-clients-dashboard',\n  templateUrl: './clients-dashboard.component.html',\n  styleUrls: ['./clients-dashboard.component.scss']\n})\nexport class ClientsDashboardComponent implements OnInit {\n  clientJob:any;\n  totalJobs:number;\n  requestTime:number;\n\n  icGroup = icGroup;\n  icPageView = icPageView;\n  icCloudOff = icCloudOff;\n  icTimer = icTimer;\n  icMoreVert = icMoreVert;\n\n  constructor(private cd: ChangeDetectorRef,\n    private authService:AuthService) { }\n\n  ngOnInit() {\n    if(!this.authService.clientJob)\n      this.authService.setClientJob();\n    this.clientJob = this.authService.clientJob;\n    console.log('____________')\n    console.log(this.clientJob)\n    // this.totalJobs =  this.clientJob.filter((obj) => obj.statusStr == 'Completed').length;\n    this.totalJobs =  this.clientJob.length;\n    this.clientJob = this.authService.clientJob;\n    this.requestTime = 0;\n    console.log('____________+++=')\n    console.log(this.clientJob)\n    console.log(this.requestTime)\n    console.log(this.totalJobs)\n    this.clientJob.filter((obj) => {this.requestTime += parseInt(obj.endTime) - parseInt(obj.startTime)}).length;\n    this.clientJob = this.authService.clientJob;\n    setTimeout(() => {\n      const temp = [\n        {\n          name: 'Subscribers',\n          data: [55, 213, 55, 0, 213, 55, 33, 55]\n        },\n        {\n          name: ''\n        }\n      ];\n    }, 3000);\n  }\n\n}\n","<vex-secondary-toolbar current=\"Dashboard\">\n  <!-- <vex-breadcrumbs [crumbs]=\"['Dashboards', 'Analytics']\" class=\"flex-auto\"></vex-breadcrumbs> -->\n  <!-- <button class=\"ml-2\" color=\"primary\" mat-icon-button type=\"button\">\n    <mat-icon [icIcon]=\"icMoreVert\"></mat-icon>\n  </button> -->\n</vex-secondary-toolbar>\n\n<div class=\"p-gutter\"\n     gdColumns=\"1fr 1fr \"\n     gdColumns.lt-md=\"1fr 1fr\"\n     gdColumns.lt-sm=\"1fr\"\n     gdGap=\"16px\"\n     vexContainer>\n  <!-- <vex-widget-assistant gdColumn=\"1 / 3\" gdColumn.lt-md=\"1 / -1\" gdColumn.lt-sm=\"1\"></vex-widget-assistant>\n\n  <vex-widget-quick-line-chart [icon]=\"icPageView\"\n                               [series]=\"pageViewsSeries\"\n                               iconClass=\"text-primary bg-primary-light\"\n                               gdColumn.lt-sm=\"1\"\n                               label=\"Page Views\"\n                               value=\"92.4k\"></vex-widget-quick-line-chart>\n\n  <vex-widget-quick-line-chart [icon]=\"icGroup\"\n                               [options]=\"uniqueUsersOptions\"\n                               [series]=\"uniqueUsersSeries\"\n                               iconClass=\"text-orange bg-orange-light\"\n                               gdColumn.lt-sm=\"1\"\n                               label=\"Unique Users\"\n                               value=\"67.2k\"></vex-widget-quick-line-chart>\n\n  <vex-widget-large-chart [series]=\"userSessionsSeries\"\n                          gdColumn=\"1 / 3\"\n                          gdColumn.lt-md=\"1 / -1\"\n                          gdColumn.lt-sm=\"1\"></vex-widget-large-chart>\n\n  <vex-widget-table [columns]=\"tableColumns\"\n                    [data]=\"tableData\"\n                    class=\"w-full overflow-auto shadow\" gdColumn=\"3 / -1\"\n                    gdColumn.lt-md=\"1 / -1\"\n                    gdColumn.lt-sm=\"1\"></vex-widget-table> -->\n\n  <vex-widget-quick-value-center [change]=\"124.4\"\n                                 [icon]=\"icGroup\"\n                                 iconClass=\"text-primary bg-primary-light\"\n                                 gdColumn.lt-sm=\"1\"\n                                 label=\"Total Jobs\"\n                                 [value]=\"totalJobs\"></vex-widget-quick-value-center>\n  <!-- <vex-widget-quick-value-center [change]=\"-23.7\"\n                                 [icon]=\"icPageView\"\n                                 iconClass=\"text-orange bg-orange-light\"\n                                 gdColumn.lt-sm=\"1\"\n                                 helpText=\"Additional information\"\n                                 label=\"Request Time\"\n                                 value=\"96.2k\"></vex-widget-quick-value-center>\n  <vex-widget-quick-value-center [change]=\"23.2\"\n                                 [icon]=\"icCloudOff\"\n                                 iconClass=\"text-deep-orange bg-deep-orange-light\"\n                                 gdColumn.lt-sm=\"1\"\n                                 helpText=\"Explain something\"\n                                 label=\"Bounce Rate\"\n                                 value=\"6.92%\"></vex-widget-quick-value-center> -->\n  <vex-widget-quick-value-center [change]=\"34.5\"\n                                 [icon]=\"icTimer\"\n                                 iconClass=\"text-teal bg-teal-light\"\n                                 gdColumn.lt-sm=\"1\"\n                                 label=\"Request Time\"\n                                 [value]=\"requestTime\"></vex-widget-quick-value-center>\n\n  <div gdColumn=\"1 / -1\"  gdColumn.lt-sm=\"1\">\n    <vex-client-job-table></vex-client-job-table>\n  </div>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ClientsDashboardRoutingModule } from './clients-dashboard-routing.module';\nimport { ClientsDashboardComponent } from './clients-dashboard.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ChartModule } from '../../../@vex/components/chart/chart.module';\nimport { MatIconModule } from '@angular/material/icon';\nimport { WidgetQuickLineChartModule } from '../../../@vex/components/widgets/widget-quick-line-chart/widget-quick-line-chart.module';\nimport { WidgetQuickValueCenterModule } from '../../../@vex/components/widgets/widget-quick-value-center/widget-quick-value-center.module';\nimport { WidgetQuickValueStartModule } from '../../../@vex/components/widgets/widget-quick-value-start/widget-quick-value-start.module';\nimport { WidgetLargeGoalChartModule } from '../../../@vex/components/widgets/widget-large-goal-chart/widget-large-goal-chart.module';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { WidgetAssistantModule } from '../../../@vex/components/widgets/widget-assistant/widget-assistant.module';\nimport { WidgetLargeChartModule } from '../../../@vex/components/widgets/widget-large-chart/widget-large-chart.module';\nimport { WidgetTableModule } from '../../../@vex/components/widgets/widget-table/widget-table.module';\nimport { SecondaryToolbarModule } from '../../../@vex/components/secondary-toolbar/secondary-toolbar.module';\nimport { BreadcrumbsModule } from '../../../@vex/components/breadcrumbs/breadcrumbs.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { PageLayoutModule } from '../../../@vex/components/page-layout/page-layout.module';\nimport { ContainerModule } from '../../../@vex/directives/container/container.module';\nimport { ClientJobTableComponent } from './client-job-table/client-job-table.component';\nimport { ClientCreateUpdateModule } from 'src/app/admin/clients/client-create-update/client-create-update.module';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n\n@NgModule({\n  declarations: [ClientsDashboardComponent, ClientJobTableComponent ],\n  imports: [\n    CommonModule,\n    ClientsDashboardRoutingModule,\n    FlexLayoutModule,\n    ChartModule,\n    MatIconModule,\n    WidgetQuickLineChartModule,\n    WidgetQuickValueCenterModule,\n    WidgetQuickValueStartModule,\n    WidgetLargeGoalChartModule,\n    IconModule,\n    WidgetAssistantModule,\n    WidgetLargeChartModule,\n    WidgetTableModule,\n    SecondaryToolbarModule,\n    BreadcrumbsModule,\n    MatButtonModule,\n    PageLayoutModule,\n    ContainerModule,\n    PageLayoutModule,\n    FlexLayoutModule,\n    BreadcrumbsModule,\n    ClientCreateUpdateModule,\n    MatPaginatorModule,\n    MatTableModule,\n    MatSortModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule,\n    IconModule,\n    FormsModule,\n    MatTooltipModule,\n    ReactiveFormsModule,\n    ContainerModule,\n    MatSelectModule,\n    MatButtonToggleModule,\n    MatSnackBarModule\n  ]\n})\nexport class ClientsDashboardModule {\n}\n"]}