{"version":3,"sources":["./src/app/client/settings/subaccounts/customer-create-update/customer-create-update.component.ts","./src/app/client/settings/subaccounts/customer-create-update/customer-create-update.component.html","./src/app/client/settings/subaccounts/customer-create-update/customer-create-update.module.ts","./src/app/client/settings/subaccounts/subaccounts-routing.module.ts","./src/app/client/settings/subaccounts/subaccounts.component.ts","./src/app/client/settings/subaccounts/subaccounts.component.html","./src/app/client/settings/subaccounts/subaccounts.module.ts"],"names":[],"mappings":"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","file":"client-settings-subaccounts-subaccounts-module-es2015.js","sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Customer } from '../interfaces/customer.model';\r\nimport icMoreVert from '@iconify/icons-ic/twotone-more-vert';\r\nimport icClose from '@iconify/icons-ic/twotone-close';\r\nimport icPrint from '@iconify/icons-ic/twotone-print';\r\nimport icDownload from '@iconify/icons-ic/twotone-cloud-download';\r\nimport icDelete from '@iconify/icons-ic/twotone-delete';\r\nimport icPhone from '@iconify/icons-ic/twotone-phone';\r\nimport icPerson from '@iconify/icons-ic/twotone-person';\r\nimport icMyLocation from '@iconify/icons-ic/twotone-my-location';\r\nimport icLocationCity from '@iconify/icons-ic/twotone-location-city';\r\nimport icEditLocation from '@iconify/icons-ic/twotone-edit-location';\r\nimport { Client } from 'src/app/models/client.model';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'vex-customer-create-update',\r\n  templateUrl: './customer-create-update.component.html',\r\n  styleUrls: ['./customer-create-update.component.scss']\r\n})\r\nexport class CustomerCreateUpdateComponent implements OnInit {\r\n\r\n  static id = 100;\r\n\r\n  form: FormGroup;\r\n  mode: 'create' | 'update' = 'create';\r\n\r\n  icMoreVert = icMoreVert;\r\n  icClose = icClose;\r\n\r\n  icPrint = icPrint;\r\n  icDownload = icDownload;\r\n  icDelete = icDelete;\r\n\r\n  icPerson = icPerson;\r\n  icMyLocation = icMyLocation;\r\n  icLocationCity = icLocationCity;\r\n  icEditLocation = icEditLocation;\r\n  icPhone = icPhone;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public defaults: any,\r\n              private dialogRef: MatDialogRef<CustomerCreateUpdateComponent>,\r\n              private fb: FormBuilder) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.defaults) {\r\n      this.mode = 'update';\r\n    } else {\r\n      this.defaults = {} as Client;\r\n    }\r\n\r\n    this.form = this.fb.group({\r\n      id: [CustomerCreateUpdateComponent.id++],\r\n      emailAddress: [this.defaults.emailAddress || ''],\r\n      firstName: [this.defaults.firstName || ''],\r\n      department: [this.defaults.department || 'Housekeeping'],\r\n      clientType: [this.defaults.clientType || 'User'],\r\n      clientStatus: [this.defaults.clientStatus || 'Active'],\r\n      lastName: [this.defaults.lastName || ''],\r\n      phoneNumber: this.defaults.phoneNumber || '',\r\n    });\r\n  }\r\n\r\n  save() {\r\n    if (this.mode === 'create') {\r\n      this.createCustomer();\r\n    } else if (this.mode === 'update') {\r\n      this.updateCustomer();\r\n    }\r\n  }\r\n\r\n  createCustomer() {\r\n    const customer = this.form.value;\r\n    // if (!customer.imageSrc) {\r\n    //   customer.imageSrc = 'assets/img/avatars/1.jpg';\r\n    // }\r\n\r\n    this.dialogRef.close(customer);\r\n  }\r\n\r\n  updateCustomer() {\r\n    const customer = this.form.value;\r\n    customer.id = this.defaults.id;\r\n    customer._id = this.defaults._id;\r\n    this.dialogRef.close(customer);\r\n  }\r\n\r\n  isCreateMode() {\r\n    return this.mode === 'create';\r\n  }\r\n\r\n  isUpdateMode() {\r\n    return this.mode === 'update';\r\n  }\r\n}\r\n","<form (ngSubmit)=\"save()\" [formGroup]=\"form\">\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" mat-dialog-title>\r\n    <h2 *ngIf=\"form.get('firstName').value || form.get('lastName').value\"\r\n        class=\"headline m-0\"\r\n        fxFlex=\"auto\">{{ form.get('firstName').value + ' ' + form.get('lastName').value }}</h2>\r\n    <h2 *ngIf=\"!form.get('firstName').value && !form.get('lastName').value\"\r\n        class=\"headline m-0\"\r\n        fxFlex=\"auto\">New Client</h2>\r\n\r\n    <!-- <button [matMenuTriggerFor]=\"settingsMenu\" class=\"text-secondary\" mat-icon-button type=\"button\">\r\n      <mat-icon [icIcon]=\"icMoreVert\"></mat-icon>\r\n    </button> -->\r\n\r\n    <button class=\"text-secondary\" mat-dialog-close mat-icon-button type=\"button\">\r\n      <mat-icon [icIcon]=\"icClose\"></mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <mat-divider class=\"-mx-6 text-border\"></mat-divider>\r\n\r\n  <mat-dialog-content fxLayout=\"column\">\r\n    <div class=\"flex flex-col sm:flex-row\">\r\n      <mat-form-field class=\"mt-6 flex-auto\">\r\n        <mat-label>First Name</mat-label>\r\n        <input cdkFocusInitial formControlName=\"firstName\" matInput>\r\n\r\n        <mat-icon [icIcon]=\"icPerson\" class=\"mr-3\" matPrefix></mat-icon>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"sm:mt-6 sm:ml-6 flex-auto\">\r\n        <mat-label>Last Name</mat-label>\r\n        <input cdkFocusInitial formControlName=\"lastName\" matInput>\r\n\r\n        <mat-icon [icIcon]=\"icPerson\" class=\"mr-3\" matPrefix></mat-icon>\r\n      </mat-form-field>\r\n    </div>\r\n    <mat-form-field class=\"flex-auto\">\r\n      <mat-label>Email</mat-label>\r\n      <input formControlName=\"emailAddress\" matInput>\r\n\r\n      <mat-icon [icIcon]=\"icPhone\" class=\"mr-3\" matPrefix></mat-icon>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"flex-auto\">\r\n      <mat-label>Department</mat-label>\r\n      <!-- <input formControlName=\"department\" matInput> -->\r\n      <mat-select formControlName=\"department\">\r\n        <mat-option value=\"Housekeeping\">Housekeeping</mat-option>\r\n        <mat-option value=\"Food and Beverage\">Food and Beverage</mat-option>\r\n        <mat-option value=\"Back of House\">Back of House</mat-option>\r\n      </mat-select>\r\n      <mat-icon [icIcon]=\"icEditLocation\" class=\"mr-3\" matPrefix></mat-icon>\r\n    </mat-form-field>\r\n\r\n    <div class=\"flex flex-col sm:flex-row\">\r\n      <mat-form-field class=\"flex-auto\">\r\n        <mat-label>Account Type</mat-label>\r\n        <!-- <input formControlName=\"clientType\" matInput> -->\r\n        <mat-select formControlName=\"clientType\">\r\n          <mat-option value=\"User\">User</mat-option>\r\n          <mat-option value=\"Admin\">Admin</mat-option>\r\n        </mat-select>\r\n        <mat-icon [icIcon]=\"icMyLocation\" class=\"mr-3\" matPrefix></mat-icon>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"sm:ml-6 flex-auto\">\r\n        <mat-label>Status</mat-label>\r\n        <!-- <input formControlName=\"clientStatus\" matInput> -->\r\n        <mat-select formControlName=\"clientStatus\">\r\n          <mat-option value=\"Active\">Active</mat-option>\r\n          <mat-option value=\"Suspended\">Suspended</mat-option>\r\n        </mat-select>\r\n        <mat-icon [icIcon]=\"icLocationCity\" class=\"mr-3\" matPrefix></mat-icon>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <mat-form-field class=\"flex-auto\">\r\n      <mat-label>Phone Number</mat-label>\r\n      <input formControlName=\"phoneNumber\" matInput>\r\n\r\n      <mat-icon [icIcon]=\"icPhone\" class=\"mr-3\" matPrefix></mat-icon>\r\n    </mat-form-field>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button mat-dialog-close type=\"button\">CANCEL</button>\r\n    <button *ngIf=\"isCreateMode()\" color=\"primary\" mat-button type=\"submit\">CREATE Client</button>\r\n    <button *ngIf=\"isUpdateMode()\" color=\"primary\" mat-button type=\"submit\">UPDATE Client</button>\r\n  </mat-dialog-actions>\r\n</form>\r\n\r\n<mat-menu #settingsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n  <button mat-menu-item>\r\n    <mat-icon [icIcon]=\"icPrint\"></mat-icon>\r\n    <span>Print</span>\r\n  </button>\r\n\r\n  <button mat-menu-item>\r\n    <mat-icon [icIcon]=\"icDownload\"></mat-icon>\r\n    <span>Export</span>\r\n  </button>\r\n\r\n  <button mat-menu-item>\r\n    <mat-icon [icIcon]=\"icDelete\"></mat-icon>\r\n    <span>Delete</span>\r\n  </button>\r\n</mat-menu>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { CustomerCreateUpdateComponent } from './customer-create-update.component';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { IconModule } from '@visurel/iconify-angular';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatMenuModule,\r\n    IconModule,\r\n    MatDividerModule\r\n  ],\r\n  declarations: [CustomerCreateUpdateComponent],\r\n  entryComponents: [CustomerCreateUpdateComponent],\r\n  exports: [CustomerCreateUpdateComponent]\r\n})\r\nexport class CustomerCreateUpdateModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { VexRoutes } from '../../../../@vex/interfaces/vex-route.interface';\r\nimport { SubaccountsComponent } from './subaccounts.component';\r\n\r\n\r\nconst routes: VexRoutes = [\r\n  {\r\n    path: '',\r\n    component: SubaccountsComponent,\r\n    data: {\r\n      toolbarShadowEnabled: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SubaccountsRoutingModule {\r\n}\r\n","import { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { Observable, of, ReplaySubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { Customer } from './interfaces/customer.model';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TableColumn } from '../../../../@vex/interfaces/table-column.interface';\nimport { aioTableData, aioTableLabels, clientStatusLabels } from '../../../../static-data/aio-table-data';\nimport { CustomerCreateUpdateComponent } from './customer-create-update/customer-create-update.component';\nimport icEdit from '@iconify/icons-ic/twotone-edit';\nimport icDelete from '@iconify/icons-ic/twotone-delete';\nimport icSearch from '@iconify/icons-ic/twotone-search';\nimport icAdd from '@iconify/icons-ic/twotone-add';\nimport icFilterList from '@iconify/icons-ic/twotone-filter-list';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport icMoreHoriz from '@iconify/icons-ic/twotone-more-horiz';\nimport icFolder from '@iconify/icons-ic/twotone-folder';\nimport { fadeInUp400ms } from '../../../../@vex/animations/fade-in-up.animation';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldDefaultOptions } from '@angular/material/form-field';\nimport { stagger40ms } from '../../../../@vex/animations/stagger.animation';\nimport { FormControl } from '@angular/forms';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { MatSelectChange } from '@angular/material/select';\nimport icPhone from '@iconify/icons-ic/twotone-phone';\nimport icMail from '@iconify/icons-ic/twotone-mail';\nimport icMap from '@iconify/icons-ic/twotone-map';\nimport { Client } from 'src/app/models/client.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\n\n\n@UntilDestroy()\n@Component({\n  selector: 'vex-subaccounts',\n  templateUrl: './subaccounts.component.html',\n  styleUrls: ['./subaccounts.component.scss'],\n  animations: [\n    fadeInUp400ms,\n    stagger40ms\n  ],\n  providers: [\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: {\n        appearance: 'standard'\n      } as MatFormFieldDefaultOptions\n    }\n  ]\n})\nexport class SubaccountsComponent implements OnInit, AfterViewInit {\n\n  layoutCtrl = new FormControl('boxed');\n\n  /**\n   * Simulating a service with HTTP that returns Observables\n   * You probably want to remove this and do all requests in a service with HTTP\n   */\n  subject$: ReplaySubject<Client[]> = new ReplaySubject<Client[]>(1);\n  data$: Observable<Client[]> = this.subject$.asObservable();\n  customers: Client[];\n\n  @Input()\n  columns: TableColumn<Client>[] = [\n    { label: 'Checkbox', property: 'checkbox', type: 'checkbox', visible: true },\n    { label: 'Name', property: 'name', type: 'text', visible: true, cssClasses: ['font-medium'] },\n    { label: 'First Name', property: 'firstName', type: 'text', visible: false },\n    { label: 'Last Name', property: 'lastName', type: 'text', visible: false },\n    { label: 'Email', property: 'emailAddress', type: 'text', visible: true },\n    { label: 'Phone Number', property: 'phoneNumber', type: 'text', visible: true, cssClasses: ['text-secondary', 'font-medium'] },\n    { label: 'Department', property: 'department', type: 'text', visible: false, cssClasses: ['text-secondary', 'font-medium'] },\n    { label: 'Account Type', property: 'clientType', type: 'text', visible: true, cssClasses: ['text-secondary', 'font-medium'] },\n    { label: 'Status', property: 'clientStatus', type: 'button', visible: true },\n    { label: 'Actions', property: 'actions', type: 'button', visible: true }\n  ];\n  pageSize = 10;\n  pageSizeOptions: number[] = [5, 10, 20, 50];\n  dataSource: MatTableDataSource<Client> | null;\n  selection = new SelectionModel<Client>(true, []);\n  searchCtrl = new FormControl();\n\n  labels = clientStatusLabels;\n\n  icPhone = icPhone;\n  icMail = icMail;\n  icMap = icMap;\n  icEdit = icEdit;\n  icSearch = icSearch;\n  icDelete = icDelete;\n  icAdd = icAdd;\n  icFilterList = icFilterList;\n  icMoreHoriz = icMoreHoriz;\n  icFolder = icFolder;\n  currentUser;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  constructor(private dialog: MatDialog,\n    private authService:AuthService,\n    private router:Router) {\n      if(!this.authService.currenctUser)\n         this.authService.setCurrentUser();\n      this.currentUser = this.authService.currenctUser;\n  }\n\n  get visibleColumns() {\n    return this.columns.filter(column => column.visible).map(column => column.property);\n  }\n\n  /**\n   * Example on how to get data and pass it to the table - usually you would want a dedicated service with a HTTP request for this\n   * We are simulating this request here.\n   */\n  getData() {\n    this.authService.getTypeSubUsers(this.currentUser._id).subscribe((clients)=>{\n      of(clients.map(client =>new Client(client))).subscribe(clientes =>{\n        console.log('123213123')  \n        console.log(clientes)  \n        this.subject$.next(clientes)\n      });\n    })// return of(aioTableData.map(customer => new Client(customer)));\n  }\n\n  ngOnInit() {\n    if(!this.authService.currenctUser)\n    this.authService.setCurrentUser();\n    this.currentUser = this.authService.currenctUser;\n    if(this.currentUser.clientType != 'Master Admin')\n      {\n        alert(\"You can't access into the this page \");\n        this.router.navigate(['/client/companydetails']);\n      }\n    this.getData();\n    // this.getData().subscribe(customers => {\n    //   this.subject$.next(customers);\n    // });\n\n    this.dataSource = new MatTableDataSource();\n\n    this.data$.pipe(\n      filter<Client[]>(Boolean)\n    ).subscribe(customers => {\n      this.customers = customers;\n      this.dataSource.data = customers;\n    });\n\n    this.searchCtrl.valueChanges.pipe(\n      untilDestroyed(this)\n    ).subscribe(value => this.onFilterChange(value));\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  createCustomer() {\n    this.dialog.open(CustomerCreateUpdateComponent).afterClosed().subscribe((customer: Client) => {\n      /**\n       * Client is the updated customer (if the user pressed Save - otherwise it's null)\n       */\n      if (customer) {\n        customer.parentId = this.currentUser._id;\n        this.authService.register(customer, 'Client').subscribe((res)=>{\n          console.log('new created client')\n          this.authService.openSnackbar('New Sub Client Added!');\n        })\n        /**\n         * Here we are updating our local array.\n         * You would probably make an HTTP request here.\n         */\n        this.customers.unshift(new Client(customer));\n        this.subject$.next(this.customers);\n      }\n    });\n  }\n\n  updateCustomer(customer: Client) {\n    this.dialog.open(CustomerCreateUpdateComponent, {\n      data: customer\n    }).afterClosed().subscribe(updatedCustomer => {\n      /**\n       * Customer is the updated customer (if the user pressed Save - otherwise it's null)\n       */\n      if (updatedCustomer) {\n        /**\n         * Here we are updating our local array.\n         * You would probably make an HTTP request here.\n         */\n        updatedCustomer.parentId = this.currentUser._id;\n        this.authService.updateUser(updatedCustomer).subscribe((res)=>{\n          this.authService.openSnackbar('Updated Successfully!')\n        })\n        const index = this.customers.findIndex((existingCustomer) => existingCustomer.id === updatedCustomer.id);\n        this.customers[index] = new Client(updatedCustomer);\n        this.subject$.next(this.customers);\n      }\n    });\n  }\n\n  deleteCustomer(customer: Client) {\n    /**\n     * Here we are updating our local array.\n     * You would probably make an HTTP request here.\n     */\n    this.customers.splice(this.customers.findIndex((existingCustomer) => existingCustomer.id === customer.id), 1);\n    this.selection.deselect(customer);\n    this.subject$.next(this.customers);\n  }\n  transferMasterAdmin(custer:Client){\n\n  }\n  deleteCustomers(customers: Client[]) {\n    /**\n     * Here we are updating our local array.\n     * You would probably make an HTTP request here.\n     */\n    customers.forEach(c => this.deleteCustomer(c));\n  }\n\n  onFilterChange(value: string) {\n    if (!this.dataSource) {\n      return;\n    }\n    value = value.trim();\n    value = value.toLowerCase();\n    this.dataSource.filter = value;\n  }\n\n  toggleColumnVisibility(column, event) {\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    column.visible = !column.visible;\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  trackByProperty<T>(index: number, column: TableColumn<T>) {\n    return column.property;\n  }\n\n  // onLabelChange(change: MatSelectChange, row: Client) {\n  //   const index = this.customers.findIndex(c => c === row);\n  //   this.customers[index].labels = change.value;\n  //   this.subject$.next(this.customers);\n  // }\n}\n","<vex-page-layout>\r\n\r\n  <vex-page-layout-header class=\"pb-16\" fxLayout=\"column\" fxLayoutAlign=\"center start\">\r\n    <div [class.container]=\"layoutCtrl.value === 'boxed'\"\r\n         [class.px-gutter]=\"layoutCtrl.value === 'fullwidth'\"\r\n         class=\"w-full flex flex-col sm:flex-row justify-between\">\r\n      <div>\r\n        <h1 class=\"title mt-0 mb-1\">User Manage</h1>\r\n        <!-- <vex-breadcrumbs [crumbs]=\"['Apps', 'All-In-One Table']\"></vex-breadcrumbs> -->\r\n      </div>\r\n\r\n      <!-- <mat-button-toggle-group [formControl]=\"layoutCtrl\" class=\"mt-4 sm:mt-0\">\r\n        <mat-button-toggle value=\"boxed\">BOXED</mat-button-toggle>\r\n        <mat-button-toggle value=\"fullwidth\">FULL-WIDTH</mat-button-toggle>\r\n      </mat-button-toggle-group> -->\r\n    </div>\r\n  </vex-page-layout-header>\r\n\r\n  <vex-page-layout-content [class.container]=\"layoutCtrl.value === 'boxed'\"\r\n                           [class.px-gutter]=\"layoutCtrl.value === 'fullwidth'\"\r\n                           class=\"-mt-6\">\r\n\r\n    <div class=\"card overflow-auto -mt-16\">\r\n      <div class=\"bg-app-bar px-6 h-16 border-b sticky left-0\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n        <h2 class=\"title my-0 ltr:pr-4 rtl:pl-4 ltr:mr-4 rtl:ml-4 ltr:border-r rtl:border-l\" fxFlex=\"none\" fxHide.xs>\r\n          <span *ngIf=\"selection.isEmpty()\">User Manage</span>\r\n          <span *ngIf=\"selection.hasValue()\">{{ selection.selected.length }}\r\n            User<span *ngIf=\"selection.selected.length > 1\">s</span> selected</span>\r\n        </h2>\r\n\r\n        <div *ngIf=\"selection.hasValue()\" class=\"mr-4 pr-4 border-r\" fxFlex=\"none\">\r\n          <button (click)=\"deleteCustomers(selection.selected)\"\r\n                  color=\"primary\"\r\n                  mat-icon-button\r\n                  matTooltip=\"Delete selected\"\r\n                  type=\"button\">\r\n            <mat-icon [icIcon]=\"icDelete\"></mat-icon>\r\n          </button>\r\n\r\n          <!-- <button color=\"primary\" mat-icon-button matTooltip=\"Another action\" type=\"button\">\r\n            <mat-icon [icIcon]=\"icFolder\"></mat-icon>\r\n          </button> -->\r\n        </div>\r\n\r\n        <div class=\"bg-card rounded-full border px-4\"\r\n             fxFlex=\"400px\"\r\n             fxFlex.lt-md=\"auto\"\r\n             fxHide.xs\r\n             fxLayout=\"row\"\r\n             fxLayoutAlign=\"start center\">\r\n          <ic-icon [icIcon]=\"icSearch\" size=\"20px\"></ic-icon>\r\n          <input [formControl]=\"searchCtrl\"\r\n                 class=\"px-4 py-3 border-0 outline-none w-full bg-transparent\"\r\n                 placeholder=\"Search...\"\r\n                 type=\"search\">\r\n        </div>\r\n\r\n        <span fxFlex></span>\r\n\r\n        <button class=\"ml-4\" fxFlex=\"none\" fxHide.gt-xs mat-icon-button type=\"button\">\r\n          <mat-icon [icIcon]=\"icSearch\"></mat-icon>\r\n        </button>\r\n\r\n        <button [matMenuTriggerFor]=\"columnFilterMenu\"\r\n                class=\"ml-4\"\r\n                fxFlex=\"none\"\r\n                mat-icon-button\r\n                matTooltip=\"Filter Columns\"\r\n                type=\"button\">\r\n          <mat-icon [icIcon]=\"icFilterList\"></mat-icon>\r\n        </button>\r\n\r\n        <button (click)=\"createCustomer()\"\r\n                class=\"ml-4\"\r\n                color=\"primary\"\r\n                fxFlex=\"none\"\r\n                mat-mini-fab\r\n                matTooltip=\"Add Client\"\r\n                type=\"button\">\r\n          <mat-icon [icIcon]=\"icAdd\"></mat-icon>\r\n        </button>\r\n      </div>\r\n\r\n      <table @stagger [dataSource]=\"dataSource\" class=\"w-full\" mat-table matSort>\r\n\r\n        <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n        <!-- Checkbox Column -->\r\n        <ng-container matColumnDef=\"checkbox\">\r\n          <th *matHeaderCellDef mat-header-cell>\r\n            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                          [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                          [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                          color=\"primary\">\r\n            </mat-checkbox>\r\n          </th>\r\n          <td *matCellDef=\"let row\" class=\"w-4\" mat-cell>\r\n            <mat-checkbox (change)=\"$event ? selection.toggle(row) : null\"\r\n                          (click)=\"$event.stopPropagation()\"\r\n                          [checked]=\"selection.isSelected(row)\"\r\n                          color=\"primary\">\r\n            </mat-checkbox>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Image Column -->\r\n        <!-- <ng-container matColumnDef=\"image\">\r\n          <th *matHeaderCellDef mat-header-cell></th>\r\n          <td *matCellDef=\"let row\" class=\"w-8 min-w-8 pr-0\" mat-cell>\r\n            <img [src]=\"row['imageSrc']\" class=\"avatar h-8 w-8 align-middle\">\r\n          </td>\r\n        </ng-container> -->\r\n\r\n        <!-- Text Columns -->\r\n        <ng-container *ngFor=\"let column of columns; trackBy: trackByProperty\">\r\n          <ng-container *ngIf=\"column.type === 'text'\" [matColumnDef]=\"column.property\">\r\n            <th *matHeaderCellDef class=\"uppercase\" mat-header-cell mat-sort-header> {{ column.label }}</th>\r\n            <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>{{ row[column.property] }}</td>\r\n          </ng-container>\r\n        </ng-container>\r\n\r\n        <!-- Contact Column -->\r\n        <ng-container matColumnDef=\"contact\">\r\n          <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n          <td *matCellDef=\"let row\" mat-cell>\r\n            <div class=\"flex\">\r\n              <a (click)=\"$event.stopPropagation()\"\r\n                 class=\"w-8 h-8 leading-none flex items-center justify-center hover:bg-hover text-primary bg-primary-light\"\r\n                 mat-icon-button>\r\n                <mat-icon [icIcon]=\"icPhone\" size=\"18px\"></mat-icon>\r\n              </a>\r\n\r\n              <a (click)=\"$event.stopPropagation()\"\r\n                 class=\"w-8 h-8 leading-none flex items-center justify-center ml-1 hover:bg-hover text-teal bg-teal-light\"\r\n                 mat-icon-button>\r\n                <mat-icon [icIcon]=\"icMail\" size=\"18px\"></mat-icon>\r\n              </a>\r\n\r\n              <a (click)=\"$event.stopPropagation()\"\r\n                 class=\"w-8 h-8 leading-none flex items-center justify-center ml-1 hover:bg-hover text-green bg-green-light\"\r\n                 mat-icon-button>\r\n                <mat-icon [icIcon]=\"icMap\" size=\"18px\"></mat-icon>\r\n              </a>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Label Column -->\r\n        <ng-container matColumnDef=\"clientStatus\">\r\n          <th *matHeaderCellDef class=\"uppercase\" mat-header-cell mat-sort-header>Status</th>\r\n          <td *matCellDef=\"let row\" mat-cell>\r\n            <div fxLayoutAlign=\"start center\" fxLayoutGap=\"4px\">\r\n              <div *ngIf=\"row.clientStatus == 'Active'\" \r\n                   [ngClass]=\"['text-green  ', 'bg-green-light']\"\r\n                   class=\"rounded px-2 py-1 font-medium text-xs\"\r\n                   fxFlex=\"none\">\r\n                   Active\r\n              </div>\r\n              <div *ngIf=\"row.clientStatus == 'Suspended'\" \r\n                   [ngClass]=\"['text-purple', 'bg-purple-light']\"\r\n                   class=\"rounded px-2 py-1 font-medium text-xs\"\r\n                   fxFlex=\"none\">\r\n                   Suspended\r\n              </div>\r\n              <!-- <div (click)=\"labelSelect.open()\"\r\n                   class=\"text-secondary bg-base text-hint cursor-pointer hover:bg-hover\"\r\n                   fxFlex=\"none\"\r\n                   fxLayout=\"row\"\r\n                   fxLayoutAlign=\"center center\">\r\n                <ic-icon [icon]=\"icAdd\" size=\"18px\"></ic-icon>\r\n              </div>\r\n              <mat-select #labelSelect=\"matSelect\"\r\n                          (selectionChange)=\"onLabelChange($event, row)\"\r\n                          [value]=\"row.labels\"\r\n                          class=\"invisible w-0 h-0 text-sm\"\r\n                          fxFlex=\"0 1 0px\"\r\n                          multiple>\r\n                <mat-option *ngFor=\"let label of labels\" [value]=\"label\">\r\n                  <div [ngClass]=\"label.previewClass\"\r\n                       class=\"h-6 w-6 align-middle ltr:mr-2 rtl:ml-2 rounded inline-block\"></div>\r\n                  <span>{{ label.text }}</span>\r\n                </mat-option>\r\n              </mat-select> -->\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Action Column -->\r\n        <ng-container matColumnDef=\"actions\">\r\n          <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n          <td *matCellDef=\"let row\" class=\"w-10 text-secondary\" mat-cell>\r\n            <button (click)=\"$event.stopPropagation()\"\r\n                    [matMenuTriggerData]=\"{ customer: row }\"\r\n                    [matMenuTriggerFor]=\"actionsMenu\"\r\n                    mat-icon-button\r\n                    type=\"button\">\r\n              <mat-icon [icIcon]=\"icMoreHoriz\"></mat-icon>\r\n            </button>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\r\n        <tr (click)=\"updateCustomer(row)\"\r\n            *matRowDef=\"let row; columns: visibleColumns;\"\r\n            @fadeInUp\r\n            class=\"hover:bg-hover trans-ease-out cursor-pointer\"\r\n            mat-row></tr>\r\n      </table>\r\n\r\n      <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" [pageSize]=\"pageSize\" class=\"sticky left-0\"></mat-paginator>\r\n    </div>\r\n\r\n  </vex-page-layout-content>\r\n\r\n</vex-page-layout>\r\n\r\n<mat-menu #columnFilterMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n  <button (click)=\"toggleColumnVisibility(column, $event)\" *ngFor=\"let column of columns\"\r\n          class=\"checkbox-item mat-menu-item\">\r\n    <mat-checkbox (click)=\"$event.stopPropagation()\" [(ngModel)]=\"column.visible\" color=\"primary\">\r\n      {{ column.label }}\r\n    </mat-checkbox>\r\n  </button>\r\n</mat-menu>\r\n\r\n<mat-menu #actionsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n  <ng-template let-customer=\"customer\" matMenuContent>\r\n    <button (click)=\"updateCustomer(customer)\" mat-menu-item>\r\n      <mat-icon [icIcon]=\"icEdit\"></mat-icon>\r\n      <span>Modify</span>\r\n    </button>\r\n    <button (click)=\"deleteCustomer(customer)\" mat-menu-item>\r\n      <mat-icon [icIcon]=\"icDelete\"></mat-icon>\r\n      <span>Delete</span>\r\n    </button>\r\n    <button (click)=\"transferMasterAdmin(customer)\" mat-menu-item>\r\n      <!-- <mat-icon [icIcon]=\"icDelete\"></mat-icon> -->\r\n      <span>Transfer Master Admin</span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SubaccountsRoutingModule } from './subaccounts-routing.module';\nimport { SubaccountsComponent } from './subaccounts.component';\nimport { PageLayoutModule } from '../../../../@vex/components/page-layout/page-layout.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BreadcrumbsModule } from '../../../../@vex/components/breadcrumbs/breadcrumbs.module';\nimport { CustomerCreateUpdateModule } from './customer-create-update/customer-create-update.module';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ContainerModule } from '../../../../@vex/directives/container/container.module';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\n\n@NgModule({\n  declarations: [SubaccountsComponent],\n  imports: [\n    CommonModule,\n    SubaccountsRoutingModule,\n    PageLayoutModule,\n    FlexLayoutModule,\n    BreadcrumbsModule,\n    CustomerCreateUpdateModule,\n    MatPaginatorModule,\n    MatTableModule,\n    MatSortModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule,\n    IconModule,\n    FormsModule,\n    MatTooltipModule,\n    ReactiveFormsModule,\n    ContainerModule,\n    MatSelectModule,\n    MatButtonToggleModule\n  ]\n})\nexport class SubaccountsModule {\n}\n"],"sourceRoot":"webpack:///"}