{"version":3,"sources":["webpack:///src/app/pages/apps/scrumboard/components/scrumboard-dialog/scrumboard-dialog.component.ts","webpack:///src/app/pages/apps/scrumboard/components/scrumboard-dialog/scrumboard-dialog.component.html","webpack:///src/app/pages/apps/scrumboard/components/scrumboard-dialog/scrumboard-dialog.module.ts","webpack:///src/app/pages/apps/scrumboard/scrumboard-routing.module.ts","webpack:///src/app/pages/apps/scrumboard/scrumboard.component.ts","webpack:///src/app/pages/apps/scrumboard/scrumboard.component.html","webpack:///src/app/pages/apps/scrumboard/scrumboard.module.ts"],"names":["ScrumboardDialogComponent","dialogRef","data","fb","form","group","title","description","dueDate","cover","attachments","array","comments","users","labels","commentCtrl","icAssignment","icDescription","icClose","icAdd","icMoreVert","icDelete","icImage","icAttachFile","icInsertComment","icStar","list","board","card","valueChanges","subscribe","console","log","patchValue","setControl","close","value","extension","attachment","get","setValue","id","filter","a","push","from","name","imageSrc","message","date","local","minus","seconds","save","addComment","selector","templateUrl","styleUrls","ScrumboardDialogModule","declarations","imports","exports","entryComponents","routes","path","redirectTo","component","scrollDisabled","containerEnabled","ScrumboardRoutingModule","forChild","ScrumboardComponent","dialog","route","popover","board$","paramMap","pipe","scrumboardId","find","addCardCtrl","addListCtrl","trackById","icNotifications","icStarBorder","scrumboardUsers","open","width","maxWidth","disableClose","beforeClosed","Boolean","index","children","findIndex","child","event","previousContainer","container","previousIndex","currentIndex","map","x","content","origin","position","originX","originY","overlayX","overlayY","nextId","label","starred","animations","ScrumboardModule"],"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","file":"pages-apps-scrumboard-scrumboard-module-es5.js","sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ScrumboardCard } from '../../interfaces/scrumboard-card.interface';\nimport { FormArray, FormBuilder, FormControl } from '@angular/forms';\nimport icAssignment from '@iconify/icons-ic/twotone-assignment';\nimport icAdd from '@iconify/icons-ic/twotone-add';\nimport { scrumboardLabels, scrumboardUsers } from '../../../../../../static-data/scrumboard';\nimport icDescription from '@iconify/icons-ic/twotone-description';\nimport icClose from '@iconify/icons-ic/twotone-close';\nimport { ScrumboardList } from '../../interfaces/scrumboard-list.interface';\nimport { Scrumboard } from '../../interfaces/scrumboard.interface';\nimport icMoreVert from '@iconify/icons-ic/twotone-more-vert';\nimport icDelete from '@iconify/icons-ic/twotone-delete';\nimport icImage from '@iconify/icons-ic/twotone-image';\nimport { ScrumboardAttachment } from '../../interfaces/scrumboard-attachment.interface';\nimport icAttachFile from '@iconify/icons-ic/twotone-attach-file';\nimport icInsertComment from '@iconify/icons-ic/twotone-insert-comment';\nimport { DateTime } from 'luxon';\nimport { ScrumboardComment } from '../../interfaces/scrumboard-comment.interface';\nimport icStar from '@iconify/icons-ic/twotone-star';\n\n@Component({\n  selector: 'vex-scrumboard-dialog',\n  templateUrl: './scrumboard-dialog.component.html',\n  styleUrls: ['./scrumboard-dialog.component.scss']\n})\nexport class ScrumboardDialogComponent implements OnInit {\n\n  form = this.fb.group({\n    title: null,\n    description: null,\n    dueDate: null,\n    cover: null,\n    attachments: this.fb.array([]),\n    comments: this.fb.array([]),\n    users: [],\n    labels: []\n  });\n\n  commentCtrl = new FormControl();\n\n  icAssignment = icAssignment;\n  icDescription = icDescription;\n  icClose = icClose;\n  icAdd = icAdd;\n  icMoreVert = icMoreVert;\n  icDelete = icDelete;\n  icImage = icImage;\n  icAttachFile = icAttachFile;\n  icInsertComment = icInsertComment;\n  icStar = icStar;\n\n  users = scrumboardUsers;\n  labels = scrumboardLabels;\n\n  list: ScrumboardList;\n  board: Scrumboard;\n\n  constructor(private dialogRef: MatDialogRef<ScrumboardDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) private data: {\n                card: ScrumboardCard;\n                list: ScrumboardList;\n                board: Scrumboard;\n              },\n              private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.list = this.data.list;\n    this.board = this.data.board;\n\n    const card = this.data.card;\n\n    this.form.valueChanges.subscribe(console.log);\n\n    this.form.patchValue({\n      title: card.title,\n      description: card.description,\n      dueDate: card.dueDate || null,\n      cover: card.cover || null,\n      users: card.users || [],\n      labels: card.labels || []\n    });\n\n    this.form.setControl('attachments', this.fb.array(card.attachments || []));\n    this.form.setControl('comments', this.fb.array(card.comments || []));\n  }\n\n  save() {\n    this.dialogRef.close(this.form.value);\n  }\n\n  isImageExtension(extension: string) {\n    return extension === 'jpg' || extension === 'png';\n  }\n\n  makeCover(attachment: ScrumboardAttachment) {\n    this.form.get('cover').setValue(attachment);\n  }\n\n  isCover(attachment: ScrumboardAttachment) {\n    return this.form.get('cover').value === attachment;\n  }\n\n  remove(attachment: ScrumboardAttachment) {\n    if (this.form.get('cover').value && attachment.id === this.form.get('cover').value.id) {\n      this.form.get('cover').setValue(null);\n    }\n\n    this.form.setControl('attachments', this.fb.array(this.form.get('attachments').value.filter(a => a !== attachment)));\n  }\n\n  addComment() {\n    if (!this.commentCtrl.value) {\n      return;\n    }\n\n    const comments = this.form.get('comments') as FormArray;\n    comments.push(new FormControl({\n      from: {\n        name: 'David Smith',\n        imageSrc: 'assets/img/avatars/1.jpg'\n      },\n      message: this.commentCtrl.value,\n      date: DateTime.local().minus({ seconds: 1 })\n    } as ScrumboardComment));\n\n    this.commentCtrl.setValue(null);\n  }\n}\n","<form (ngSubmit)=\"save()\" [formGroup]=\"form\">\r\n  <div class=\"mb-0 body-1\" mat-dialog-title>\r\n    <div>\r\n      <h2 class=\"title m-0\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n        <ic-icon [icon]=\"icAssignment\" class=\"ltr:mr-1 rtl:ml-1 text-secondary\" fxFlex=\"none\" size=\"24px\"></ic-icon>\r\n        <input [class.empty]=\"!form.get('title').value\"\r\n               class=\"hidden-input title bg-card\"\r\n               formControlName=\"title\"\r\n               fxFlex=\"auto\">\r\n        <button cdkFocusInitial class=\"text-secondary\" mat-dialog-close mat-icon-button type=\"button\">\r\n          <mat-icon [icIcon]=\"icClose\"></mat-icon>\r\n        </button>\r\n      </h2>\r\n\r\n      <div class=\"body-2 text-secondary ltr:ml-10 rtl:mr-10\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n        <span>{{ board?.label }}</span>\r\n        <div class=\"w-1 h-1 mx-2 bg-gray rounded-full\"></div>\r\n        <span>{{ list?.label }}</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"mt-3 ltr:ml-10 rtl:mr-10\" fxLayout=\"row wrap\" fxLayoutAlign=\"space-between start\">\r\n      <div class=\"members\" fxFlex=\"none\">\r\n        <div class=\"body-2 text-secondary\">MEMBERS</div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n          <img *ngFor=\"let user of form.get('users').value\"\r\n               [matTooltip]=\"user.name\"\r\n               [src]=\"user.imageSrc\"\r\n               class=\"avatar\"\r\n               fxFlex=\"none\">\r\n          <div (click)=\"memberSelect.open()\"\r\n               class=\"avatar text-secondary bg-app-bar cursor-pointer\"\r\n               fxFlex=\"none\"\r\n               fxLayout=\"row\"\r\n               fxLayoutAlign=\"center center\">\r\n            <ic-icon [icon]=\"icAdd\" size=\"24px\"></ic-icon>\r\n          </div>\r\n          <mat-select #memberSelect=\"matSelect\"\r\n                      class=\"invisible w-0 h-0 text-sm\"\r\n                      formControlName=\"users\"\r\n                      fxFlex=\"0 1 0px\"\r\n                      multiple>\r\n            <mat-option *ngFor=\"let user of users\" [value]=\"user\">\r\n              <img [src]=\"user.imageSrc\" class=\"avatar h-6 w-6 align-middle inline-block ltr:mr-2 rtl:ml-2\">\r\n              <span>{{ user.name }}</span>\r\n            </mat-option>\r\n          </mat-select>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"labels max-w-full\" fxFlex=\"none\">\r\n        <div class=\"body-2 text-secondary\">LABELS</div>\r\n        <div fxLayout=\"row wrap\" fxLayoutAlign=\"start center\" fxLayoutGap=\"4px\">\r\n          <div *ngFor=\"let label of form.get('labels').value\"\r\n               [ngClass]=\"[label.bgClass, label.textClass]\"\r\n               class=\"label\"\r\n               fxFlex=\"none\">\r\n            {{ label.label }}\r\n          </div>\r\n          <div (click)=\"labelSelect.open()\"\r\n               class=\"label text-secondary bg-app-bar cursor-pointer mt-1\"\r\n               fxFlex=\"none\"\r\n               fxLayout=\"row\"\r\n               fxLayoutAlign=\"center center\">\r\n            <ic-icon [icon]=\"icAdd\" size=\"24px\"></ic-icon>\r\n          </div>\r\n          <mat-select #labelSelect=\"matSelect\"\r\n                      class=\"invisible w-0 h-0 text-sm\"\r\n                      formControlName=\"labels\"\r\n                      fxFlex=\"0 1 0px\"\r\n                      multiple>\r\n            <mat-option *ngFor=\"let label of labels\" [value]=\"label\">\r\n              <div [ngClass]=\"label.bgClass\"\r\n                   class=\"h-6 w-6 align-middle ltr:mr-2 rtl:ml-2 rounded inline-block\"></div>\r\n              <span>{{ label.label }}</span>\r\n            </mat-option>\r\n          </mat-select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <mat-divider class=\"-mx-6 mt-6\"></mat-divider>\r\n  </div>\r\n\r\n  <mat-dialog-content class=\"pb-6 content\">\r\n\r\n    <h2 class=\"body-2 font-medium m-0 mt-6 text-secondary\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n      <ic-icon [icon]=\"icDescription\" class=\"ltr:mr-4 rtl:ml-4\" fxFlex=\"none\" size=\"24px\"></ic-icon>\r\n      <span>DESCRIPTION</span>\r\n    </h2>\r\n\r\n    <div class=\"ltr:ml-10 rtl:mr-10 mt-3\" fxLayout=\"column\">\r\n      <mat-form-field appearance=\"outline\" class=\"vex-dense-form-field body-1\">\r\n        <textarea cdkAutosizeMinRows=\"2\"\r\n                  formControlName=\"description\"\r\n                  matInput\r\n                  matTextareaAutosize\r\n                  placeholder=\"Add a description ...\"></textarea>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <h2 class=\"body-2 font-medium m-0 text-secondary mt-4\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n      <ic-icon [icon]=\"icAttachFile\" class=\"ltr:mr-4 rtl:ml-4\" fxFlex=\"none\" size=\"24px\"></ic-icon>\r\n      <span fxFlex=\"auto\">ATTACHMENTS</span>\r\n      <button color=\"primary\" mat-button type=\"button\">\r\n        <ic-icon [icon]=\"icAdd\" class=\"ltr:mr-1 rtl:ml-1 ltr:-ml-1 rtl:-mr-1\" inline=\"true\" size=\"18px\"></ic-icon>\r\n        <span>ADD AN ATTACHMENT</span>\r\n      </button>\r\n    </h2>\r\n\r\n    <div *ngIf=\"form.get('attachments').value?.length > 0\"\r\n         class=\"ltr:ml-10 rtl:mr-10 mt-3\"\r\n         gdColumns=\"1fr 1fr\"\r\n         gdColumns.xs=\"1fr\"\r\n         gdGap=\"16px\">\r\n      <div *ngFor=\"let attachment of form.get('attachments').value\"\r\n           class=\"border p-1 rounded\"\r\n           fxLayout=\"row\"\r\n           fxLayoutAlign=\"start center\">\r\n\r\n        <div *ngIf=\"isImageExtension(attachment.extension)\"\r\n             class=\"bg-app-bar rounded ltr:mr-3 rtl:ml-3 w-24 h-16 overflow-hidden relative\">\r\n          <img [src]=\"attachment.path\" class=\"object-cover w-full h-full\">\r\n        </div>\r\n\r\n        <div *ngIf=\"!isImageExtension(attachment.extension)\"\r\n             class=\"bg-app-bar p-1 rounded ltr:mr-3 rtl:ml-3 w-100 h-16 leading-none body-2\"\r\n             fxLayoutAlign=\"center center\">{{ attachment.extension }}</div>\r\n\r\n        <div fxFlex=\"auto\">\r\n          <h4 class=\"m-0 body-2 leading-snug text-secondary\">{{ attachment.name }}</h4>\r\n          <p class=\"m-0 caption leading-snug text-hint\">\r\n            <ic-icon *ngIf=\"isCover(attachment)\" [icon]=\"icStar\" inline=\"true\"></ic-icon>\r\n            <span>{{ attachment.size }}</span>\r\n          </p>\r\n        </div>\r\n\r\n        <button [matMenuTriggerData]=\"{ attachment: attachment }\"\r\n                [matMenuTriggerFor]=\"attachmentMenu\"\r\n                class=\"text-secondary ltr:ml-1 rtl:mr-1\"\r\n                mat-icon-button\r\n                type=\"button\">\r\n          <mat-icon [icIcon]=\"icMoreVert\"></mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <mat-divider class=\"-mx-6 mt-6\"></mat-divider>\r\n\r\n    <h2 class=\"body-2 m-0 pt-6 text-secondary\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n      <ic-icon [icon]=\"icInsertComment\" class=\"ltr:mr-4 rtl:ml-4\" fxFlex=\"none\" size=\"24px\"></ic-icon>\r\n      <span fxFlex=\"auto\">COMMENTS</span>\r\n    </h2>\r\n\r\n    <div class=\"ltr:ml-10 rtl:mr-10 mt-2\">\r\n      <div *ngFor=\"let comment of form.get('comments').value\" class=\"mt-4\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n          <img [src]=\"comment.from.imageSrc\" class=\"avatar h-8 w-8 ltr:mr-3 rtl:ml-3\">\r\n          <div>\r\n            <h4 class=\"body-2 m-0 leading-snug\">{{ comment.from.name }}</h4>\r\n            <h5 class=\"caption text-secondary m-0 leading-snug\">{{ comment.date | relativeDateTime }}</h5>\r\n          </div>\r\n        </div>\r\n\r\n        <p class=\"m-0 mt-2 caption text-secondary\">{{ comment.message }}</p>\r\n      </div>\r\n\r\n      <div class=\"mt-6\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n        <img class=\"avatar w-8 h-8 ltr:mr-3 rtl:ml-3\" fxFlex=\"none\" src=\"assets/img/avatars/1.jpg\">\r\n        <mat-form-field appearance=\"outline\" class=\"vex-dense-form-field vex-flex-form-field\" fxFlex=\"auto\">\r\n          <input [formControl]=\"commentCtrl\" matInput placeholder=\"Write a comment ...\">\r\n          <button (click)=\"addComment()\" class=\"-top-1\" color=\"primary\" mat-button matSuffix type=\"button\">SEND</button>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n  </mat-dialog-content>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button mat-dialog-close type=\"button\">CANCEL</button>\r\n    <button color=\"primary\" mat-raised-button type=\"submit\">SAVE</button>\r\n  </mat-dialog-actions>\r\n</form>\r\n\r\n\r\n<mat-menu #attachmentMenu=\"matMenu\">\r\n  <ng-template let-attachment=\"attachment\" matMenuContent>\r\n    <button (click)=\"makeCover(attachment)\" mat-menu-item>\r\n      <mat-icon [icIcon]=\"icImage\"></mat-icon>\r\n      <span>Make Cover</span>\r\n    </button>\r\n\r\n    <button (click)=\"remove(attachment)\" mat-menu-item>\r\n      <mat-icon [icIcon]=\"icDelete\"></mat-icon>\r\n      <span>Remove</span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ScrumboardDialogComponent } from './scrumboard-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { RelativeDateTimeModule } from '../../../../../../@vex/pipes/relative-date-time/relative-date-time.module';\n\n\n@NgModule({\n  declarations: [ScrumboardDialogComponent],\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    ReactiveFormsModule,\n    IconModule,\n    FlexLayoutModule,\n    MatTooltipModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatMenuModule,\n    MatDividerModule,\n    RelativeDateTimeModule\n  ],\n  exports: [ScrumboardDialogComponent],\n  entryComponents: [ScrumboardDialogComponent]\n})\nexport class ScrumboardDialogModule {\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ScrumboardComponent } from './scrumboard.component';\nimport { VexRoutes } from '../../../../@vex/interfaces/vex-route.interface';\n\n\nconst routes: VexRoutes = [\n  {\n    path: '',\n    redirectTo: '1'\n  },\n  {\n    path: ':scrumboardId',\n    component: ScrumboardComponent,\n    data: {\n      scrollDisabled: true,\n      containerEnabled: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ScrumboardRoutingModule {\n}\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { ScrumboardList } from './interfaces/scrumboard-list.interface';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { ScrumboardCard } from './interfaces/scrumboard-card.interface';\nimport { trackById } from '../../../../@vex/utils/track-by';\nimport { scrumboards, scrumboardUsers } from '../../../../static-data/scrumboard';\nimport icNotifications from '@iconify/icons-ic/twotone-notifications';\nimport icInsertComment from '@iconify/icons-ic/twotone-insert-comment';\nimport icAttachFile from '@iconify/icons-ic/twotone-attach-file';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ScrumboardDialogComponent } from './components/scrumboard-dialog/scrumboard-dialog.component';\nimport { filter, map } from 'rxjs/operators';\nimport { ActivatedRoute } from '@angular/router';\nimport { Scrumboard } from './interfaces/scrumboard.interface';\nimport icAdd from '@iconify/icons-ic/twotone-add';\nimport { PopoverService } from '../../../../@vex/components/popover/popover.service';\nimport icClose from '@iconify/icons-ic/twotone-close';\nimport { FormControl } from '@angular/forms';\nimport icStar from '@iconify/icons-ic/twotone-star';\nimport icStarBorder from '@iconify/icons-ic/twotone-star-border';\nimport { stagger80ms } from '../../../../@vex/animations/stagger.animation';\nimport { fadeInUp400ms } from '../../../../@vex/animations/fade-in-up.animation';\n\n@Component({\n  selector: 'vex-scrumboard',\n  templateUrl: './scrumboard.component.html',\n  styleUrls: ['./scrumboard.component.scss'],\n  animations: [\n    stagger80ms,\n    fadeInUp400ms\n  ]\n})\nexport class ScrumboardComponent implements OnInit {\n\n  static nextId = 100;\n\n  board$ = this.route.paramMap.pipe(\n    map(paramMap => +paramMap.get('scrumboardId')),\n    map(scrumboardId => scrumboards.find(board => board.id === scrumboardId))\n  );\n\n  addCardCtrl = new FormControl();\n  addListCtrl = new FormControl();\n\n  trackById = trackById;\n  icNotifications = icNotifications;\n  icInsertComment = icInsertComment;\n  icAttachFile = icAttachFile;\n  icAdd = icAdd;\n  icClose = icClose;\n  icStar = icStar;\n  icStarBorder = icStarBorder;\n\n  scrumboardUsers = scrumboardUsers;\n\n  constructor(private dialog: MatDialog,\n              private route: ActivatedRoute,\n              private popover: PopoverService) { }\n\n  ngOnInit() {\n  }\n\n  open(board: Scrumboard, list: ScrumboardList, card: ScrumboardCard) {\n    this.addCardCtrl.setValue(null);\n\n    this.dialog.open(ScrumboardDialogComponent, {\n      data: { card, list, board },\n      width: '700px',\n      maxWidth: '100%',\n      disableClose: true\n    }).beforeClosed().pipe(\n      filter<ScrumboardCard>(Boolean)\n    ).subscribe(value => {\n      console.log(value);\n      const index = list.children.findIndex(child => child.id === card.id);\n      if (index > -1) {\n        list.children[index] = value;\n      }\n    });\n  }\n\n  drop(event: CdkDragDrop<ScrumboardCard[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex);\n    }\n  }\n\n  dropList(event: CdkDragDrop<ScrumboardList[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex);\n    }\n  }\n\n  getConnectedList(board: Scrumboard) {\n    return board.children.map(x => `${x.id}`);\n  }\n\n  openAddCard(list: ScrumboardList, content: TemplateRef<any>, origin: HTMLElement) {\n    this.popover.open({\n      content,\n      origin,\n      position: [\n        {\n          originX: 'center',\n          originY: 'bottom',\n          overlayX: 'center',\n          overlayY: 'bottom'\n        },\n        {\n          originX: 'center',\n          originY: 'bottom',\n          overlayX: 'center',\n          overlayY: 'top',\n        },\n      ]\n    });\n  }\n\n  openAddList(board: Scrumboard, content: TemplateRef<any>, origin: HTMLElement) {\n    this.popover.open({\n      content,\n      origin,\n      position: [\n        {\n          originX: 'center',\n          originY: 'bottom',\n          overlayX: 'center',\n          overlayY: 'top'\n        },\n        {\n          originX: 'center',\n          originY: 'bottom',\n          overlayX: 'center',\n          overlayY: 'top',\n        },\n      ]\n    });\n  }\n\n  createCard(list: ScrumboardList, close: () => void) {\n    if (!this.addCardCtrl.value) {\n      return;\n    }\n\n    list.children.push({\n      id: ScrumboardComponent.nextId++,\n      title: this.addCardCtrl.value\n    });\n\n    close();\n\n    this.addCardCtrl.setValue(null);\n  }\n\n  createList(board: Scrumboard, close: () => void) {\n    if (!this.addListCtrl.value) {\n      return;\n    }\n\n    board.children.push({\n      id: ScrumboardComponent.nextId++,\n      label: this.addListCtrl.value,\n      children: []\n    });\n\n    close();\n\n    this.addListCtrl.setValue(null);\n  }\n\n  toggleStar(board: Scrumboard) {\n    board.starred = !board.starred;\n  }\n}\n","<div *ngIf=\"board$ | async as board\" class=\"h-full w-full overflow-hidden\" fxLayout=\"column\">\r\n\r\n  <div class=\"py-4 px-gutter\" fxFlex=\"none\" fxLayout=\"row\" fxLayoutAlign=\"start center\" vexContainer>\r\n    <h1 class=\"title m-0\">Tech Startup Board</h1>\r\n    <button (click)=\"toggleStar(board)\" class=\"ml-2\" mat-icon-button type=\"button\">\r\n      <mat-icon *ngIf=\"board.starred\" [icIcon]=\"icStar\" class=\"text-amber\"></mat-icon>\r\n      <mat-icon *ngIf=\"!board.starred\" [icIcon]=\"icStarBorder\"></mat-icon>\r\n    </button>\r\n\r\n    <span fxFlex></span>\r\n\r\n    <div *ngIf=\"scrumboardUsers?.length > 0\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n      <img *ngFor=\"let user of scrumboardUsers\"\r\n           [matTooltip]=\"user.name\"\r\n           [src]=\"user.imageSrc\"\r\n           class=\"avatar overlapping\">\r\n    </div>\r\n  </div>\r\n\r\n  <div (cdkDropListDropped)=\"dropList($event)\"\r\n       @stagger\r\n       [cdkDropListData]=\"board.children\"\r\n       cdkDropList\r\n       cdkDropListOrientation=\"horizontal\"\r\n       class=\"px-gutter pb-gutter min-h-0 overflow-x-auto\"\r\n       fxFlex=\"auto\"\r\n       fxLayout=\"row\"\r\n       fxLayoutAlign=\"start start\"\r\n       fxLayoutGap=\"24px\"\r\n       vexContainer>\r\n    <div *ngFor=\"let list of board.children; trackBy: trackById\"\r\n         @fadeInUp\r\n         [cdkDragData]=\"list\"\r\n         cdkDrag\r\n         cdkDropListGroup\r\n         class=\"rounded bg-app-bar overflow-hidden max-h-full w-full max-w-xxs\"\r\n         fxFlex=\"none\"\r\n         fxLayout=\"column\">\r\n      <div cdkDragHandle class=\"p-4 cursor-pointer\" fxFlex=\"none\">\r\n        <h2 class=\"subheading-2 font-medium m-0 select-none\" fxFlex=\"none\">{{ list.label }}</h2>\r\n      </div>\r\n\r\n      <vex-scrollbar class=\"flex-auto\">\r\n        <div (cdkDropListDropped)=\"drop($event)\"\r\n             [cdkDropListConnectedTo]=\"getConnectedList(board)\"\r\n             [cdkDropListData]=\"list.children\"\r\n             cdkDropList\r\n             class=\"px-4 pb-4\"\r\n             id=\"{{ list.id }}\">\r\n          <div (click)=\"open(board, list, card)\"\r\n               *ngFor=\"let card of list.children; trackBy: trackById\"\r\n               [cdkDragData]=\"card\"\r\n               cdkDrag\r\n               class=\"scrumboard-card card w-full cursor-pointer overflow-hidden\">\r\n\r\n            <div *ngIf=\"card.cover\" class=\"w-full h-40 overflow-hidden\">\r\n              <img [src]=\"card.cover.path\" class=\"object-cover w-full h-full\">\r\n            </div>\r\n\r\n            <div class=\"p-4\">\r\n              <div *ngIf=\"card.labels?.length > 0\" class=\"mb-2\" fxLayout=\"row\" fxLayoutGap=\"8px\">\r\n                <div *ngFor=\"let label of card.labels\"\r\n                     [ngClass]=\"label.bgClass\"\r\n                     class=\"label\"\r\n                     fxFlex></div>\r\n              </div>\r\n\r\n              <h3 class=\"body-2 m-0 select-none\">{{ card.title }}</h3>\r\n\r\n              <div *ngIf=\"card.dueDate || card.comments?.length > 0 || card.attachments?.length > 0 || card.users?.length > 0\"\r\n                   class=\"mt-2\"\r\n                   fxLayout=\"row\"\r\n                   fxLayoutGap=\"8px\">\r\n                <div *ngIf=\"card.dueDate\"\r\n                     [ngClass]=\"{ 'bg-green text-contrast-white': card.dueDate.done }\"\r\n                     class=\"box bg-app-bar text-secondary rounded caption\">\r\n                  <ic-icon [icon]=\"icNotifications\" inline=\"true\" size=\"16px\"></ic-icon>\r\n                  <span class=\"box-text\">{{ card.dueDate.date | dateTokens:'MMM, dd' }}</span>\r\n                </div>\r\n\r\n                <div *ngIf=\"card.comments?.length > 0\" class=\"box bg-app-bar text-secondary rounded caption\">\r\n                  <ic-icon [icon]=\"icInsertComment\" class=\"ml-1\" inline=\"true\" size=\"15px\"></ic-icon>\r\n                  <span class=\"box-text\">{{ card.comments.length }}</span>\r\n                </div>\r\n\r\n                <div *ngIf=\"card.attachments?.length > 0\" class=\"box bg-app-bar text-secondary rounded caption\">\r\n                  <ic-icon [icon]=\"icAttachFile\" inline=\"true\" size=\"16px\"></ic-icon>\r\n                  <span class=\"box-text\">{{ card.attachments.length }}</span>\r\n                </div>\r\n\r\n                <div *ngIf=\"card.users?.length > 0\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n                  <img *ngFor=\"let user of card.users\"\r\n                       [matTooltip]=\"user.name\"\r\n                       [src]=\"user.imageSrc\"\r\n                       class=\"avatar overlapping\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </vex-scrollbar>\r\n\r\n\r\n      <div #addCardOriginRef class=\"bg-hover\" fxFlex=\"none\">\r\n        <ng-template #addCardTemplate let-close=\"close\">\r\n          <div class=\"card px-4 py-6\">\r\n            <mat-form-field class=\"vex-dense-form-field\">\r\n              <mat-label>Card Title</mat-label>\r\n              <input [formControl]=\"addCardCtrl\" matInput placeholder=\"Enter your title...\">\r\n              <button (click)=\"createCard(list, close)\"\r\n                      class=\"-top-1\"\r\n                      color=\"primary\"\r\n                      mat-button\r\n                      matSuffix\r\n                      type=\"button\">CREATE\r\n              </button>\r\n            </mat-form-field>\r\n          </div>\r\n        </ng-template>\r\n\r\n        <button (click)=\"openAddCard(list, addCardTemplate, addCardOriginRef)\"\r\n                class=\"w-full\"\r\n                mat-button\r\n                type=\"button\">\r\n          <ic-icon [icon]=\"icAdd\" class=\"mr-1 -ml-1\" inline=\"true\"></ic-icon>\r\n          <span>ADD CARD</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div #addListOriginRef class=\"w-full max-w-xxs rounded bg-app-bar\" fxFlex=\"none\">\r\n      <ng-template #addListTemplate let-close=\"close\">\r\n        <div class=\"card px-4 pt-3 pb-2\">\r\n          <mat-form-field class=\"vex-dense-form-field\">\r\n            <mat-label>List Title</mat-label>\r\n            <input [formControl]=\"addListCtrl\" matInput placeholder=\"Enter your title...\">\r\n          </mat-form-field>\r\n\r\n          <div class=\"mt-3\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <button (click)=\"close()\" class=\"text-secondary w-8 h-8 leading-none\" mat-icon-button type=\"button\">\r\n              <mat-icon [icIcon]=\"icClose\" size=\"18px\"></mat-icon>\r\n            </button>\r\n            <button (click)=\"createList(board, close)\" color=\"primary\" mat-button type=\"button\">CREATE</button>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n\r\n      <button (click)=\"openAddList(board, addListTemplate, addListOriginRef)\"\r\n              class=\"w-full\"\r\n              mat-button\r\n              type=\"button\">\r\n        <ic-icon [icon]=\"icAdd\" class=\"mr-1 -ml-1\" inline=\"true\"></ic-icon>\r\n        <span>ADD LIST</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ScrumboardRoutingModule } from './scrumboard-routing.module';\nimport { ScrumboardComponent } from './scrumboard.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ScrollbarModule } from '../../../../@vex/components/scrollbar/scrollbar.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { DateTokensModule } from '../../../../@vex/pipes/date-tokens/date-tokens.module';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ScrumboardDialogModule } from './components/scrumboard-dialog/scrumboard-dialog.module';\nimport { PopoverModule } from '../../../../@vex/components/popover/popover.module';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ContainerModule } from '../../../../@vex/directives/container/container.module';\n\n\n@NgModule({\n  declarations: [ScrumboardComponent],\n  imports: [\n    CommonModule,\n    ScrumboardRoutingModule,\n    FlexLayoutModule,\n    ScrollbarModule,\n    MatButtonModule,\n    DragDropModule,\n    IconModule,\n    DateTokensModule,\n    MatTooltipModule,\n    ScrumboardDialogModule,\n    PopoverModule,\n    MatInputModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    ContainerModule\n  ]\n})\nexport class ScrumboardModule {\n}\n"]}