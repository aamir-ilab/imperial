{"version":3,"sources":["./node_modules/@iconify/icons-ic/round-import-export.js","./src/app/admin/payroll/client-create-update/client-create-update.component.ts","./src/app/admin/payroll/client-create-update/client-create-update.component.html","./src/app/admin/payroll/client-create-update/client-create-update.module.ts","./src/app/admin/payroll/payroll-routing.module.ts","./src/app/admin/payroll/payroll.component.ts","./src/app/admin/payroll/payroll.component.html","./src/app/admin/payroll/payroll.module.ts","./src/app/models/payroll.model.ts"],"names":[],"mappings":"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","file":"admin-payroll-payroll-module-es2015.js","sourcesContent":["var data = {\n\t\"body\": \"<path d=\\\"M8.65 3.35L5.86 6.14c-.32.31-.1.85.35.85H8V13c0 .55.45 1 1 1s1-.45 1-1V6.99h1.79c.45 0 .67-.54.35-.85L9.35 3.35a.501.501 0 0 0-.7 0zM16 17.01V11c0-.55-.45-1-1-1s-1 .45-1 1v6.01h-1.79c-.45 0-.67.54-.35.85l2.79 2.78c.2.19.51.19.71 0l2.79-2.78c.32-.31.09-.85-.35-.85H16z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport icMoreVert from '@iconify/icons-ic/twotone-more-vert';\r\nimport icClose from '@iconify/icons-ic/twotone-close';\r\nimport icPrint from '@iconify/icons-ic/twotone-print';\r\nimport icDownload from '@iconify/icons-ic/twotone-cloud-download';\r\nimport icDelete from '@iconify/icons-ic/twotone-delete';\r\nimport icPhone from '@iconify/icons-ic/twotone-phone';\r\nimport icPerson from '@iconify/icons-ic/twotone-person';\r\nimport icMyLocation from '@iconify/icons-ic/twotone-my-location';\r\nimport icLocationCity from '@iconify/icons-ic/twotone-location-city';\r\nimport icEditLocation from '@iconify/icons-ic/twotone-edit-location';\r\nimport { Client } from 'src/app/models/client.model';\r\n\r\n@Component({\r\n  selector: 'vex-client-create-update',\r\n  templateUrl: './client-create-update.component.html',\r\n  styleUrls: ['./client-create-update.component.scss']\r\n})\r\nexport class ClientCreateUpdateComponent implements OnInit {\r\n\r\n  static id = 100;\r\n\r\n  form: FormGroup;\r\n  mode: 'create' | 'update' = 'create';\r\n\r\n  icMoreVert = icMoreVert;\r\n  icClose = icClose;\r\n\r\n  icPrint = icPrint;\r\n  icDownload = icDownload;\r\n  icDelete = icDelete;\r\n\r\n  icPerson = icPerson;\r\n  icMyLocation = icMyLocation;\r\n  icLocationCity = icLocationCity;\r\n  icEditLocation = icEditLocation;\r\n  icPhone = icPhone;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public defaults: any,\r\n              private dialogRef: MatDialogRef<ClientCreateUpdateComponent>,\r\n              private fb: FormBuilder) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.defaults) {\r\n      this.mode = 'update';\r\n    } else {\r\n      this.defaults = {} as Client;\r\n    }\r\n\r\n    this.form = this.fb.group({\r\n      id: [ClientCreateUpdateComponent.id++],\r\n      // profilePhoto: this.defaults.profilePhoto,\r\n      _id:[this.defaults._id],\r\n      emailAddress: [this.defaults.emailAddress || ''],\r\n      firstName: [this.defaults.firstName || ''],\r\n      lastName: [this.defaults.lastName || ''],\r\n      companyName: this.defaults.companyName || '',\r\n      companyAddress: this.defaults.companyAddress || '',\r\n      companyPhoneNumber: this.defaults.companyPhoneNumber || '',\r\n      emailAddressAccountsTeam: this.defaults.emailAddressAccountsTeam || '',\r\n      VATNumber: this.defaults.VATNumber || '',\r\n      companyRegNumber: this.defaults.companyRegNumber || '',\r\n      position: this.defaults.position || '',\r\n      phoneNumber: this.defaults.phoneNumber || '',\r\n    });\r\n  }\r\n\r\n  save() {\r\n    if (this.mode === 'create') {\r\n      this.createClient();\r\n    } else if (this.mode === 'update') {\r\n      this.updateClient();\r\n    }\r\n  }\r\n\r\n  createClient() {\r\n    const client = this.form.value;\r\n\r\n    // if (!client.profilePhoto) {\r\n    //   client.profilePhoto = 'assets/img/avatars/1.jpg';\r\n    // }\r\n\r\n    this.dialogRef.close(client);\r\n  }\r\n\r\n  updateClient() {\r\n    const client = this.form.value;\r\n    client.id = this.defaults.id;\r\n\r\n    this.dialogRef.close(client);\r\n  }\r\n\r\n  isCreateMode() {\r\n    return this.mode === 'create';\r\n  }\r\n\r\n  isUpdateMode() {\r\n    return this.mode === 'update';\r\n  }\r\n}\r\n","<form (ngSubmit)=\"save()\" [formGroup]=\"form\">\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" mat-dialog-title>\r\n    <!-- <img *ngIf=\"form.get('profilePhoto').value\" [src]=\"form.get('profilePhoto').value\" class=\"avatar mr-5\"> -->\r\n\r\n    <h2 *ngIf=\"form.get('firstName').value || form.get('lastName').value\"\r\n        class=\"headline m-0\"\r\n        fxFlex=\"auto\">{{ form.get('firstName').value + ' ' + form.get('lastName').value }}</h2>\r\n    <h2 *ngIf=\"!form.get('firstName').value && !form.get('lastName').value\"\r\n        class=\"headline m-0\"\r\n        fxFlex=\"auto\">New Client</h2>\r\n\r\n    <!-- <button [matMenuTriggerFor]=\"settingsMenu\" class=\"text-secondary\" mat-icon-button type=\"button\">\r\n      <mat-icon [icIcon]=\"icMoreVert\"></mat-icon>\r\n    </button> -->\r\n\r\n    <button class=\"text-secondary\" mat-dialog-close mat-icon-button type=\"button\">\r\n      <mat-icon [icIcon]=\"icClose\"></mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <mat-divider class=\"-mx-6 text-border\"></mat-divider>\r\n\r\n  <mat-dialog-content fxLayout=\"column\">\r\n    <div class=\"flex flex-col sm:flex-row\">\r\n      <mat-form-field class=\"mt-6 flex-auto\">\r\n        <mat-label>First Name</mat-label>\r\n        <input cdkFocusInitial formControlName=\"firstName\" matInput>\r\n\r\n        <mat-icon [icIcon]=\"icPerson\" class=\"mr-3\" matPrefix></mat-icon>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"sm:mt-6 sm:ml-6 flex-auto\">\r\n        <mat-label>Last Name</mat-label>\r\n        <input cdkFocusInitial formControlName=\"lastName\" matInput>\r\n\r\n        <mat-icon [icIcon]=\"icPerson\" class=\"mr-3\" matPrefix></mat-icon>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <mat-form-field class=\"flex-auto\">\r\n      <mat-label>Email</mat-label>\r\n      <input formControlName=\"emailAddress\" matInput>\r\n\r\n      <mat-icon [icIcon]=\"icEditLocation\" class=\"mr-3\" matPrefix></mat-icon>\r\n    </mat-form-field>\r\n\r\n    <div class=\"flex flex-col sm:flex-row\">\r\n      <mat-form-field class=\"flex-auto\">\r\n        <mat-label>Company Name</mat-label>\r\n        <input formControlName=\"companyName\" matInput>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"sm:ml-6 flex-auto\">\r\n        <mat-label>Company Address</mat-label>\r\n        <input formControlName=\"companyAddress\" matInput>\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"flex flex-col sm:flex-row\">\r\n      <mat-form-field class=\"flex-auto\">\r\n        <mat-label>Company Phone Number</mat-label>\r\n        <input formControlName=\"companyPhoneNumber\" pattern=\"[0-9]*\" minlength=\"10\"maxlength=\"14\"onkeypress=\"return event.charCode >= 48 && event.charCode <= 57\"  matInput>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"sm:ml-6 flex-auto\">\r\n        <mat-label>Email Address Accounts Team</mat-label>\r\n        <input formControlName=\"emailAddressAccountsTeam\" matInput>\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"flex flex-col sm:flex-row\">\r\n      <mat-form-field class=\"flex-auto\">\r\n        <mat-label>VAT Number</mat-label>\r\n        <input formControlName=\"VATNumber\" matInput>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"sm:ml-6 flex-auto\">\r\n        <mat-label>Company RegNumber</mat-label>\r\n        <input formControlName=\"companyRegNumber\" matInput>\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"flex flex-col sm:flex-row\">\r\n      <mat-form-field class=\"flex-auto\">\r\n        <mat-label>Position</mat-label>\r\n        <input formControlName=\"position\" matInput>\r\n        <mat-icon [icIcon]=\"icMyLocation\" class=\"mr-3\" matPrefix></mat-icon>\r\n      </mat-form-field>\r\n    </div>\r\n    <mat-form-field class=\"flex-auto\">\r\n      <mat-label>Phone Number</mat-label>\r\n      <input formControlName=\"phoneNumber\"  pattern=\"[0-9]*\" minlength=\"10\"maxlength=\"14\"onkeypress=\"return event.charCode >= 48 && event.charCode <= 57\" matInput>\r\n\r\n      <mat-icon [icIcon]=\"icPhone\" class=\"mr-3\" matPrefix></mat-icon>\r\n    </mat-form-field>\r\n\r\n\r\n  </mat-dialog-content>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button mat-dialog-close type=\"button\">CANCEL</button>\r\n    <button *ngIf=\"isCreateMode()\" color=\"primary\" mat-button type=\"submit\">CREATE Client</button>\r\n    <button *ngIf=\"isUpdateMode()\" color=\"primary\" mat-button type=\"submit\">UPDATE Client</button>\r\n  </mat-dialog-actions>\r\n</form>\r\n\r\n<mat-menu #settingsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n  <button mat-menu-item>\r\n    <mat-icon [icIcon]=\"icPrint\"></mat-icon>\r\n    <span>Print</span>\r\n  </button>\r\n\r\n  <button mat-menu-item>\r\n    <mat-icon [icIcon]=\"icDownload\"></mat-icon>\r\n    <span>Export</span>\r\n  </button>\r\n\r\n  <button mat-menu-item>\r\n    <mat-icon [icIcon]=\"icDelete\"></mat-icon>\r\n    <span>Delete</span>\r\n  </button>\r\n</mat-menu>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { ClientCreateUpdateComponent } from './client-create-update.component';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { IconModule } from '@visurel/iconify-angular';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatMenuModule,\r\n    IconModule,\r\n    MatDividerModule\r\n  ],\r\n  declarations: [ClientCreateUpdateComponent],\r\n  entryComponents: [ClientCreateUpdateComponent],\r\n  exports: [ClientCreateUpdateComponent]\r\n})\r\nexport class ClientCreateUpdateModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { VexRoutes } from '../../../@vex/interfaces/vex-route.interface';\r\nimport { PayrollComponent } from './payroll.component';\r\n\r\n\r\nconst routes: VexRoutes = [\r\n  {\r\n    path: '',\r\n    component: PayrollComponent,\r\n    data: {\r\n      toolbarShadowEnabled: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PayrollRoutingModule {\r\n}\r\n","import { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { Observable, of, ReplaySubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n// import { client } from './interfaces/client.model';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TableColumn } from '../../../@vex/interfaces/table-column.interface';\nimport { aioTableData1,aioTableData, aioTableLabels,aioTableLabelsPayroll } from '../../../static-data/aio-table-data';\nimport { ClientCreateUpdateComponent } from './client-create-update/client-create-update.component';\nimport icEdit from '@iconify/icons-ic/twotone-edit';\nimport icDelete from '@iconify/icons-ic/twotone-delete';\nimport icSearch from '@iconify/icons-ic/twotone-search';\nimport icAdd from '@iconify/icons-ic/twotone-add';\nimport icFilterList from '@iconify/icons-ic/twotone-filter-list';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport icMoreHoriz from '@iconify/icons-ic/twotone-more-horiz';\nimport icFolder from '@iconify/icons-ic/twotone-folder';\nimport { fadeInUp400ms } from '../../../@vex/animations/fade-in-up.animation';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldDefaultOptions } from '@angular/material/form-field';\nimport { stagger40ms } from '../../../@vex/animations/stagger.animation';\nimport { FormControl } from '@angular/forms';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { MatSelectChange } from '@angular/material/select';\nimport icPhone from '@iconify/icons-ic/twotone-phone';\nimport icMail from '@iconify/icons-ic/twotone-mail';\nimport icMap from '@iconify/icons-ic/twotone-map';\nimport { Client } from 'src/app/models/client.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { User } from 'src/app/models/user.model';\n\nimport roundImportExport from '@iconify/icons-ic/round-import-export';\nimport { Payroll } from 'src/app/models/payroll.model';\n\n@UntilDestroy()\n@Component({\n  selector: 'vex-payroll',\n  templateUrl: './payroll.component.html',\n  styleUrls: ['./payroll.component.scss'],\n  animations: [\n    fadeInUp400ms,\n    stagger40ms\n  ],\n  providers: [\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: {\n        appearance: 'standard'\n      } as MatFormFieldDefaultOptions\n    }\n  ]\n})\nexport class PayrollComponent implements OnInit, AfterViewInit {\n\n  layoutCtrl = new FormControl('boxed');\n  roundImportExport = roundImportExport;\n  lines = []; //for headings\n  linesR = []; // for rows\n  loading = false;\n  /**\n   * Simulating a service with HTTP that returns Observables\n   * You probably want to remove this and do all requests in a service with HTTP\n   */\n  subject$: ReplaySubject<Payroll[]> = new ReplaySubject<Payroll[]>(1);\n  data$: Observable<Payroll[]> = this.subject$.asObservable();\n  clients: Payroll[];\n\n  @Input()\n  columns: TableColumn<Payroll>[] = [\n    // { label: 'Checkbox', property: 'checkbox', type: 'checkbox', visible: true },\n    // { label: 'Image', property: 'profilePhoto', type: 'image', visible: true },\n    { label: 'Log ID', property: 'logID', type: 'text', visible: true, cssClasses: ['font-medium'] },\n    { label: 'Timestamp', property: 'timestampStr', type: 'text', visible: true },\n    { label: 'User', property: 'name', type: 'text', visible: true },\n    { label: 'Type', property: 'type', type: 'text', visible: true },\n    { label: 'Period', property: 'period', type: 'text', visible: true },\n    { label: 'Response', property: 'response', type: 'button', visible: true },\n    // { label: 'Last Name', property: 'lastName', type: 'text', visible: false },\n    // { label: 'Email', property: 'emailAddress', type: 'text', visible: true },\n    // { label: 'Company Name', property: 'companyName', type: 'text', visible: true },\n    // { label: 'Company Address', property: 'companyAddress', type: 'text', visible: true },\n    // { label: 'Company PhoneNumber', property: 'companyPhoneNumber', type: 'text', visible: true },\n    // { label: 'Email Address AccountsTeam', property: 'emailAddressAccountsTeam', type: 'text', visible: false },\n    // { label: 'VATNumber', property: 'VATNumber', type: 'text', visible: false },\n    // { label: 'CompanyRegNumber', property: 'companyRegNumber', type: 'text', visible: false },\n    // { label: 'Position', property: 'position', type: 'text', visible: true },\n    // { label: 'Actions', property: 'actions', type: 'button', visible: true },\n    // { label: 'ID', property: '_id', type: 'button', visible: false }\n  ];\n  pageSize = 10;\n  pageSizeOptions: number[] = [5, 10, 20, 50];\n  dataSource: MatTableDataSource<Payroll> | null;\n  selection = new SelectionModel<Payroll>(true, []);\n  searchCtrl = new FormControl();\n\n  labels = aioTableLabels;\n  responses = aioTableLabelsPayroll;\n  icPhone = icPhone;\n  icMail = icMail;\n  icMap = icMap;\n  icEdit = icEdit;\n  icSearch = icSearch;\n  icDelete = icDelete;\n  icAdd = icAdd;\n  icFilterList = icFilterList;\n  icMoreHoriz = icMoreHoriz;\n  icFolder = icFolder;\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  constructor(private dialog: MatDialog,\n    private authService:AuthService) {\n  }\n\n  get visibleColumns() {\n    return this.columns.filter(column => column.visible).map(column => column.property);\n  }\n\n  /**\n   * Example on how to get data and pass it to the table - usually you would want a dedicated service with a HTTP request for this\n   * We are simulating this request here.\n   */\n  getData() {\n    this.authService.getAllPayroll().subscribe((clients)=>{\n      of(clients.map(client =>new Payroll(client))).subscribe(clientes =>{\n        console.log('123213123')  \n        console.log(clientes)  \n        this.subject$.next(clientes)\n      });\n    })\n    // return of(aioTableData1.map(client => new Payroll(client))).subscribe(clients =>{\n    //   this.subject$.next(clients);\n    // });\n  }\n\n  ngOnInit() {\n    this.getData();\n\n    this.dataSource = new MatTableDataSource();\n\n    this.data$.pipe(\n      filter<Payroll[]>(Boolean)\n    ).subscribe(clients => {\n      this.clients = clients;\n      this.dataSource.data = clients;\n    });\n\n    this.searchCtrl.valueChanges.pipe(\n      untilDestroyed(this)\n    ).subscribe(value => this.onFilterChange(value));\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  createClient() {\n    this.dialog.open(ClientCreateUpdateComponent).afterClosed().subscribe((client: Payroll) => {\n      /**\n       * Client is the updated client (if the user pressed Save - otherwise it's null)\n       */\n      if (client) {\n        /**\n         * Here we are updating our local array.\n         * You would probably make an HTTP request here.\n         */\n        this.authService.register(client, 'Client').subscribe((res)=>{\n          console.log('new created client')\n          this.authService.openSnackbar('New Client Added!');\n        })\n        this.clients.unshift(new Payroll(client));\n        this.subject$.next(this.clients);\n      }\n    });\n  }\n\n  updateClient(client: Payroll) {\n    this.dialog.open(ClientCreateUpdateComponent, {\n      data: client\n    }).afterClosed().subscribe(updatedClient => {\n      /**\n       * Client is the updated client (if the user pressed Save - otherwise it's null)\n       */\n      if (updatedClient) {\n        /**\n         * Here we are updating our local array.\n         * You would probably make an HTTP request here.\n         */\n        console.log('********')\n        console.log(updatedClient)\n        this.authService.updateUser(updatedClient).subscribe((res =>{\n            this.authService.openSnackbar('Updated Successfully!')\n        }))\n        const index = this.clients.findIndex((existingClient) => existingClient.id === updatedClient.id);\n        this.clients[index] = new Payroll(updatedClient);\n        this.subject$.next(this.clients);\n      }\n    });\n  }\n\n  deleteClient(client: Payroll) {\n    /**\n     * Here we are updating our local array.\n     * You would probably make an HTTP request here.\n     */\n      this.authService.deleteUser(client,'Client').subscribe((res =>{\n      this.authService.openSnackbar('Removed Successfully!')\n  }))\n    this.clients.splice(this.clients.findIndex((existingClient) => existingClient.id === client.id), 1);\n    this.selection.deselect(client);\n    this.subject$.next(this.clients);\n  }\n\n  deleteClients(clients: Payroll[]) {\n    /**\n     * Here we are updating our local array.\n     * You would probably make an HTTP request here.\n     */\n    clients.forEach(c =>{\n      this.authService.deleteUser(c,'Client').subscribe((res) =>{\n        console.log(res);\n        // this.authService.openSnackbar('Removed Successfully!')\n    })});\n        // this.authService.openSnackbar('Removed Successfully!')\n\n    clients.forEach(c => this.deleteClient(c));\n  }\n\n  onFilterChange(value: string) {\n    if (!this.dataSource) {\n      return;\n    }\n    value = value.trim();\n    value = value.toLowerCase();\n    this.dataSource.filter = value;\n  }\n\n  toggleColumnVisibility(column, event) {\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    column.visible = !column.visible;\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  trackByProperty<T>(index: number, column: TableColumn<T>) {\n    return column.property;\n  }\n\n  onLabelChange(change: MatSelectChange, row: Payroll) {\n    const index = this.clients.findIndex(c => c === row);\n    // this.clients[index].labels = change.value;\n    this.subject$.next(this.clients);\n  }\n  exportToCsv(filename, rows) {\n    var processRow = function (row) {\n        var finalVal = '';\n        for (var j = 0; j < row.length; j++) {\n            var innerValue = row[j] === null ? '' : row[j].toString();\n            if (row[j] instanceof Date) {\n                innerValue = row[j].toLocaleString();\n            };\n            var result = innerValue.replace(/\"/g, '\"\"');\n            if (result.search(/(\"|,|\\n)/g) >= 0)\n                result = '\"' + result + '\"';\n            if (j > 0)\n                finalVal += ',';\n            finalVal += result;\n        }\n        return finalVal + '\\n';\n    };\n\n    var csvFile = '';\n    for (var i = 0; i < rows.length; i++) {\n        csvFile += processRow(rows[i]);\n    }\n\n    var blob = new Blob([csvFile], { type: 'text/csv;charset=utf-8;' });\n    if (navigator.msSaveBlob) { // IE 10+\n        navigator.msSaveBlob(blob, filename);\n    } else {\n        var link = document.createElement(\"a\");\n        if (link.download !== undefined) { // feature detection\n            // Browsers that support HTML5 download attribute\n            var url = URL.createObjectURL(blob);\n            link.setAttribute(\"href\", url);\n            link.setAttribute(\"download\", filename);\n            link.style.visibility = 'hidden';\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n    }\n}\n\n\n\n\n\t\t\t\n  exportTimesheets(){\n    this.authService.getExpertTimesheets().subscribe((res)=>{\n      console.log(res)\n      if(res == 'no Data'){\n        this.authService.openSnackbar('No Data')\n\n      }else{\n        var mainArr = [['WR_REF','WR_UNITS','WR_TRNCDE','WR_RATE']];\n\n        res.forEach(element => {\n          mainArr.push(element.workerID, element.wrUnits, element.trncde, element.wrRate)\n        });\n          // ['Employee Code','Gross Pay','Pay Description on line 1 (Fixed number)','Pay Rate (Fixed number)'],\t\n        if(res.length > 0)\n        {\n          this.authService.openSnackbar('Successfully Expert Timesheet')\n          this.exportToCsv('import.csv',mainArr)\n        }else{\n          this.authService.openSnackbar('No Data')\n        }\n      }\n  \n  \n    })\n  }\n  importPayroll(){\n\n  }\n  generateWorkerID(){\n    this.authService.getGenerateWorkerID().subscribe((res)=>{\n      console.log('res')\n      console.log(res)\n      if(res.fullname){\n        this.authService.openSnackbar('Alrady Gnerated');\n\n      }else{\n          if(res.length  == 0){\n          this.authService.openSnackbar('No Data')\n        }else{\n          // this.getData();\n          of(res.map(client =>new Payroll(client))).subscribe(clientes =>{\n            console.log('123213123')  \n            console.log(clientes)  \n            this.subject$.next(clientes)\n          });\n          this.authService.openSnackbar('Gnerated Successfully')\n        }\n      }\n      \n    },(err)=>{\n      this.authService.openSnackbar('Error')\n    })\n  }\n\n  changeListener(files: FileList){\n    console.log(files);\n    this.loading = true;\n    if(files && files.length > 0) {\n       let file : File = files.item(0); \n         console.log(file.name);\n         console.log(file.size);\n         console.log(file.type);\n         //File reader method\n         let reader: FileReader = new FileReader();\n         reader.readAsText(file);\n         reader.onload = (e) => {\n          let csv: any = reader.result;\n          let allTextLines = [];\n          allTextLines = csv.split(/\\r|\\n|\\r/);\n         \n         //Table Headings\n          let headers = allTextLines[0].split(';');\n          let data = headers;\n          let tarr = [];\n          for (let j = 0; j < headers.length; j++) {\n            tarr.push(data[j]);\n          }\n          //Pusd headings to array variable\n          this.lines.push(tarr);\n          \n         \n          // Table Rows\n          let tarrR = [];\n          \n          let arrl = allTextLines.length;\n          let rows = [];\n          for(let i = 1; i < arrl; i++){\n          rows.push(allTextLines[i].split(';'));\n         \n          }\n          \n          for (let j = 0; j < arrl; j++) {\n      \n              tarrR.push(rows[j]);\n              \n          }\n         //Push rows to array variable\n          this.linesR.push(tarrR);\n          console.log('tarrR' +tarrR);\n          console.log('lines' +this.lines);\n         console.log('linesR' +this.linesR);  \n         this.authService.getImportPayroll(tarrR).subscribe((res)=>{\n            this.loading = false;\n            if(res.fullname){\n              this.authService.openSnackbar('Alrady Gnerated');\n            }else{\n                if(res.length  == 0){\n                this.authService.openSnackbar('No Data')\n              }else{\n                // this.getData();\n                of(res.map(client =>new Payroll(client))).subscribe(clientes =>{\n                  console.log('123213123')  \n                  console.log(clientes)  \n                  this.subject$.next(clientes)\n                });\n                this.authService.openSnackbar('Have done')\n              }\n            }\n            console.log('exprot return value')\n                  console.log(tarrR)\n         },(err)=>{\n          this.loading = false;\n          console.log('exprot return value')\n              console.log(tarrR)\n         })\n     }\n    \n    }\n  }\n\n}\n","<vex-page-layout>\r\n\r\n  <vex-page-layout-header class=\"pb-16\" fxLayout=\"column\" fxLayoutAlign=\"center start\">\r\n    <div [class.container]=\"layoutCtrl.value === 'boxed'\"\r\n         [class.px-gutter]=\"layoutCtrl.value === 'fullwidth'\"\r\n         class=\"w-full flex flex-col sm:flex-row justify-between\">\r\n      <div>\r\n        <h1 class=\"title mt-0 mb-1\">Payroll Management</h1>\r\n        <!-- <vex-breadcrumbs [crumbs]=\"['admin', 'clients']\"></vex-breadcrumbs> -->\r\n      </div>\r\n\r\n      <!-- <mat-button-toggle-group [formControl]=\"layoutCtrl\" class=\"mt-4 sm:mt-0\">\r\n        <mat-button-toggle value=\"boxed\">BOXED</mat-button-toggle>\r\n        <mat-button-toggle value=\"fullwidth\">FULL-WIDTH</mat-button-toggle>\r\n      </mat-button-toggle-group> -->\r\n    </div>\r\n  </vex-page-layout-header>\r\n\r\n  <vex-page-layout-content [class.container]=\"layoutCtrl.value === 'boxed'\"\r\n                           [class.px-gutter]=\"layoutCtrl.value === 'fullwidth'\"\r\n                           class=\"-mt-6\">\r\n\r\n    <div class=\"card overflow-auto -mt-16\">\r\n      <div class=\"bg-app-bar px-6 h-16 border-b sticky left-0\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n        <h2 class=\"title my-0 ltr:pr-4 rtl:pl-4 ltr:mr-4 rtl:ml-4 ltr:border-r rtl:border-l\" fxFlex=\"none\" fxHide.xs>\r\n          <span *ngIf=\"selection.isEmpty()\">Payroll</span>\r\n          <!-- <span *ngIf=\"selection.hasValue()\">{{ selection.selected.length }} -->\r\n            <!-- Payroll<span *ngIf=\"selection.selected.length > 1\">s</span> selected</span> -->\r\n        </h2>\r\n\r\n        <!-- <div *ngIf=\"selection.hasValue()\" class=\"mr-4 pr-4 border-r\" fxFlex=\"none\"> -->\r\n          <div  class=\"mr-4 pr-4 border-r\" fxFlex=\"none\">\r\n          <button (click)=\"exportTimesheets()\"\r\n                  color=\"primary\"\r\n                  mat-icon-button \r\n                  style=\"width: 161px!important;border-radius: 4%!important;\"\r\n                  type=\"button\">\r\n            <mat-icon [icIcon]=\"roundImportExport\"></mat-icon>\r\n              Export Timesheets\r\n            </button>\r\n            <!-- (click)=\"importPayroll()\" -->\r\n          <button (click)=\"fileInput.click()\"\r\n                  color=\"primary\"\r\n                  mat-icon-button  \r\n                  style=\"width: 152px!important;border-radius: 4%!important;\"\r\n                  type=\"button\">  \r\n            <mat-icon [icIcon]=\"roundImportExport\"></mat-icon>\r\n              Import Payroll\r\n              <input #fileInput type=\"file\" (change)=\"changeListener($event.target.files)\" style=\"display:none;\" />\r\n              <mat-progress-spinner *ngIf=\"loading\"mode=\"indeterminate\" color=\"primary\"diameter=\"20\"style=\"    position: absolute;\r\n              right: -8px;\r\n              top: 24%;\"></mat-progress-spinner>\r\n          </button>\r\n\r\n          <!-- <button color=\"primary\" mat-icon-button matTooltip=\"Another action\" type=\"button\">\r\n            <mat-icon [icIcon]=\"icFolder\"></mat-icon>\r\n          </button> -->\r\n        </div>\r\n\r\n        <div class=\"bg-card rounded-full border px-4\"\r\n             fxFlex=\"400px\"\r\n             fxFlex.lt-md=\"auto\"\r\n             fxHide.xs\r\n             fxLayout=\"row\"\r\n             fxLayoutAlign=\"start center\">\r\n          <ic-icon [icIcon]=\"icSearch\" size=\"20px\"></ic-icon>\r\n          <input [formControl]=\"searchCtrl\"\r\n                 class=\"px-4 py-3 border-0 outline-none w-full bg-transparent\"\r\n                 placeholder=\"Search...\"\r\n                 type=\"search\">\r\n        </div>\r\n\r\n        <span fxFlex></span>\r\n\r\n        <button class=\"ml-4\" fxFlex=\"none\" fxHide.gt-xs mat-icon-button type=\"button\">\r\n          <mat-icon [icIcon]=\"icSearch\"></mat-icon>\r\n        </button>\r\n\r\n        <button [matMenuTriggerFor]=\"columnFilterMenu\"\r\n                class=\"ml-4\"\r\n                fxFlex=\"none\"\r\n                mat-icon-button\r\n                matTooltip=\"Filter Columns\"\r\n                type=\"button\">\r\n          <mat-icon [icIcon]=\"icFilterList\"></mat-icon>\r\n        </button>\r\n\r\n        <!-- <button (click)=\"createClient()\"\r\n                class=\"ml-4\"\r\n                color=\"primary\"\r\n                fxFlex=\"none\"\r\n                mat-mini-fab\r\n                matTooltip=\"Add Client\"\r\n                type=\"button\">\r\n          <mat-icon [icIcon]=\"icAdd\"></mat-icon> -->\r\n        <!-- </button> -->\r\n        <button (click)=\"generateWorkerID()\"\r\n                color=\"primary\"\r\n                fxFlex=\"none\"\r\n                mat-mini-fab\r\n                type=\"button\"\r\n                style=\"    border-radius: 4%!important;\r\n                width: 145px!important;\">\r\n          Generate Worker ID\r\n        </button>\r\n      </div>\r\n\r\n      <table @stagger [dataSource]=\"dataSource\" class=\"w-full\" mat-table matSort>\r\n\r\n        <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n        <!-- Checkbox Column -->\r\n        <!-- <ng-container matColumnDef=\"checkbox\">\r\n          <th *matHeaderCellDef mat-header-cell>\r\n            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                          [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                          [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                          color=\"primary\">\r\n            </mat-checkbox>\r\n          </th>\r\n          <td *matCellDef=\"let row\" class=\"w-4\" mat-cell>\r\n            <mat-checkbox (change)=\"$event ? selection.toggle(row) : null\"\r\n                          (click)=\"$event.stopPropagation()\"\r\n                          [checked]=\"selection.isSelected(row)\"\r\n                          color=\"primary\">\r\n            </mat-checkbox>\r\n          </td>\r\n        </ng-container> -->\r\n\r\n        <!-- Image Column -->\r\n        <!-- <ng-container matColumnDef=\"image\">\r\n          <th *matHeaderCellDef mat-header-cell></th>\r\n          <td *matCellDef=\"let row\" class=\"w-8 min-w-8 pr-0\" mat-cell>\r\n            <img [src]=\"row['profilePhoto']\" class=\"avatar h-8 w-8 align-middle\">\r\n            <img src=\"assets/img/avatars/1.jpg\" class=\"avatar h-8 w-8 align-middle\">\r\n          </td>\r\n        </ng-container> -->\r\n\r\n        <!-- Text Columns -->\r\n        <ng-container *ngFor=\"let column of columns; trackBy: trackByProperty\">\r\n          <ng-container *ngIf=\"column.type === 'text'\" [matColumnDef]=\"column.property\">\r\n            <th *matHeaderCellDef class=\"uppercase\" mat-header-cell mat-sort-header> {{ column.label }}</th>\r\n            <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>{{ row[column.property] }}</td>\r\n          </ng-container>\r\n        </ng-container>\r\n\r\n        <!-- Contact Column -->\r\n        <ng-container matColumnDef=\"contact\">\r\n          <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n          <td *matCellDef=\"let row\" mat-cell>\r\n            <div class=\"flex\">\r\n              <a (click)=\"$event.stopPropagation()\"\r\n                 class=\"w-8 h-8 leading-none flex items-center justify-center hover:bg-hover text-primary bg-primary-light\"\r\n                 mat-icon-button>\r\n                <mat-icon [icIcon]=\"icPhone\" size=\"18px\"></mat-icon>\r\n              </a>\r\n\r\n              <a (click)=\"$event.stopPropagation()\"\r\n                 class=\"w-8 h-8 leading-none flex items-center justify-center ml-1 hover:bg-hover text-teal bg-teal-light\"\r\n                 mat-icon-button>\r\n                <mat-icon [icIcon]=\"icMail\" size=\"18px\"></mat-icon>\r\n              </a>\r\n\r\n              <a (click)=\"$event.stopPropagation()\"\r\n                 class=\"w-8 h-8 leading-none flex items-center justify-center ml-1 hover:bg-hover text-green bg-green-light\"\r\n                 mat-icon-button>\r\n                <mat-icon [icIcon]=\"icMap\" size=\"18px\"></mat-icon>\r\n              </a>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Label Column -->\r\n        <ng-container matColumnDef=\"response\">\r\n          <th *matHeaderCellDef class=\"uppercase\" mat-header-cell mat-sort-header>Response</th>\r\n          <td *matCellDef=\"let row\" mat-cell>\r\n            <div (click)=\"$event.stopPropagation()\" fxLayoutAlign=\"start center\" fxLayoutGap=\"4px\">\r\n              <div [ngClass]=\"[responses[row.response].textClass, responses[row.response].bgClass]\"\r\n                   class=\"rounded px-2 py-1 font-medium text-xs\"\r\n                   fxFlex=\"none\">\r\n                   {{row.response}}\r\n              </div>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n        <!-- <ng-container matColumnDef=\"labels\">\r\n          <th *matHeaderCellDef class=\"uppercase\" mat-header-cell mat-sort-header>Labels</th>\r\n          <td *matCellDef=\"let row\" mat-cell>\r\n            <div (click)=\"$event.stopPropagation()\" fxLayoutAlign=\"start center\" fxLayoutGap=\"4px\">\r\n              <div *ngFor=\"let label of row.labels\"\r\n                   [ngClass]=\"[label.textClass, label.bgClass]\"\r\n                   class=\"rounded px-2 py-1 font-medium text-xs\"\r\n                   fxFlex=\"none\">\r\n                {{ label.text }}\r\n              </div>\r\n              <div (click)=\"labelSelect.open()\"\r\n                   class=\"text-secondary bg-base text-hint cursor-pointer hover:bg-hover\"\r\n                   fxFlex=\"none\"\r\n                   fxLayout=\"row\"\r\n                   fxLayoutAlign=\"center center\">\r\n                <ic-icon [icon]=\"icAdd\" size=\"18px\"></ic-icon>\r\n              </div>\r\n              <mat-select #labelSelect=\"matSelect\"\r\n                          (selectionChange)=\"onLabelChange($event, row)\"\r\n                          [value]=\"row.labels\"\r\n                          class=\"invisible w-0 h-0 text-sm\"\r\n                          fxFlex=\"0 1 0px\"\r\n                          multiple>\r\n                <mat-option *ngFor=\"let label of labels\" [value]=\"label\">\r\n                  <div [ngClass]=\"label.previewClass\"\r\n                       class=\"h-6 w-6 align-middle ltr:mr-2 rtl:ml-2 rounded inline-block\"></div>\r\n                  <span>{{ label.text }}</span>\r\n                </mat-option>\r\n              </mat-select>\r\n            </div>\r\n          </td>\r\n        </ng-container> -->\r\n\r\n        <!-- Action Column -->\r\n        <!-- <ng-container matColumnDef=\"actions\">\r\n          <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n          <td *matCellDef=\"let row\" class=\"w-10 text-secondary\" mat-cell>\r\n            <button (click)=\"$event.stopPropagation()\"\r\n                    [matMenuTriggerData]=\"{ client: row }\"\r\n                    [matMenuTriggerFor]=\"actionsMenu\"\r\n                    mat-icon-button\r\n                    type=\"button\">\r\n              <mat-icon [icIcon]=\"icMoreHoriz\"></mat-icon>\r\n            </button>\r\n          </td>\r\n        </ng-container> -->\r\n\r\n        <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\r\n        <!-- (click)=\"updateClient(row)\" -->\r\n        <tr \r\n            *matRowDef=\"let row; columns: visibleColumns;\"\r\n            @fadeInUp\r\n            class=\"hover:bg-hover trans-ease-out cursor-pointer\"\r\n            mat-row></tr>\r\n      </table>\r\n\r\n      <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" [pageSize]=\"pageSize\" class=\"sticky left-0\"></mat-paginator>\r\n    </div>\r\n\r\n  </vex-page-layout-content>\r\n\r\n</vex-page-layout>\r\n\r\n<mat-menu #columnFilterMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n  <button (click)=\"toggleColumnVisibility(column, $event)\" *ngFor=\"let column of columns\"\r\n          class=\"checkbox-item mat-menu-item\">\r\n    <mat-checkbox (click)=\"$event.stopPropagation()\" [(ngModel)]=\"column.visible\" color=\"primary\">\r\n      {{ column.label }}\r\n    </mat-checkbox>\r\n  </button>\r\n</mat-menu>\r\n\r\n<mat-menu #actionsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n  <ng-template let-client=\"client\" matMenuContent>\r\n    <button (click)=\"updateClient(client)\" mat-menu-item>\r\n      <mat-icon [icIcon]=\"icEdit\"></mat-icon>\r\n      <span>Modify</span>\r\n    </button>\r\n    <button (click)=\"deleteClient(client)\" mat-menu-item>\r\n      <mat-icon [icIcon]=\"icDelete\"></mat-icon>\r\n      <span>Delete</span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PayrollRoutingModule } from './payroll-routing.module';\nimport { PayrollComponent } from './payroll.component';\nimport { PageLayoutModule } from '../../../@vex/components/page-layout/page-layout.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BreadcrumbsModule } from '../../../@vex/components/breadcrumbs/breadcrumbs.module';\nimport { ClientCreateUpdateModule } from './client-create-update/client-create-update.module';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ContainerModule } from '../../../@vex/directives/container/container.module';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n\n@NgModule({\n  declarations: [PayrollComponent],\n  imports: [\n    CommonModule,\n    PayrollRoutingModule,\n    PageLayoutModule,\n    FlexLayoutModule,\n    BreadcrumbsModule,\n    ClientCreateUpdateModule,\n    MatPaginatorModule,\n    MatTableModule,\n    MatSortModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    MatMenuModule,\n    IconModule,\n    FormsModule,\n    MatTooltipModule,\n    ReactiveFormsModule,\n    ContainerModule,\n    MatSelectModule,\n    MatButtonToggleModule,\n  ]\n})\nexport class PayrollModule {\n}\n","import { formatDate } from '@angular/common';\r\n\r\nexport class Payroll {\r\n    _id: string;\r\n    id:number;\r\n    firstName:string;\r\n    lastName:string;\r\n    logID:string;\r\n    timestamp:Date;\r\n    timestampStr:string;\r\n    type:string;\r\n    response:string;\r\n    periodStart:Date;\r\n    periodEnd:Date;\r\n    // clientType:string;\r\n    // parentId:string;\r\n    // clientStatus:string;\r\n    // companyUrl:string;\r\n    // tradingName:string;\r\n    constructor(client) {\r\n        this._id = client._id;\r\n        this.id = client.id;\r\n        this.logID = client.logID;\r\n        this.firstName = client.firstName;\r\n        this.lastName = client.lastName;\r\n        this.timestamp = client.timestamp;\r\n        this.timestampStr = formatDate(this.timestamp, 'dd MMM,yyyy HH:mm','en');\r\n        this.type = client.type;\r\n        this.response = client.response;\r\n        this.periodStart = client.periodStart;\r\n        this.periodEnd = client.periodEnd;\r\n      }\r\n    \r\n      get name() {\r\n        let name = '';\r\n    \r\n        if (this.firstName && this.lastName) {\r\n          name = this.firstName + ' ' + this.lastName;\r\n        } else if (this.firstName) {\r\n          name = this.firstName;\r\n        } else if (this.lastName) {\r\n          name = this.lastName;\r\n        }\r\n    \r\n        return name;\r\n      }\r\n      get period(){\r\n        let period = '';\r\n        period = formatDate(this.periodStart, 'dd MMM,yyyy','en') + ' - '+ formatDate(this.periodEnd, 'dd MMM,yyyy','en');\r\n        return period;\r\n      }\r\n}"],"sourceRoot":"webpack:///"}