{"version":3,"sources":["./src/app/services/auth.service.ts"],"names":[],"mappings":"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","file":"default~admin-admin-calendar-admin-calendar-module~admin-admin-calendar-admin-job-admin-job-module~a~e21558e8-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpHeaders, HttpRequest, HttpEvent, HttpEventType } from '@angular/common/http';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\nimport { User } from '../models/user.model';\nimport { find } from 'lodash';\nimport { map, catchError, tap, last } from 'rxjs/operators';\nimport { Job } from '../client/clients-dashboard/client-job-table/interfaces/job.model';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Invoice } from '../models/invoice.model';\n\nconst USERS_URL = environment.authURL;\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public progressSource = new BehaviorSubject<number>(0);\n  public loggedInType ;\n  currenctUser :User;\n  AllUser:User[];\n  AllJob:Job[];\n  currentScrumboard:any;\n  currentJob:any;\n  currentParent:User;\n  workerJobInfo:any;\n  adminInfo:any;\n  clientJob:any;\n   constructor(private http:HttpClient,\n    private snackBar:MatSnackBar) {\n\n    }\n    \n    setCurrentUser(){\n      this.currenctUser = JSON.parse(localStorage.getItem('userInfo'));\n    }\n    setCurrentUserLocal(res){\n      localStorage.setItem('userInfo', JSON.stringify(res));\n      this.setCurrentUser();\n    }\n    setAllUser(){\n      this.AllUser = JSON.parse(localStorage.getItem('allUserInfo'));\n    }\n    setAllUsersLocal(res){\n      localStorage.setItem('allUserInfo', JSON.stringify(res));\n      this.setAllUser();\n    }\n    setAllJob(){\n      this.AllJob = JSON.parse(localStorage.getItem('allJobInfo'));\n    }\n    setAllJobsLocal(res){\n      localStorage.setItem('allJobInfo', JSON.stringify(res));\n      this.setAllJob();\n    }\n    setCurrentScrumboard(){\n      this.currentScrumboard = JSON.parse(localStorage.getItem('scrumboardInfo'));\n    }\n    setCurrentScrumboardLocal(res){\n      localStorage.setItem('scrumboardInfo', JSON.stringify(res));\n      this.setCurrentScrumboard();\n    }\n    setClientJob(){\n      this.clientJob = JSON.parse(localStorage.getItem('clientJobInfo'));\n    }\n    setClientJobLocal(res){\n      localStorage.setItem('clientJobInfo', JSON.stringify(res));\n      this.setClientJob();\n    }\n    \n    setCurrentParent(){\n      this.currentParent = JSON.parse(localStorage.getItem('parentInfo'))\n    }\n    setCurrentParentLocal(res){\n      localStorage.setItem('parentInfo', JSON.stringify(res));\n      this.setCurrentParent();\n    }\n    setCurrentWorkerJob(){\n      this.workerJobInfo = JSON.parse(localStorage.getItem('WorkerJobInfo'))\n    }\n    setCurrentWorkerJobLocal(res){\n      localStorage.setItem('WorkerJobInfo', JSON.stringify(res));\n      this.setCurrentWorkerJob();\n    }\n  login(email:string, password:string):Observable<any>{\n    return this.http.post<User>(`${USERS_URL}login`,{'emailAddress':email, 'hash':password}).pipe(\n      map((res:User) =>{\n        return res;\n      }),\n      catchError(err=>{\n        return null;\n      })\n    )\n  }\n\n  // public uploadProfile(formData){\n  //   return this.http.post<any>(USERS_URL, formData, {\n  //     reportProgress:true,\n  //     observe:'events'\n  //   });\n  // }\n  addJob(user:any,str):Observable<any>{\n    // if(type != 'other')\n    //   user['accountType'] = type;\n    // const httpHeaders = new HttpHeaders();\n    // httpHeaders.set('Content-Type', 'application/json');\n    user['clientId'] = str;\n    return this.http.post<Job>(`${USERS_URL}job/register`, user).pipe(\n      map((res:Job) =>{\n        return res;\n      }),\n      catchError(err=>{\n        return null;\n      })\n    )\n  }\n  getExpertTimesheets():Observable<any>{\n    return this.http.post<any>(`${USERS_URL}getExpertTimesheets`,{});\n  }\n  getImportPayroll(linesR:any):Observable<any>{\n    return this.http.post<any>(`${USERS_URL}getImportPayroll`,{linesR:linesR});\n  }\n  getAllPayroll():Observable<any>{\n    return this.http.post<any>(`${USERS_URL}getAllPayroll`,{});\n  }\n  getGenerateWorkerID():Observable<any>{\n    return this.http.post<any>(`${USERS_URL}getGenerateWorkerID`,{});\n  }\n  getUserByToken():Observable<User>{\n    const userToken = localStorage.getItem(environment.authTokenKey);\n    if(!userToken){\n      return of(null);\n    }\n    // return this.getAllUsers().pipe(\n    //   map((result:User[])=>{\n    //     if(result.length <= 0){\n    //       return null;\n    //     }\n    //     const user = find(result, (item:User) =>{\n    //       return (item.accessToken === userToken.toString());\n    //     });\n    //     if(!user){\n    //       return null;\n    //     }\n    //     user.hash = undefined;\n    //     return user;\n    //   })\n    // )\n  }\n  register(user:any, type = 'other'):Observable<any>{\n    if(type != 'other')\n      user['accountType'] = type;\n    // const httpHeaders = new HttpHeaders();\n    // httpHeaders.set('Content-Type', 'application/json');\n    return this.http.post<User>(`${USERS_URL}register`, user).pipe(\n      map((res:User) =>{\n        return res;\n      }),\n      catchError(err=>{\n        return null;\n      })\n    )\n  }\n  public requestPassword(email:string):Observable<any>{\n    return this.http.post(`${USERS_URL}` + 'forgot/' + email, {})\n      .pipe(catchError(this.handleError('forgot-password', [])));\n  }\n  // getAllUsers():Observable<User[]>{\n  //   return this.http.post<User[]>(`${USERS_URL}getAll`,{});\n  // }\n  async getAllUsers(): Promise<User[]> {\n    try {\n      let response = await this.http\n        .post(`${USERS_URL}getAll`,{})\n        .toPromise();\n      return response as User[];\n    } catch (error) {\n      await this.handleError(error);\n    }\n  }\n  async getAllUserAuth(): Promise<void>{\n    // this.getAllUsers().subscribe((res)=>{\n    //   this.AllUser = res;\n    //   this.setAllUsersLocal(this.AllUser);\n    //   console.log(res)\n    // })\n    this.AllUser = await this.getAllUsers();\n    console.log(this.AllUser)\n    console.log('3232323')\n  }\n  async getAllJobAuth(){\n    // await this.getAllJobs().subscribe((res)=>{\n    //   this.AllJob = res;\n    //   this.setAllJobsLocal(this.AllJob);\n    //   console.log(res)\n    // })\n    this.AllJob = await this.getAllJobs();\n    console.log(this.AllJob)\n    console.log('3232321212')\n  }\n  async getAllJobs():Promise<Job[]>{\n    return await this.http.post<Job[]>(`${USERS_URL}job/getAllJob`,{}).toPromise();\n  }\n   getAllJobsSync():Observable<Job[]>{\n    return  this.http.post<Job[]>(`${USERS_URL}job/getAllJob`,{});\n  }\n  getParent(id):Observable<User>{\n    return this.http.post<User>(`${USERS_URL}getParent`,{_id:id});\n  }\n  getWorkerJob(id):Observable<Job[]>{\n    return this.http.post<Job[]>(`${USERS_URL}getWorkerJob`,{_id:id});\n\n  }\n  private handleError<T>(operation = 'operation', result?:any){\n    return (error:any):Observable<any> =>{\n      console.error(error);\n      return of(result);\n    }\n  }\n  getTypeJobs():Observable<Job[]>{\n    return this.http.post<Job[]>(`${USERS_URL}job/getAllType`,{});\n  }\n  getAllInvoices():Observable<Invoice[]>{\n    return this.http.post<Invoice[]>(`${USERS_URL}getAllInvoices`,{});\n\n  }\n  getSelectedJobs():Observable<Job[]>{\n    return this.http.post<Job[]>(`${USERS_URL}job/getAll`,{});\n  }\n  getTypeUsers(type):Observable<User[]>{\n    return this.http.post<User[]>(`${USERS_URL}getAllType`,{accountType:type});\n  }\n  getTimesheets(type):Observable<any[]>{\n    return this.http.post<any[]>(`${USERS_URL}getFindTimesheets`,{status:type});\n  }\n  getTypeSubUsers(id):Observable<User[]>{\n    return this.http.post<User[]>(`${USERS_URL}getAllSubType`,{clientId:id});\n  }\n\n  getClientJob(id):Observable<Job[]>{\n    return this.http.post<Job[]>(`${USERS_URL}getClientJob`,{_id:id});\n  }\n  upload(file: File) {\n    let formData = new FormData();\n    formData.append(\"avatar\", file);\n\n    const req = new HttpRequest(\n      \"POST\",\n      \"http://localhost:5000/upload\",\n      formData,\n      {\n        reportProgress: true\n      }\n    );\n\n    return this.http.request(req).pipe(\n      map(event => this.getEventMessage(event, file)),\n      tap((envelope: any) => this.processProgress(envelope)),\n      last()\n    );\n  }\n\n  processProgress(envelope: any): void {\n    if (typeof envelope === \"number\") {\n      this.progressSource.next(envelope);\n    }\n  }\n\n  private getEventMessage(event: HttpEvent<any>, file: File) {\n    switch (event.type) {\n      case HttpEventType.Sent:\n        return `Uploading file \"${file.name}\" of size ${file.size}.`;\n      case HttpEventType.UploadProgress:\n        return Math.round((100 * event.loaded) / event.total);\n      case HttpEventType.Response:\n        return `File \"${file.name}\" was completely uploaded!`;\n      default:\n        return `File \"${file.name}\" surprising upload event: ${event.type}.`;\n    }\n  }\n  updateUser(_user: any): Observable<any> {\n    const httpHeaders = new HttpHeaders();\n    httpHeaders.set('Content-Type', 'application/json');\n        //   return this.http.put(API_USERS_URL, _user, { headers: httpHeaders });\n        console.log('... auth update user ..')\n        console.log(_user)\n        console.log('----------------')\n        return this.http.post(`${USERS_URL}profile`, _user, { headers: httpHeaders });\n  }\n  updateJob(_job:any): Observable<any> {\n        console.log('... auth update user ..')\n        console.log(_job)\n        console.log('----------------')\n        return this.http.post(`${USERS_URL}updatejob`, _job);\n  }\n  openSnackbar(str) {\n    this.snackBar.open(str, 'CLOSE', {\n      duration: 3000,\n      horizontalPosition: 'center'\n    });\n  }\n  setWorkerJob(id, tId,wId, img, name, flag): Observable<any> {\n    return this.http.post<any>(`${USERS_URL}addWorkerJob`, {id:id, tId:tId,wId:wId,img:img,name:name, flag:flag});\n  }\n  setStatusJob(id, status):Observable<any>{\n    return this.http.post<any>(`${USERS_URL}setStatusJob`, {id:id,status:status});\n  }\n  setStatusTimesheet(id, status):Observable<any>{\n    return this.http.post<any>(`${USERS_URL}setStatusTimesheet`, {id:id,status:status});\n  }\n  setJobWorkers(str:any[], id):Observable<any>{\n    return this.http.post<any>(`${USERS_URL}setJobWorkers`, {str:str, id:id});\n\n  }\n  deleteUser(obj:any, type):Observable<any>{\n    obj['accountType'] = type;\n    return this.http.post<any>(`${USERS_URL}removeUser`, obj);\n  }\n  deleteJob(obj:any):Observable<any>{\n    return this.http.post<any>(`${USERS_URL}removeJob`, obj);\n  }\n  cancelJob(obj, str):Observable<any>{\n    return this.http.post<any>(`${USERS_URL}canceljob`, {id:obj.id, str:str});\n  }\n  sendMsg(obj):Observable<any>{\n    return this.http.post<any>(`${USERS_URL}sendmsg`, obj);\n  }\n  addInvoice(obj):Observable<any>{\n    return this.http.post<any>(`${USERS_URL}invoiceregister`, obj);\n  }\n  updateInvoice(obj):Observable<any>{\n    return this.http.post<any>(`${USERS_URL}invoice/profile`, obj);\n  }\n  removeTimesheetsJob(obj):Observable<any>{\n    return this.http.post<any>(`${USERS_URL}removeTimesheetsJob`, {arr:obj});\n  }\n  sendEmail(obj):Observable<any>{\n    return this.http.post<any>(`${USERS_URL}client/verify/email`, obj);\n  }\n  resetPassword(obj):Observable<any>{\n    return this.http.post<any>(`${USERS_URL}resetpassword`, obj);\n  }\n  emailVerify(token):Observable<any>{\n    return this.http.post<any>(`${USERS_URL}setVerify`, token);\n  }\n}\n"],"sourceRoot":"webpack:///"}