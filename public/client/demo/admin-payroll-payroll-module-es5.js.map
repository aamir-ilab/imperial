{"version":3,"sources":["webpack:///node_modules/@iconify/icons-ic/round-import-export.js","webpack:///src/app/admin/payroll/client-create-update/client-create-update.component.ts","webpack:///src/app/admin/payroll/client-create-update/client-create-update.component.html","webpack:///src/app/admin/payroll/client-create-update/client-create-update.module.ts","webpack:///src/app/admin/payroll/payroll-routing.module.ts","webpack:///src/app/admin/payroll/payroll.component.ts","webpack:///src/app/admin/payroll/payroll.component.html","webpack:///src/app/admin/payroll/payroll.module.ts","webpack:///src/app/models/payroll.model.ts"],"names":["data","exports","__esModule","ClientCreateUpdateComponent","defaults","dialogRef","fb","mode","icMoreVert","icClose","icPrint","icDownload","icDelete","icPerson","icMyLocation","icLocationCity","icEditLocation","icPhone","form","group","id","_id","emailAddress","firstName","lastName","companyName","companyAddress","companyPhoneNumber","emailAddressAccountsTeam","VATNumber","companyRegNumber","position","phoneNumber","createClient","updateClient","client","value","close","save","selector","templateUrl","styleUrls","ClientCreateUpdateModule","imports","declarations","entryComponents","routes","path","component","toolbarShadowEnabled","PayrollRoutingModule","forChild","$event","stopPropagation","PayrollComponent","dialog","authService","layoutCtrl","roundImportExport","lines","linesR","loading","subject$","data$","asObservable","columns","label","property","type","visible","cssClasses","pageSize","pageSizeOptions","selection","searchCtrl","labels","responses","icMail","icMap","icEdit","icSearch","icAdd","icFilterList","icMoreHoriz","icFolder","getAllPayroll","subscribe","clients","map","clientes","console","log","next","getData","dataSource","pipe","Boolean","valueChanges","onFilterChange","paginator","sort","open","afterClosed","register","res","openSnackbar","unshift","updatedClient","updateUser","index","findIndex","existingClient","deleteUser","splice","deselect","forEach","c","deleteClient","trim","toLowerCase","filter","column","event","stopImmediatePropagation","numSelected","selected","length","numRows","isAllSelected","clear","row","select","change","filename","rows","processRow","finalVal","j","innerValue","toString","Date","toLocaleString","result","replace","search","csvFile","i","blob","Blob","navigator","msSaveBlob","link","document","createElement","download","undefined","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","getExpertTimesheets","mainArr","element","push","workerID","wrUnits","trncde","wrRate","exportToCsv","getGenerateWorkerID","fullname","err","files","file","item","name","size","reader","FileReader","readAsText","onload","e","csv","allTextLines","split","headers","tarr","tarrR","arrl","getImportPayroll","provide","useValue","appearance","exportTimesheets","changeListener","generateWorkerID","animations","providers","PayrollModule","Payroll","logID","timestamp","timestampStr","response","periodStart","periodEnd","period"],"mappings":"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","file":"admin-payroll-payroll-module-es5.js","sourcesContent":["var data = {\n\t\"body\": \"<path d=\\\"M8.65 3.35L5.86 6.14c-.32.31-.1.85.35.85H8V13c0 .55.45 1 1 1s1-.45 1-1V6.99h1.79c.45 0 .67-.54.35-.85L9.35 3.35a.501.501 0 0 0-.7 0zM16 17.01V11c0-.55-.45-1-1-1s-1 .45-1 1v6.01h-1.79c-.45 0-.67.54-.35.85l2.79 2.78c.2.19.51.19.71 0l2.79-2.78c.32-.31.09-.85-.35-.85H16z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport icMoreVert from '@iconify/icons-ic/twotone-more-vert';\r\nimport icClose from '@iconify/icons-ic/twotone-close';\r\nimport icPrint from '@iconify/icons-ic/twotone-print';\r\nimport icDownload from '@iconify/icons-ic/twotone-cloud-download';\r\nimport icDelete from '@iconify/icons-ic/twotone-delete';\r\nimport icPhone from '@iconify/icons-ic/twotone-phone';\r\nimport icPerson from '@iconify/icons-ic/twotone-person';\r\nimport icMyLocation from '@iconify/icons-ic/twotone-my-location';\r\nimport icLocationCity from '@iconify/icons-ic/twotone-location-city';\r\nimport icEditLocation from '@iconify/icons-ic/twotone-edit-location';\r\nimport { Client } from 'src/app/models/client.model';\r\n\r\n@Component({\r\n  selector: 'vex-client-create-update',\r\n  templateUrl: './client-create-update.component.html',\r\n  styleUrls: ['./client-create-update.component.scss']\r\n})\r\nexport class ClientCreateUpdateComponent implements OnInit {\r\n\r\n  static id = 100;\r\n\r\n  form: FormGroup;\r\n  mode: 'create' | 'update' = 'create';\r\n\r\n  icMoreVert = icMoreVert;\r\n  icClose = icClose;\r\n\r\n  icPrint = icPrint;\r\n  icDownload = icDownload;\r\n  icDelete = icDelete;\r\n\r\n  icPerson = icPerson;\r\n  icMyLocation = icMyLocation;\r\n  icLocationCity = icLocationCity;\r\n  icEditLocation = icEditLocation;\r\n  icPhone = icPhone;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public defaults: any,\r\n              private dialogRef: MatDialogRef<ClientCreateUpdateComponent>,\r\n              private fb: FormBuilder) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.defaults) {\r\n      this.mode = 'update';\r\n    } else {\r\n      this.defaults = {} as Client;\r\n    }\r\n\r\n    this.form = this.fb.group({\r\n      id: [ClientCreateUpdateComponent.id++],\r\n      // profilePhoto: this.defaults.profilePhoto,\r\n      _id:[this.defaults._id],\r\n      emailAddress: [this.defaults.emailAddress || ''],\r\n      firstName: [this.defaults.firstName || ''],\r\n      lastName: [this.defaults.lastName || ''],\r\n      companyName: this.defaults.companyName || '',\r\n      companyAddress: this.defaults.companyAddress || '',\r\n      companyPhoneNumber: this.defaults.companyPhoneNumber || '',\r\n      emailAddressAccountsTeam: this.defaults.emailAddressAccountsTeam || '',\r\n      VATNumber: this.defaults.VATNumber || '',\r\n      companyRegNumber: this.defaults.companyRegNumber || '',\r\n      position: this.defaults.position || '',\r\n      phoneNumber: this.defaults.phoneNumber || '',\r\n    });\r\n  }\r\n\r\n  save() {\r\n    if (this.mode === 'create') {\r\n      this.createClient();\r\n    } else if (this.mode === 'update') {\r\n      this.updateClient();\r\n    }\r\n  }\r\n\r\n  createClient() {\r\n    const client = this.form.value;\r\n\r\n    // if (!client.profilePhoto) {\r\n    //   client.profilePhoto = 'assets/img/avatars/1.jpg';\r\n    // }\r\n\r\n    this.dialogRef.close(client);\r\n  }\r\n\r\n  updateClient() {\r\n    const client = this.form.value;\r\n    client.id = this.defaults.id;\r\n\r\n    this.dialogRef.close(client);\r\n  }\r\n\r\n  isCreateMode() {\r\n    return this.mode === 'create';\r\n  }\r\n\r\n  isUpdateMode() {\r\n    return this.mode === 'update';\r\n  }\r\n}\r\n","<form (ngSubmit)=\"save()\" [formGroup]=\"form\">\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" mat-dialog-title>\r\n    <!-- <img *ngIf=\"form.get('profilePhoto').value\" [src]=\"form.get('profilePhoto').value\" class=\"avatar mr-5\"> -->\r\n\r\n    <h2 *ngIf=\"form.get('firstName').value || form.get('lastName').value\"\r\n        class=\"headline m-0\"\r\n        fxFlex=\"auto\">{{ form.get('firstName').value + ' ' + form.get('lastName').value }}</h2>\r\n    <h2 *ngIf=\"!form.get('firstName').value && !form.get('lastName').value\"\r\n        class=\"headline m-0\"\r\n        fxFlex=\"auto\">New Client</h2>\r\n\r\n    <!-- <button [matMenuTriggerFor]=\"settingsMenu\" class=\"text-secondary\" mat-icon-button type=\"button\">\r\n      <mat-icon [icIcon]=\"icMoreVert\"></mat-icon>\r\n    </button> -->\r\n\r\n    <button class=\"text-secondary\" mat-dialog-close mat-icon-button type=\"button\">\r\n      <mat-icon [icIcon]=\"icClose\"></mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <mat-divider class=\"-mx-6 text-border\"></mat-divider>\r\n\r\n  <mat-dialog-content fxLayout=\"column\">\r\n    <div class=\"flex flex-col sm:flex-row\">\r\n      <mat-form-field class=\"mt-6 flex-auto\">\r\n        <mat-label>First Name</mat-label>\r\n        <input cdkFocusInitial formControlName=\"firstName\" matInput>\r\n\r\n        <mat-icon [icIcon]=\"icPerson\" class=\"mr-3\" matPrefix></mat-icon>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"sm:mt-6 sm:ml-6 flex-auto\">\r\n        <mat-label>Last Name</mat-label>\r\n        <input cdkFocusInitial formControlName=\"lastName\" matInput>\r\n\r\n        <mat-icon [icIcon]=\"icPerson\" class=\"mr-3\" matPrefix></mat-icon>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <mat-form-field class=\"flex-auto\">\r\n      <mat-label>Email</mat-label>\r\n      <input formControlName=\"emailAddress\" matInput>\r\n\r\n      <mat-icon [icIcon]=\"icEditLocation\" class=\"mr-3\" matPrefix></mat-icon>\r\n    </mat-form-field>\r\n\r\n    <div class=\"flex flex-col sm:flex-row\">\r\n      <mat-form-field class=\"flex-auto\">\r\n        <mat-label>Company Name</mat-label>\r\n        <input formControlName=\"companyName\" matInput>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"sm:ml-6 flex-auto\">\r\n        <mat-label>Company Address</mat-label>\r\n        <input formControlName=\"companyAddress\" matInput>\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"flex flex-col sm:flex-row\">\r\n      <mat-form-field class=\"flex-auto\">\r\n        <mat-label>Company Phone Number</mat-label>\r\n        <input formControlName=\"companyPhoneNumber\" pattern=\"[0-9]*\" minlength=\"10\"maxlength=\"14\"onkeypress=\"return event.charCode >= 48 && event.charCode <= 57\"  matInput>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"sm:ml-6 flex-auto\">\r\n        <mat-label>Email Address Accounts Team</mat-label>\r\n        <input formControlName=\"emailAddressAccountsTeam\" matInput>\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"flex flex-col sm:flex-row\">\r\n      <mat-form-field class=\"flex-auto\">\r\n        <mat-label>VAT Number</mat-label>\r\n        <input formControlName=\"VATNumber\" matInput>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"sm:ml-6 flex-auto\">\r\n        <mat-label>Company RegNumber</mat-label>\r\n        <input formControlName=\"companyRegNumber\" matInput>\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"flex flex-col sm:flex-row\">\r\n      <mat-form-field class=\"flex-auto\">\r\n        <mat-label>Position</mat-label>\r\n        <input formControlName=\"position\" matInput>\r\n        <mat-icon [icIcon]=\"icMyLocation\" class=\"mr-3\" matPrefix></mat-icon>\r\n      </mat-form-field>\r\n    </div>\r\n    <mat-form-field class=\"flex-auto\">\r\n      <mat-label>Phone Number</mat-label>\r\n      <input formControlName=\"phoneNumber\"  pattern=\"[0-9]*\" minlength=\"10\"maxlength=\"14\"onkeypress=\"return event.charCode >= 48 && event.charCode <= 57\" matInput>\r\n\r\n      <mat-icon [icIcon]=\"icPhone\" class=\"mr-3\" matPrefix></mat-icon>\r\n    </mat-form-field>\r\n\r\n\r\n  </mat-dialog-content>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button mat-dialog-close type=\"button\">CANCEL</button>\r\n    <button *ngIf=\"isCreateMode()\" color=\"primary\" mat-button type=\"submit\">CREATE Client</button>\r\n    <button *ngIf=\"isUpdateMode()\" color=\"primary\" mat-button type=\"submit\">UPDATE Client</button>\r\n  </mat-dialog-actions>\r\n</form>\r\n\r\n<mat-menu #settingsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n  <button mat-menu-item>\r\n    <mat-icon [icIcon]=\"icPrint\"></mat-icon>\r\n    <span>Print</span>\r\n  </button>\r\n\r\n  <button mat-menu-item>\r\n    <mat-icon [icIcon]=\"icDownload\"></mat-icon>\r\n    <span>Export</span>\r\n  </button>\r\n\r\n  <button mat-menu-item>\r\n    <mat-icon [icIcon]=\"icDelete\"></mat-icon>\r\n    <span>Delete</span>\r\n  </button>\r\n</mat-menu>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { ClientCreateUpdateComponent } from './client-create-update.component';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { IconModule } from '@visurel/iconify-angular';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatMenuModule,\r\n    IconModule,\r\n    MatDividerModule\r\n  ],\r\n  declarations: [ClientCreateUpdateComponent],\r\n  entryComponents: [ClientCreateUpdateComponent],\r\n  exports: [ClientCreateUpdateComponent]\r\n})\r\nexport class ClientCreateUpdateModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { VexRoutes } from '../../../@vex/interfaces/vex-route.interface';\r\nimport { PayrollComponent } from './payroll.component';\r\n\r\n\r\nconst routes: VexRoutes = [\r\n  {\r\n    path: '',\r\n    component: PayrollComponent,\r\n    data: {\r\n      toolbarShadowEnabled: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PayrollRoutingModule {\r\n}\r\n","import { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { Observable, of, ReplaySubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n// import { client } from './interfaces/client.model';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TableColumn } from '../../../@vex/interfaces/table-column.interface';\nimport { aioTableData1,aioTableData, aioTableLabels,aioTableLabelsPayroll } from '../../../static-data/aio-table-data';\nimport { ClientCreateUpdateComponent } from './client-create-update/client-create-update.component';\nimport icEdit from '@iconify/icons-ic/twotone-edit';\nimport icDelete from '@iconify/icons-ic/twotone-delete';\nimport icSearch from '@iconify/icons-ic/twotone-search';\nimport icAdd from '@iconify/icons-ic/twotone-add';\nimport icFilterList from '@iconify/icons-ic/twotone-filter-list';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport icMoreHoriz from '@iconify/icons-ic/twotone-more-horiz';\nimport icFolder from '@iconify/icons-ic/twotone-folder';\nimport { fadeInUp400ms } from '../../../@vex/animations/fade-in-up.animation';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldDefaultOptions } from '@angular/material/form-field';\nimport { stagger40ms } from '../../../@vex/animations/stagger.animation';\nimport { FormControl } from '@angular/forms';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { MatSelectChange } from '@angular/material/select';\nimport icPhone from '@iconify/icons-ic/twotone-phone';\nimport icMail from '@iconify/icons-ic/twotone-mail';\nimport icMap from '@iconify/icons-ic/twotone-map';\nimport { Client } from 'src/app/models/client.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { User } from 'src/app/models/user.model';\n\nimport roundImportExport from '@iconify/icons-ic/round-import-export';\nimport { Payroll } from 'src/app/models/payroll.model';\n\n@UntilDestroy()\n@Component({\n  selector: 'vex-payroll',\n  templateUrl: './payroll.component.html',\n  styleUrls: ['./payroll.component.scss'],\n  animations: [\n    fadeInUp400ms,\n    stagger40ms\n  ],\n  providers: [\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: {\n        appearance: 'standard'\n      } as MatFormFieldDefaultOptions\n    }\n  ]\n})\nexport class PayrollComponent implements OnInit, AfterViewInit {\n\n  layoutCtrl = new FormControl('boxed');\n  roundImportExport = roundImportExport;\n  lines = []; //for headings\n  linesR = []; // for rows\n  loading = false;\n  /**\n   * Simulating a service with HTTP that returns Observables\n   * You probably want to remove this and do all requests in a service with HTTP\n   */\n  subject$: ReplaySubject<Payroll[]> = new ReplaySubject<Payroll[]>(1);\n  data$: Observable<Payroll[]> = this.subject$.asObservable();\n  clients: Payroll[];\n\n  @Input()\n  columns: TableColumn<Payroll>[] = [\n    // { label: 'Checkbox', property: 'checkbox', type: 'checkbox', visible: true },\n    // { label: 'Image', property: 'profilePhoto', type: 'image', visible: true },\n    { label: 'Log ID', property: 'logID', type: 'text', visible: true, cssClasses: ['font-medium'] },\n    { label: 'Timestamp', property: 'timestampStr', type: 'text', visible: true },\n    { label: 'User', property: 'name', type: 'text', visible: true },\n    { label: 'Type', property: 'type', type: 'text', visible: true },\n    { label: 'Period', property: 'period', type: 'text', visible: true },\n    { label: 'Response', property: 'response', type: 'button', visible: true },\n    // { label: 'Last Name', property: 'lastName', type: 'text', visible: false },\n    // { label: 'Email', property: 'emailAddress', type: 'text', visible: true },\n    // { label: 'Company Name', property: 'companyName', type: 'text', visible: true },\n    // { label: 'Company Address', property: 'companyAddress', type: 'text', visible: true },\n    // { label: 'Company PhoneNumber', property: 'companyPhoneNumber', type: 'text', visible: true },\n    // { label: 'Email Address AccountsTeam', property: 'emailAddressAccountsTeam', type: 'text', visible: false },\n    // { label: 'VATNumber', property: 'VATNumber', type: 'text', visible: false },\n    // { label: 'CompanyRegNumber', property: 'companyRegNumber', type: 'text', visible: false },\n    // { label: 'Position', property: 'position', type: 'text', visible: true },\n    // { label: 'Actions', property: 'actions', type: 'button', visible: true },\n    // { label: 'ID', property: '_id', type: 'button', visible: false }\n  ];\n  pageSize = 10;\n  pageSizeOptions: number[] = [5, 10, 20, 50];\n  dataSource: MatTableDataSource<Payroll> | null;\n  selection = new SelectionModel<Payroll>(true, []);\n  searchCtrl = new FormControl();\n\n  labels = aioTableLabels;\n  responses = aioTableLabelsPayroll;\n  icPhone = icPhone;\n  icMail = icMail;\n  icMap = icMap;\n  icEdit = icEdit;\n  icSearch = icSearch;\n  icDelete = icDelete;\n  icAdd = icAdd;\n  icFilterList = icFilterList;\n  icMoreHoriz = icMoreHoriz;\n  icFolder = icFolder;\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  constructor(private dialog: MatDialog,\n    private authService:AuthService) {\n  }\n\n  get visibleColumns() {\n    return this.columns.filter(column => column.visible).map(column => column.property);\n  }\n\n  /**\n   * Example on how to get data and pass it to the table - usually you would want a dedicated service with a HTTP request for this\n   * We are simulating this request here.\n   */\n  getData() {\n    this.authService.getAllPayroll().subscribe((clients)=>{\n      of(clients.map(client =>new Payroll(client))).subscribe(clientes =>{\n        console.log('123213123')  \n        console.log(clientes)  \n        this.subject$.next(clientes)\n      });\n    })\n    // return of(aioTableData1.map(client => new Payroll(client))).subscribe(clients =>{\n    //   this.subject$.next(clients);\n    // });\n  }\n\n  ngOnInit() {\n    this.getData();\n\n    this.dataSource = new MatTableDataSource();\n\n    this.data$.pipe(\n      filter<Payroll[]>(Boolean)\n    ).subscribe(clients => {\n      this.clients = clients;\n      this.dataSource.data = clients;\n    });\n\n    this.searchCtrl.valueChanges.pipe(\n      untilDestroyed(this)\n    ).subscribe(value => this.onFilterChange(value));\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  createClient() {\n    this.dialog.open(ClientCreateUpdateComponent).afterClosed().subscribe((client: Payroll) => {\n      /**\n       * Client is the updated client (if the user pressed Save - otherwise it's null)\n       */\n      if (client) {\n        /**\n         * Here we are updating our local array.\n         * You would probably make an HTTP request here.\n         */\n        this.authService.register(client, 'Client').subscribe((res)=>{\n          console.log('new created client')\n          this.authService.openSnackbar('New Client Added!');\n        })\n        this.clients.unshift(new Payroll(client));\n        this.subject$.next(this.clients);\n      }\n    });\n  }\n\n  updateClient(client: Payroll) {\n    this.dialog.open(ClientCreateUpdateComponent, {\n      data: client\n    }).afterClosed().subscribe(updatedClient => {\n      /**\n       * Client is the updated client (if the user pressed Save - otherwise it's null)\n       */\n      if (updatedClient) {\n        /**\n         * Here we are updating our local array.\n         * You would probably make an HTTP request here.\n         */\n        console.log('********')\n        console.log(updatedClient)\n        this.authService.updateUser(updatedClient).subscribe((res =>{\n            this.authService.openSnackbar('Updated Successfully!')\n        }))\n        const index = this.clients.findIndex((existingClient) => existingClient.id === updatedClient.id);\n        this.clients[index] = new Payroll(updatedClient);\n        this.subject$.next(this.clients);\n      }\n    });\n  }\n\n  deleteClient(client: Payroll) {\n    /**\n     * Here we are updating our local array.\n     * You would probably make an HTTP request here.\n     */\n      this.authService.deleteUser(client,'Client').subscribe((res =>{\n      this.authService.openSnackbar('Removed Successfully!')\n  }))\n    this.clients.splice(this.clients.findIndex((existingClient) => existingClient.id === client.id), 1);\n    this.selection.deselect(client);\n    this.subject$.next(this.clients);\n  }\n\n  deleteClients(clients: Payroll[]) {\n    /**\n     * Here we are updating our local array.\n     * You would probably make an HTTP request here.\n     */\n    clients.forEach(c =>{\n      this.authService.deleteUser(c,'Client').subscribe((res) =>{\n        console.log(res);\n        // this.authService.openSnackbar('Removed Successfully!')\n    })});\n        // this.authService.openSnackbar('Removed Successfully!')\n\n    clients.forEach(c => this.deleteClient(c));\n  }\n\n  onFilterChange(value: string) {\n    if (!this.dataSource) {\n      return;\n    }\n    value = value.trim();\n    value = value.toLowerCase();\n    this.dataSource.filter = value;\n  }\n\n  toggleColumnVisibility(column, event) {\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    column.visible = !column.visible;\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  trackByProperty<T>(index: number, column: TableColumn<T>) {\n    return column.property;\n  }\n\n  onLabelChange(change: MatSelectChange, row: Payroll) {\n    const index = this.clients.findIndex(c => c === row);\n    // this.clients[index].labels = change.value;\n    this.subject$.next(this.clients);\n  }\n  exportToCsv(filename, rows) {\n    var processRow = function (row) {\n        var finalVal = '';\n        for (var j = 0; j < row.length; j++) {\n            var innerValue = row[j] === null ? '' : row[j].toString();\n            if (row[j] instanceof Date) {\n                innerValue = row[j].toLocaleString();\n            };\n            var result = innerValue.replace(/\"/g, '\"\"');\n            if (result.search(/(\"|,|\\n)/g) >= 0)\n                result = '\"' + result + '\"';\n            if (j > 0)\n                finalVal += ',';\n            finalVal += result;\n        }\n        return finalVal + '\\n';\n    };\n\n    var csvFile = '';\n    for (var i = 0; i < rows.length; i++) {\n        csvFile += processRow(rows[i]);\n    }\n\n    var blob = new Blob([csvFile], { type: 'text/csv;charset=utf-8;' });\n    if (navigator.msSaveBlob) { // IE 10+\n        navigator.msSaveBlob(blob, filename);\n    } else {\n        var link = document.createElement(\"a\");\n        if (link.download !== undefined) { // feature detection\n            // Browsers that support HTML5 download attribute\n            var url = URL.createObjectURL(blob);\n            link.setAttribute(\"href\", url);\n            link.setAttribute(\"download\", filename);\n            link.style.visibility = 'hidden';\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n    }\n}\n\n\n\n\n\t\t\t\n  exportTimesheets(){\n    this.authService.getExpertTimesheets().subscribe((res)=>{\n      console.log(res)\n      if(res == 'no Data'){\n        this.authService.openSnackbar('No Data')\n\n      }else{\n        var mainArr = [['WR_REF','WR_UNITS','WR_TRNCDE','WR_RATE']];\n\n        res.forEach(element => {\n          mainArr.push(element.workerID, element.wrUnits, element.trncde, element.wrRate)\n        });\n          // ['Employee Code','Gross Pay','Pay Description on line 1 (Fixed number)','Pay Rate (Fixed number)'],\t\n        if(res.length > 0)\n        {\n          this.authService.openSnackbar('Successfully Expert Timesheet')\n          this.exportToCsv('import.csv',mainArr)\n        }else{\n          this.authService.openSnackbar('No Data')\n        }\n      }\n  \n  \n    })\n  }\n  importPayroll(){\n\n  }\n  generateWorkerID(){\n    this.authService.getGenerateWorkerID().subscribe((res)=>{\n      console.log('res')\n      console.log(res)\n      if(res.fullname){\n        this.authService.openSnackbar('Alrady Gnerated');\n\n      }else{\n          if(res.length  == 0){\n          this.authService.openSnackbar('No Data')\n        }else{\n          // this.getData();\n          of(res.map(client =>new Payroll(client))).subscribe(clientes =>{\n            console.log('123213123')  \n            console.log(clientes)  \n            this.subject$.next(clientes)\n          });\n          this.authService.openSnackbar('Gnerated Successfully')\n        }\n      }\n      \n    },(err)=>{\n      this.authService.openSnackbar('Error')\n    })\n  }\n\n  changeListener(files: FileList){\n    console.log(files);\n    this.loading = true;\n    if(files && files.length > 0) {\n       let file : File = files.item(0); \n         console.log(file.name);\n         console.log(file.size);\n         console.log(file.type);\n         //File reader method\n         let reader: FileReader = new FileReader();\n         reader.readAsText(file);\n         reader.onload = (e) => {\n          let csv: any = reader.result;\n          let allTextLines = [];\n          allTextLines = csv.split(/\\r|\\n|\\r/);\n         \n         //Table Headings\n          let headers = allTextLines[0].split(';');\n          let data = headers;\n          let tarr = [];\n          for (let j = 0; j < headers.length; j++) {\n            tarr.push(data[j]);\n          }\n          //Pusd headings to array variable\n          this.lines.push(tarr);\n          \n         \n          // Table Rows\n          let tarrR = [];\n          \n          let arrl = allTextLines.length;\n          let rows = [];\n          for(let i = 1; i < arrl; i++){\n          rows.push(allTextLines[i].split(';'));\n         \n          }\n          \n          for (let j = 0; j < arrl; j++) {\n      \n              tarrR.push(rows[j]);\n              \n          }\n         //Push rows to array variable\n          this.linesR.push(tarrR);\n          console.log('tarrR' +tarrR);\n          console.log('lines' +this.lines);\n         console.log('linesR' +this.linesR);  \n         this.authService.getImportPayroll(tarrR).subscribe((res)=>{\n            this.loading = false;\n            if(res.fullname){\n              this.authService.openSnackbar('Alrady Gnerated');\n            }else{\n                if(res.length  == 0){\n                this.authService.openSnackbar('No Data')\n              }else{\n                // this.getData();\n                of(res.map(client =>new Payroll(client))).subscribe(clientes =>{\n                  console.log('123213123')  \n                  console.log(clientes)  \n                  this.subject$.next(clientes)\n                });\n                this.authService.openSnackbar('Have done')\n              }\n            }\n            console.log('exprot return value')\n                  console.log(tarrR)\n         },(err)=>{\n          this.loading = false;\n          console.log('exprot return value')\n              console.log(tarrR)\n         })\n     }\n    \n    }\n  }\n\n}\n","<vex-page-layout>\r\n\r\n  <vex-page-layout-header class=\"pb-16\" fxLayout=\"column\" fxLayoutAlign=\"center start\">\r\n    <div [class.container]=\"layoutCtrl.value === 'boxed'\"\r\n         [class.px-gutter]=\"layoutCtrl.value === 'fullwidth'\"\r\n         class=\"w-full flex flex-col sm:flex-row justify-between\">\r\n      <div>\r\n        <h1 class=\"title mt-0 mb-1\">Payroll Management</h1>\r\n        <!-- <vex-breadcrumbs [crumbs]=\"['admin', 'clients']\"></vex-breadcrumbs> -->\r\n      </div>\r\n\r\n      <!-- <mat-button-toggle-group [formControl]=\"layoutCtrl\" class=\"mt-4 sm:mt-0\">\r\n        <mat-button-toggle value=\"boxed\">BOXED</mat-button-toggle>\r\n        <mat-button-toggle value=\"fullwidth\">FULL-WIDTH</mat-button-toggle>\r\n      </mat-button-toggle-group> -->\r\n    </div>\r\n  </vex-page-layout-header>\r\n\r\n  <vex-page-layout-content [class.container]=\"layoutCtrl.value === 'boxed'\"\r\n                           [class.px-gutter]=\"layoutCtrl.value === 'fullwidth'\"\r\n                           class=\"-mt-6\">\r\n\r\n    <div class=\"card overflow-auto -mt-16\">\r\n      <div class=\"bg-app-bar px-6 h-16 border-b sticky left-0\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n        <h2 class=\"title my-0 ltr:pr-4 rtl:pl-4 ltr:mr-4 rtl:ml-4 ltr:border-r rtl:border-l\" fxFlex=\"none\" fxHide.xs>\r\n          <span *ngIf=\"selection.isEmpty()\">Payroll</span>\r\n          <!-- <span *ngIf=\"selection.hasValue()\">{{ selection.selected.length }} -->\r\n            <!-- Payroll<span *ngIf=\"selection.selected.length > 1\">s</span> selected</span> -->\r\n        </h2>\r\n\r\n        <!-- <div *ngIf=\"selection.hasValue()\" class=\"mr-4 pr-4 border-r\" fxFlex=\"none\"> -->\r\n          <div  class=\"mr-4 pr-4 border-r\" fxFlex=\"none\">\r\n          <button (click)=\"exportTimesheets()\"\r\n                  color=\"primary\"\r\n                  mat-icon-button \r\n                  style=\"width: 161px!important;border-radius: 4%!important;\"\r\n                  type=\"button\">\r\n            <mat-icon [icIcon]=\"roundImportExport\"></mat-icon>\r\n              Export Timesheets\r\n            </button>\r\n            <!-- (click)=\"importPayroll()\" -->\r\n          <button (click)=\"fileInput.click()\"\r\n                  color=\"primary\"\r\n                  mat-icon-button  \r\n                  style=\"width: 152px!important;border-radius: 4%!important;\"\r\n                  type=\"button\">  \r\n            <mat-icon [icIcon]=\"roundImportExport\"></mat-icon>\r\n              Import Payroll\r\n              <input #fileInput type=\"file\" (change)=\"changeListener($event.target.files)\" style=\"display:none;\" />\r\n              <mat-progress-spinner *ngIf=\"loading\"mode=\"indeterminate\" color=\"primary\"diameter=\"20\"style=\"    position: absolute;\r\n              right: -8px;\r\n              top: 24%;\"></mat-progress-spinner>\r\n          </button>\r\n\r\n          <!-- <button color=\"primary\" mat-icon-button matTooltip=\"Another action\" type=\"button\">\r\n            <mat-icon [icIcon]=\"icFolder\"></mat-icon>\r\n          </button> -->\r\n        </div>\r\n\r\n        <div class=\"bg-card rounded-full border px-4\"\r\n             fxFlex=\"400px\"\r\n             fxFlex.lt-md=\"auto\"\r\n             fxHide.xs\r\n             fxLayout=\"row\"\r\n             fxLayoutAlign=\"start center\">\r\n          <ic-icon [icIcon]=\"icSearch\" size=\"20px\"></ic-icon>\r\n          <input [formControl]=\"searchCtrl\"\r\n                 class=\"px-4 py-3 border-0 outline-none w-full bg-transparent\"\r\n                 placeholder=\"Search...\"\r\n                 type=\"search\">\r\n        </div>\r\n\r\n        <span fxFlex></span>\r\n\r\n        <button class=\"ml-4\" fxFlex=\"none\" fxHide.gt-xs mat-icon-button type=\"button\">\r\n          <mat-icon [icIcon]=\"icSearch\"></mat-icon>\r\n        </button>\r\n\r\n        <button [matMenuTriggerFor]=\"columnFilterMenu\"\r\n                class=\"ml-4\"\r\n                fxFlex=\"none\"\r\n                mat-icon-button\r\n                matTooltip=\"Filter Columns\"\r\n                type=\"button\">\r\n          <mat-icon [icIcon]=\"icFilterList\"></mat-icon>\r\n        </button>\r\n\r\n        <!-- <button (click)=\"createClient()\"\r\n                class=\"ml-4\"\r\n                color=\"primary\"\r\n                fxFlex=\"none\"\r\n                mat-mini-fab\r\n                matTooltip=\"Add Client\"\r\n                type=\"button\">\r\n          <mat-icon [icIcon]=\"icAdd\"></mat-icon> -->\r\n        <!-- </button> -->\r\n        <button (click)=\"generateWorkerID()\"\r\n                color=\"primary\"\r\n                fxFlex=\"none\"\r\n                mat-mini-fab\r\n                type=\"button\"\r\n                style=\"    border-radius: 4%!important;\r\n                width: 145px!important;\">\r\n          Generate Worker ID\r\n        </button>\r\n      </div>\r\n\r\n      <table @stagger [dataSource]=\"dataSource\" class=\"w-full\" mat-table matSort>\r\n\r\n        <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n        <!-- Checkbox Column -->\r\n        <!-- <ng-container matColumnDef=\"checkbox\">\r\n          <th *matHeaderCellDef mat-header-cell>\r\n            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                          [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                          [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                          color=\"primary\">\r\n            </mat-checkbox>\r\n          </th>\r\n          <td *matCellDef=\"let row\" class=\"w-4\" mat-cell>\r\n            <mat-checkbox (change)=\"$event ? selection.toggle(row) : null\"\r\n                          (click)=\"$event.stopPropagation()\"\r\n                          [checked]=\"selection.isSelected(row)\"\r\n                          color=\"primary\">\r\n            </mat-checkbox>\r\n          </td>\r\n        </ng-container> -->\r\n\r\n        <!-- Image Column -->\r\n        <!-- <ng-container matColumnDef=\"image\">\r\n          <th *matHeaderCellDef mat-header-cell></th>\r\n          <td *matCellDef=\"let row\" class=\"w-8 min-w-8 pr-0\" mat-cell>\r\n            <img [src]=\"row['profilePhoto']\" class=\"avatar h-8 w-8 align-middle\">\r\n            <img src=\"assets/img/avatars/1.jpg\" class=\"avatar h-8 w-8 align-middle\">\r\n          </td>\r\n        </ng-container> -->\r\n\r\n        <!-- Text Columns -->\r\n        <ng-container *ngFor=\"let column of columns; trackBy: trackByProperty\">\r\n          <ng-container *ngIf=\"column.type === 'text'\" [matColumnDef]=\"column.property\">\r\n            <th *matHeaderCellDef class=\"uppercase\" mat-header-cell mat-sort-header> {{ column.label }}</th>\r\n            <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>{{ row[column.property] }}</td>\r\n          </ng-container>\r\n        </ng-container>\r\n\r\n        <!-- Contact Column -->\r\n        <ng-container matColumnDef=\"contact\">\r\n          <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n          <td *matCellDef=\"let row\" mat-cell>\r\n            <div class=\"flex\">\r\n              <a (click)=\"$event.stopPropagation()\"\r\n                 class=\"w-8 h-8 leading-none flex items-center justify-center hover:bg-hover text-primary bg-primary-light\"\r\n                 mat-icon-button>\r\n                <mat-icon [icIcon]=\"icPhone\" size=\"18px\"></mat-icon>\r\n              </a>\r\n\r\n              <a (click)=\"$event.stopPropagation()\"\r\n                 class=\"w-8 h-8 leading-none flex items-center justify-center ml-1 hover:bg-hover text-teal bg-teal-light\"\r\n                 mat-icon-button>\r\n                <mat-icon [icIcon]=\"icMail\" size=\"18px\"></mat-icon>\r\n              </a>\r\n\r\n              <a (click)=\"$event.stopPropagation()\"\r\n                 class=\"w-8 h-8 leading-none flex items-center justify-center ml-1 hover:bg-hover text-green bg-green-light\"\r\n                 mat-icon-button>\r\n                <mat-icon [icIcon]=\"icMap\" size=\"18px\"></mat-icon>\r\n              </a>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Label Column -->\r\n        <ng-container matColumnDef=\"response\">\r\n          <th *matHeaderCellDef class=\"uppercase\" mat-header-cell mat-sort-header>Response</th>\r\n          <td *matCellDef=\"let row\" mat-cell>\r\n            <div (click)=\"$event.stopPropagation()\" fxLayoutAlign=\"start center\" fxLayoutGap=\"4px\">\r\n              <div [ngClass]=\"[responses[row.response].textClass, responses[row.response].bgClass]\"\r\n                   class=\"rounded px-2 py-1 font-medium text-xs\"\r\n                   fxFlex=\"none\">\r\n                   {{row.response}}\r\n              </div>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n        <!-- <ng-container matColumnDef=\"labels\">\r\n          <th *matHeaderCellDef class=\"uppercase\" mat-header-cell mat-sort-header>Labels</th>\r\n          <td *matCellDef=\"let row\" mat-cell>\r\n            <div (click)=\"$event.stopPropagation()\" fxLayoutAlign=\"start center\" fxLayoutGap=\"4px\">\r\n              <div *ngFor=\"let label of row.labels\"\r\n                   [ngClass]=\"[label.textClass, label.bgClass]\"\r\n                   class=\"rounded px-2 py-1 font-medium text-xs\"\r\n                   fxFlex=\"none\">\r\n                {{ label.text }}\r\n              </div>\r\n              <div (click)=\"labelSelect.open()\"\r\n                   class=\"text-secondary bg-base text-hint cursor-pointer hover:bg-hover\"\r\n                   fxFlex=\"none\"\r\n                   fxLayout=\"row\"\r\n                   fxLayoutAlign=\"center center\">\r\n                <ic-icon [icon]=\"icAdd\" size=\"18px\"></ic-icon>\r\n              </div>\r\n              <mat-select #labelSelect=\"matSelect\"\r\n                          (selectionChange)=\"onLabelChange($event, row)\"\r\n                          [value]=\"row.labels\"\r\n                          class=\"invisible w-0 h-0 text-sm\"\r\n                          fxFlex=\"0 1 0px\"\r\n                          multiple>\r\n                <mat-option *ngFor=\"let label of labels\" [value]=\"label\">\r\n                  <div [ngClass]=\"label.previewClass\"\r\n                       class=\"h-6 w-6 align-middle ltr:mr-2 rtl:ml-2 rounded inline-block\"></div>\r\n                  <span>{{ label.text }}</span>\r\n                </mat-option>\r\n              </mat-select>\r\n            </div>\r\n          </td>\r\n        </ng-container> -->\r\n\r\n        <!-- Action Column -->\r\n        <!-- <ng-container matColumnDef=\"actions\">\r\n          <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n          <td *matCellDef=\"let row\" class=\"w-10 text-secondary\" mat-cell>\r\n            <button (click)=\"$event.stopPropagation()\"\r\n                    [matMenuTriggerData]=\"{ client: row }\"\r\n                    [matMenuTriggerFor]=\"actionsMenu\"\r\n                    mat-icon-button\r\n                    type=\"button\">\r\n              <mat-icon [icIcon]=\"icMoreHoriz\"></mat-icon>\r\n            </button>\r\n          </td>\r\n        </ng-container> -->\r\n\r\n        <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\r\n        <!-- (click)=\"updateClient(row)\" -->\r\n        <tr \r\n            *matRowDef=\"let row; columns: visibleColumns;\"\r\n            @fadeInUp\r\n            class=\"hover:bg-hover trans-ease-out cursor-pointer\"\r\n            mat-row></tr>\r\n      </table>\r\n\r\n      <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" [pageSize]=\"pageSize\" class=\"sticky left-0\"></mat-paginator>\r\n    </div>\r\n\r\n  </vex-page-layout-content>\r\n\r\n</vex-page-layout>\r\n\r\n<mat-menu #columnFilterMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n  <button (click)=\"toggleColumnVisibility(column, $event)\" *ngFor=\"let column of columns\"\r\n          class=\"checkbox-item mat-menu-item\">\r\n    <mat-checkbox (click)=\"$event.stopPropagation()\" [(ngModel)]=\"column.visible\" color=\"primary\">\r\n      {{ column.label }}\r\n    </mat-checkbox>\r\n  </button>\r\n</mat-menu>\r\n\r\n<mat-menu #actionsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n  <ng-template let-client=\"client\" matMenuContent>\r\n    <button (click)=\"updateClient(client)\" mat-menu-item>\r\n      <mat-icon [icIcon]=\"icEdit\"></mat-icon>\r\n      <span>Modify</span>\r\n    </button>\r\n    <button (click)=\"deleteClient(client)\" mat-menu-item>\r\n      <mat-icon [icIcon]=\"icDelete\"></mat-icon>\r\n      <span>Delete</span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PayrollRoutingModule } from './payroll-routing.module';\nimport { PayrollComponent } from './payroll.component';\nimport { PageLayoutModule } from '../../../@vex/components/page-layout/page-layout.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BreadcrumbsModule } from '../../../@vex/components/breadcrumbs/breadcrumbs.module';\nimport { ClientCreateUpdateModule } from './client-create-update/client-create-update.module';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ContainerModule } from '../../../@vex/directives/container/container.module';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n\n@NgModule({\n  declarations: [PayrollComponent],\n  imports: [\n    CommonModule,\n    PayrollRoutingModule,\n    PageLayoutModule,\n    FlexLayoutModule,\n    BreadcrumbsModule,\n    ClientCreateUpdateModule,\n    MatPaginatorModule,\n    MatTableModule,\n    MatSortModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    MatMenuModule,\n    IconModule,\n    FormsModule,\n    MatTooltipModule,\n    ReactiveFormsModule,\n    ContainerModule,\n    MatSelectModule,\n    MatButtonToggleModule,\n  ]\n})\nexport class PayrollModule {\n}\n","import { formatDate } from '@angular/common';\r\n\r\nexport class Payroll {\r\n    _id: string;\r\n    id:number;\r\n    firstName:string;\r\n    lastName:string;\r\n    logID:string;\r\n    timestamp:Date;\r\n    timestampStr:string;\r\n    type:string;\r\n    response:string;\r\n    periodStart:Date;\r\n    periodEnd:Date;\r\n    // clientType:string;\r\n    // parentId:string;\r\n    // clientStatus:string;\r\n    // companyUrl:string;\r\n    // tradingName:string;\r\n    constructor(client) {\r\n        this._id = client._id;\r\n        this.id = client.id;\r\n        this.logID = client.logID;\r\n        this.firstName = client.firstName;\r\n        this.lastName = client.lastName;\r\n        this.timestamp = client.timestamp;\r\n        this.timestampStr = formatDate(this.timestamp, 'dd MMM,yyyy HH:mm','en');\r\n        this.type = client.type;\r\n        this.response = client.response;\r\n        this.periodStart = client.periodStart;\r\n        this.periodEnd = client.periodEnd;\r\n      }\r\n    \r\n      get name() {\r\n        let name = '';\r\n    \r\n        if (this.firstName && this.lastName) {\r\n          name = this.firstName + ' ' + this.lastName;\r\n        } else if (this.firstName) {\r\n          name = this.firstName;\r\n        } else if (this.lastName) {\r\n          name = this.lastName;\r\n        }\r\n    \r\n        return name;\r\n      }\r\n      get period(){\r\n        let period = '';\r\n        period = formatDate(this.periodStart, 'dd MMM,yyyy','en') + ' - '+ formatDate(this.periodEnd, 'dd MMM,yyyy','en');\r\n        return period;\r\n      }\r\n}"]}