{"version":3,"sources":["webpack:///node_modules/@iconify/icons-ic/twotone-add.js","webpack:///node_modules/@iconify/icons-ic/twotone-bubble-chart.js","webpack:///node_modules/@iconify/icons-ic/twotone-edit.js","webpack:///node_modules/@iconify/icons-ic/twotone-filter-list.js","webpack:///node_modules/@iconify/icons-ic/twotone-folder.js","webpack:///node_modules/@iconify/icons-ic/twotone-mail.js","webpack:///node_modules/@iconify/icons-ic/twotone-map.js","webpack:///src/@vex/animations/fade-in-up.animation.ts","webpack:///src/@vex/animations/stagger.animation.ts","webpack:///src/app/admin/admin-dashboard/admin-dashboard-routing.module.ts","webpack:///src/app/admin/admin-dashboard/admin-dashboard.component.ts","webpack:///src/app/admin/admin-dashboard/admin-dashboard.component.html","webpack:///src/app/admin/admin-dashboard/admin-dashboard.module.ts","webpack:///src/app/admin/admin-dashboard/admin-job-table/admin-job-table.component.ts","webpack:///src/app/admin/admin-dashboard/admin-job-table/admin-job-table.component.html","webpack:///src/app/admin/admin-dashboard/admin-job-table/customer-create-update/customer-create-update.component.html","webpack:///src/app/admin/admin-dashboard/admin-job-table/customer-create-update/customer-create-update.component.ts"],"names":["data","exports","__esModule","fadeInUpAnimation","duration","transform","opacity","fadeInUp400ms","staggerAnimation","timing","optional","stagger80ms","stagger60ms","stagger40ms","stagger20ms","routes","path","component","AdminDashboardRoutingModule","forChild","imports","AdminDashboardComponent","cd","authService","icAssigment","icContacts","icPersonOutline","icGroup","icReceipt","icContactSupport","icStar","icPageView","icCloudOff","icTimer","icMoreVert","icBook","icBubbleChart","totalStaff","pendingClient","pendingWorker","totalClient","reviewTimesheets","getAllUserAuth","getAllJobAuth","getTimesheets","subscribe","res","length","AllJob","AllUsers","AllUser","temp","filter","obj","accountType","clientStatus","setTimeout","name","selector","templateUrl","styleUrls","AdminDashboardModule","declarations","$event","stopPropagation","AdminJobTableComponent","dialog","layoutCtrl","subject$","data$","asObservable","columns","label","property","type","visible","cssClasses","pageSize","pageSizeOptions","selection","statuss","icPhone","icMail","icMap","icEdit","icSearch","icDelete","icAdd","icFilterList","icMoreHoriz","icFolder","currenctUser","setCurrentUser","currentUser","getTypeJobs","clients","map","client","clientes","console","log","next","getData","dataSource","pipe","Boolean","customers","paginator","sort","open","afterClosed","customer","addJob","openSnackbar","unshift","updatedCustomer","updateJob","index","findIndex","existingCustomer","id","deleteJob","splice","deselect","forEach","c","deleteCustomer","value","trim","toLowerCase","column","event","stopImmediatePropagation","numSelected","selected","numRows","isAllSelected","clear","row","select","change","provide","useValue","appearance","animations","providers","CustomerCreateUpdateComponent","defaults","dialogRef","fb","route","mode","selectedType","icClose","icPrint","icDownload","icPerson","icMyLocation","icLocationCity","icEditLocation","minStart","selectedClient","states","population","flag","icArrowDropDown","state","indexOf","stateCtrl","filteredStates$","valueChanges","filterStates","slice","AllClients","minDate","Date","form","group","_id","department","shiftDate","startTime","endTime","locationShift","purchaseOrderNo","additionalInformation","status","createCustomer","updateCustomer","tempUser","tempName","firstName","lastName","close","ev","currentScrumboard","title","children","currentJob","arrLabel","ele","statusStr","push","role","fulfilled","total","clientId","timesheetId","setCurrentScrumboardLocal","navigate","save","changeClient","changeAccountType"],"mappings":"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","file":"admin-admin-dashboard-admin-dashboard-module-es5.js","sourcesContent":["var data = {\n\t\"body\": \"<path d=\\\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M16.5 12c1.93 0 3.5-1.57 3.5-3.5S18.43 5 16.5 5S13 6.57 13 8.5s1.57 3.5 3.5 3.5z\\\" fill=\\\"currentColor\\\"/><circle cx=\\\"15.01\\\" cy=\\\"18\\\" opacity=\\\".3\\\" r=\\\"1\\\" fill=\\\"currentColor\\\"/><circle cx=\\\"7\\\" cy=\\\"14\\\" opacity=\\\".3\\\" r=\\\"2\\\" fill=\\\"currentColor\\\"/><path d=\\\"M7 18c2.21 0 4-1.79 4-4s-1.79-4-4-4s-4 1.79-4 4s1.79 4 4 4zm0-6c1.1 0 2 .9 2 2s-.9 2-2 2s-2-.9-2-2s.9-2 2-2zm11.01 6c0-1.65-1.35-3-3-3s-3 1.35-3 3s1.35 3 3 3s3-1.35 3-3zm-4 0c0-.55.45-1 1-1s1 .45 1 1s-.45 1-1 1s-1-.45-1-1zm2.49-4c3.03 0 5.5-2.47 5.5-5.5S19.53 3 16.5 3S11 5.47 11 8.5s2.47 5.5 5.5 5.5zm0-9C18.43 5 20 6.57 20 8.5S18.43 12 16.5 12S13 10.43 13 8.5S14.57 5 16.5 5z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M5 18.08V19h.92l9.06-9.06l-.92-.92z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M20.71 7.04a.996.996 0 0 0 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29s-.51.1-.7.29l-1.83 1.83l3.75 3.75l1.83-1.83zM3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM5.92 19H5v-.92l9.06-9.06l.92.92L5.92 19z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path d=\\\"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M11.17 8l-.58-.59L9.17 6H4v12h16V8h-8z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 12H4V6h5.17l1.41 1.41l.59.59H20v10z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M20 6H4l8 4.99zM4 8v10h16V8l-8 5z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 2l-8 4.99L4 6h16zm0 12H4V8l8 5l8-5v10z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M5 18.31l3-1.16V5.45L5 6.46zm11 .24l3-1.01V5.69l-3 1.17z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M20.5 3l-.16.03L15 5.1L9 3L3.36 4.9c-.21.07-.36.25-.36.48V20.5c0 .28.22.5.5.5l.16-.03L9 18.9l6 2.1l5.64-1.9c.21-.07.36-.25.36-.48V3.5c0-.28-.22-.5-.5-.5zM8 17.15l-3 1.16V6.46l3-1.01v11.7zm6 1.38l-4-1.4V5.47l4 1.4v11.66zm5-.99l-3 1.01V6.86l3-1.16v11.84z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import { animate, style, transition, trigger } from '@angular/animations';\r\n\r\nexport function fadeInUpAnimation(duration: number) {\r\n  return trigger('fadeInUp', [\r\n    transition(':enter', [\r\n      style({\r\n        transform: 'translateY(20px)',\r\n        opacity: 0\r\n      }),\r\n      animate(`${duration}ms cubic-bezier(0.35, 0, 0.25, 1)`, style({\r\n        transform: 'translateY(0)',\r\n        opacity: 1\r\n      }))\r\n    ])\r\n  ]);\r\n}\r\n\r\nexport const fadeInUp400ms = fadeInUpAnimation(400);\r\n","import { animateChild, query, stagger, transition, trigger } from '@angular/animations';\r\n\r\nexport function staggerAnimation(timing: number) {\r\n  return trigger('stagger', [\r\n    transition('* => *', [ // each time the binding value changes\r\n      query(':enter', stagger(timing, animateChild()), { optional: true }),\r\n    ])\r\n  ]);\r\n}\r\n\r\nexport const stagger80ms = staggerAnimation(80);\r\nexport const stagger60ms = staggerAnimation(60);\r\nexport const stagger40ms = staggerAnimation(40);\r\nexport const stagger20ms = staggerAnimation(20);\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminDashboardComponent } from './admin-dashboard.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminDashboardComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminDashboardRoutingModule {\n}\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport icGroup from '@iconify/icons-ic/twotone-group';\nimport icPageView from '@iconify/icons-ic/twotone-pageview';\nimport icCloudOff from '@iconify/icons-ic/twotone-cloud-off';\nimport icTimer from '@iconify/icons-ic/twotone-timer';\nimport icPersonOutline from '@iconify/icons-ic/twotone-person-outline';\nimport icContacts from '@iconify/icons-ic/twotone-contacts';\nimport icAssigment from '@iconify/icons-ic/twotone-assignment';\nimport { defaultChartOptions } from '../../../@vex/utils/default-chart-options';\nimport { Order, tableSalesData } from '../../../static-data/table-sales-data';\nimport { TableColumn } from '../../../@vex/interfaces/table-column.interface';\nimport icMoreVert from '@iconify/icons-ic/twotone-more-vert';\nimport { AuthService } from 'src/app/services/auth.service';\nimport icBook from '@iconify/icons-ic/twotone-book';\nimport icStar from '@iconify/icons-ic/twotone-star';\nimport icContactSupport from '@iconify/icons-ic/twotone-contact-support';\nimport icBubbleChart from '@iconify/icons-ic/twotone-bubble-chart';\nimport icReceipt from '@iconify/icons-ic/twotone-receipt';\n  \n@Component({\n  selector: 'vex-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.scss']\n})\nexport class AdminDashboardComponent implements OnInit {\n  clientJob:any;\n  totalJobs:number;\n  requestTime:number;\n  icAssigment = icAssigment;\n  icContacts = icContacts;\n  icPersonOutline = icPersonOutline;\n  icGroup = icGroup;\n  icReceipt =icReceipt;\n  icContactSupport = icContactSupport;\n  icStar = icStar;\n  icPageView = icPageView;\n  icCloudOff = icCloudOff;\n  icTimer = icTimer;\n  icMoreVert = icMoreVert;\n  icBook = icBook;\n  icBubbleChart = icBubbleChart;\n  AllJob:any;\n  AllUsers:any;\n  totalStaff:number = 0;\n  pendingClient:number = 0;\n  pendingWorker:number = 0;\n  totalClient:number = 0;\n  reviewTimesheets:number = 0;\n  constructor(private cd: ChangeDetectorRef,\n    private authService:AuthService) { }\n\n  async ngOnInit() {\n       await this.authService.getAllUserAuth();\n      await this.authService.getAllJobAuth();\n    this.authService.getTimesheets('Completed').subscribe((res)=>{\n      this.reviewTimesheets = res.length;\n    })\n    // if(!this.authService.AllJob)\n    //   this.authService.setAllJob();\n    // if(!this.authService.AllUser)\n    //   this.authService.setAllUser();\n    this.AllJob = this.authService.AllJob;\n    this.AllUsers = this.authService.AllUser;\n    var temp = this.AllUsers;\n    this.totalStaff = temp.filter((obj) => obj.accountType == 'Worker').length;\n    this.pendingWorker =  temp.filter((obj) => obj.accountType == 'Worker' && obj.clientStatus == 'Pending').length;\n    this.pendingClient =  temp.filter((obj) => obj.accountType == 'Client' && obj.clientStatus == 'Pending').length;\n    this.totalClient = this.AllUsers.length - this.totalStaff - 2;\n    // console.log('____________')\n    // console.log(this.clientJob)\n    // this.totalJobs =  this.clientJob.filter((obj) => obj.statusStr == 'Completed').length;\n    // this.clientJob = this.authService.clientJob;\n    // this.requestTime = 0;\n    // console.log('____________+++=')\n    // console.log(this.clientJob)\n    // console.log(this.requestTime)\n    // console.log(this.totalJobs)\n    // this.clientJob.filter((obj) => {this.requestTime += parseInt(obj.endTime) - parseInt(obj.startTime)}).length;\n    // this.clientJob = this.authService.clientJob;\n    setTimeout(() => {\n      const temp = [\n        {\n          name: 'Subscribers',\n          data: [55, 213, 55, 0, 213, 55, 33, 55]\n        },\n        {\n          name: ''\n        }\n      ];\n    }, 3000);\n  }\n\n}\n","<vex-secondary-toolbar current=\"Dashboard\">\n  <!-- <vex-breadcrumbs [crumbs]=\"['Dashboards', 'Analytics']\" class=\"flex-auto\"></vex-breadcrumbs> -->\n  <!-- <button class=\"ml-2\" color=\"primary\" mat-icon-button type=\"button\">\n    <mat-icon [icIcon]=\"icMoreVert\"></mat-icon>\n  </button> -->\n</vex-secondary-toolbar>\n\n<div class=\"p-gutter\"\n     gdColumns=\"1fr 1fr 1fr \"\n     gdColumns.lt-md=\"1fr 1fr\"\n     gdColumns.lt-sm=\"1fr\"\n     gdGap=\"16px\"\n     vexContainer>\n  <!-- <vex-widget-assistant gdColumn=\"1 / 3\" gdColumn.lt-md=\"1 / -1\" gdColumn.lt-sm=\"1\"></vex-widget-assistant>\n\n  <vex-widget-quick-line-chart [icon]=\"icPageView\"\n                               [series]=\"pageViewsSeries\"\n                               iconClass=\"text-primary bg-primary-light\"\n                               gdColumn.lt-sm=\"1\"\n                               label=\"Page Views\"\n                               value=\"92.4k\"></vex-widget-quick-line-chart>\n\n  <vex-widget-quick-line-chart [icon]=\"icGroup\"\n                               [options]=\"uniqueUsersOptions\"\n                               [series]=\"uniqueUsersSeries\"\n                               iconClass=\"text-orange bg-orange-light\"\n                               gdColumn.lt-sm=\"1\"\n                               label=\"Unique Users\"\n                               value=\"67.2k\"></vex-widget-quick-line-chart>\n\n  <vex-widget-large-chart [series]=\"userSessionsSeries\"\n                          gdColumn=\"1 / 3\"\n                          gdColumn.lt-md=\"1 / -1\"\n                          gdColumn.lt-sm=\"1\"></vex-widget-large-chart>\n\n  <vex-widget-table [columns]=\"tableColumns\"\n                    [data]=\"tableData\"\n                    class=\"w-full overflow-auto shadow\" gdColumn=\"3 / -1\"\n                    gdColumn.lt-md=\"1 / -1\"\n                    gdColumn.lt-sm=\"1\"></vex-widget-table> -->\n\n  <vex-widget-quick-value-center [change]=\"124.4\"\n  [icon]=\"icAssigment\"\n                                 iconClass=\"text-purple bg-purple-light\"\n                                 gdColumn.lt-sm=\"1\"\n                                 label=\"Active Jobs\"\n                                 [value]=\"AllJob.length\"></vex-widget-quick-value-center>\n  <!-- <vex-widget-quick-value-center [change]=\"-23.7\"\n                                 [icon]=\"icPageView\"\n                                 iconClass=\"text-orange bg-orange-light\"\n                                 gdColumn.lt-sm=\"1\"\n                                 helpText=\"Additional information\"\n                                 label=\"Request Time\"\n                                 value=\"96.2k\"></vex-widget-quick-value-center>-->\n  <vex-widget-quick-value-center [change]=\"23.2\"\n                                 [icon]=\"icBook\"\n                                 iconClass=\"text-teal  bg-teal-light\"\n                                 gdColumn.lt-sm=\"1\"\n                                 label=\"Total Staff\"\n                                 [value]=\"totalStaff\"></vex-widget-quick-value-center> \n  <vex-widget-quick-value-center [change]=\"23.2\"\n                                 [icon]=\"icGroup\"\n                                 iconClass=\"text-teal  bg-teal-light\"\n                                 gdColumn.lt-sm=\"1\"\n                                 label=\"Pending Client Applications\"\n                                 [value]=\"pendingClient\"></vex-widget-quick-value-center> \n  <vex-widget-quick-value-center [change]=\"34.5\"\n                                 [icon]=\"icStar\"\n                                 iconClass=\"text-deep-orange bg-deep-orange-light\"\n                                 gdColumn.lt-sm=\"1\"\n                                 label=\"Total Clients\"\n                                 [value]=\"totalClient\"></vex-widget-quick-value-center>\n      <vex-widget-quick-value-center [change]=\"124.4\"\n      [icon]=\"icReceipt\"\n                                 iconClass=\"text-primary bg-primary-light\"\n                                 gdColumn.lt-sm=\"1\"\n                                 label=\"Review Timesheets\"\n                                 [value]=\"reviewTimesheets\"></vex-widget-quick-value-center>\n      <vex-widget-quick-value-center [change]=\"23.2\"\n                                 [icon]=\"icGroup\"\n                                 iconClass=\"text-teal  bg-teal-light\"\n                                 gdColumn.lt-sm=\"1\"\n                                 label=\"Pending Worker Applications\"\n                                 [value]=\"pendingWorker\"></vex-widget-quick-value-center> \n      <!-- <vex-widget-assistant numberPending='4' valueFlag=\"Worker\" gdColumn=\"1\" ></vex-widget-assistant>\n        <vex-widget-assistant numberPending='1' valueFlag=\"Client\" gdColumn=\"1\"></vex-widget-assistant> -->\n        <!-- <vex-widget-assistant gdColumn=\"2 / 4\" ></vex-widget-assistant> -->\n  <div gdColumn=\"1 / -1\"  gdColumn.lt-sm=\"1\" style=\"padding-top: 15px;\">\n    <vex-admin-job-table></vex-admin-job-table>\n  </div>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AdminDashboardRoutingModule } from './admin-dashboard-routing.module';\nimport { AdminDashboardComponent } from './admin-dashboard.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ChartModule } from '../../../@vex/components/chart/chart.module';\nimport { MatIconModule } from '@angular/material/icon';\nimport { WidgetQuickLineChartModule } from '../../../@vex/components/widgets/widget-quick-line-chart/widget-quick-line-chart.module';\nimport { WidgetQuickValueCenterModule } from '../../../@vex/components/widgets/widget-quick-value-center/widget-quick-value-center.module';\nimport { WidgetQuickValueStartModule } from '../../../@vex/components/widgets/widget-quick-value-start/widget-quick-value-start.module';\nimport { WidgetLargeGoalChartModule } from '../../../@vex/components/widgets/widget-large-goal-chart/widget-large-goal-chart.module';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { WidgetAssistantModule } from '../../../@vex/components/widgets/widget-assistant/widget-assistant.module';\nimport { WidgetLargeChartModule } from '../../../@vex/components/widgets/widget-large-chart/widget-large-chart.module';\nimport { WidgetTableModule } from '../../../@vex/components/widgets/widget-table/widget-table.module';\nimport { SecondaryToolbarModule } from '../../../@vex/components/secondary-toolbar/secondary-toolbar.module';\nimport { BreadcrumbsModule } from '../../../@vex/components/breadcrumbs/breadcrumbs.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { PageLayoutModule } from '../../../@vex/components/page-layout/page-layout.module';\nimport { ContainerModule } from '../../../@vex/directives/container/container.module';\nimport { AdminJobTableComponent } from './admin-job-table/admin-job-table.component';\nimport { ClientCreateUpdateModule } from 'src/app/admin/clients/client-create-update/client-create-update.module';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n\n@NgModule({\n  declarations: [AdminDashboardComponent, AdminJobTableComponent ],\n  imports: [\n    CommonModule,\n    AdminDashboardRoutingModule,\n    FlexLayoutModule,\n    ChartModule,\n    MatIconModule,\n    WidgetQuickLineChartModule,\n    WidgetQuickValueCenterModule,\n    WidgetQuickValueStartModule,\n    WidgetLargeGoalChartModule,\n    IconModule,\n    WidgetAssistantModule,\n    WidgetLargeChartModule,\n    WidgetTableModule,\n    SecondaryToolbarModule, \n    BreadcrumbsModule,\n    MatButtonModule,\n    PageLayoutModule,\n    ContainerModule,\n    PageLayoutModule,\n    FlexLayoutModule,\n    BreadcrumbsModule,\n    ClientCreateUpdateModule,\n    MatPaginatorModule,\n    MatTableModule,\n    MatSortModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule,\n    IconModule,\n    FormsModule,\n    MatTooltipModule,\n    ReactiveFormsModule,\n    ContainerModule,\n    MatSelectModule,\n    MatButtonToggleModule,\n    MatSnackBarModule\n  ]\n})\nexport class AdminDashboardModule {\n}\n","import { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { Observable, of, ReplaySubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TableColumn } from '../../../../@vex/interfaces/table-column.interface';\nimport { aioTableData, aioTableLabels } from '../../../../static-data/aio-table-data';\nimport { CustomerCreateUpdateComponent } from './customer-create-update/customer-create-update.component';\nimport icEdit from '@iconify/icons-ic/twotone-edit';\nimport icDelete from '@iconify/icons-ic/twotone-delete';\nimport icSearch from '@iconify/icons-ic/twotone-search';\nimport icAdd from '@iconify/icons-ic/twotone-add';\nimport icFilterList from '@iconify/icons-ic/twotone-filter-list';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport icMoreHoriz from '@iconify/icons-ic/twotone-more-horiz';\nimport icFolder from '@iconify/icons-ic/twotone-folder';\nimport { fadeInUp400ms } from '../../../../@vex/animations/fade-in-up.animation';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldDefaultOptions } from '@angular/material/form-field';\nimport { stagger40ms } from '../../../../@vex/animations/stagger.animation';\nimport { FormControl } from '@angular/forms';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { MatSelectChange } from '@angular/material/select';\nimport icPhone from '@iconify/icons-ic/twotone-phone';\nimport icMail from '@iconify/icons-ic/twotone-mail';\nimport icMap from '@iconify/icons-ic/twotone-map';\nimport { Customer } from 'src/app/pages/apps/aio-table/interfaces/customer.model';\nimport { statusTableLabels, statusTableData } from 'src/static-data/status-table-data';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Job } from 'src/app/client/client-timesheet/interfaces/job.model';\n@Component({\n  selector: 'vex-admin-job-table',\n  templateUrl: './admin-job-table.component.html',\n  styleUrls: ['./admin-job-table.component.scss'],\n  animations: [\n    fadeInUp400ms,\n    stagger40ms\n  ],\n  providers: [\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: {\n        appearance: 'standard'\n      } as MatFormFieldDefaultOptions\n    }\n  ]\n})\nexport class AdminJobTableComponent implements OnInit {\n\n  layoutCtrl = new FormControl('boxed');\n\n  /**\n   * Simulating a service with HTTP that returns Observables\n   * You probably want to remove this and do all requests in a service with HTTP\n   */\n  subject$: ReplaySubject<Job[]> = new ReplaySubject<Job[]>(1);\n  data$: Observable<Job[]> = this.subject$.asObservable();\n  customers: Job[];\n\n  @Input()\n  columns: TableColumn<Job>[] = [\n    // { label: 'Checkbox', property: 'checkbox', type: 'checkbox', visible: true },\n    { label: 'Client', property: 'client', type: 'text', visible: true, cssClasses: ['font-medium'] },\n    { label: 'Department', property: 'department', type: 'text', visible: true },\n    { label: 'Role', property: 'role', type: 'text', visible: false },\n    { label: 'Shift Date', property: 'shiftDateStr', type: 'text', visible: true },\n    { label: 'Start Time', property: 'startTime', type: 'text', visible: false },\n    { label: 'End Time', property: 'endTime', type: 'text', visible: false },\n    { label: 'Worker Allocation', property: 'totalStaff', type: 'text', visible: true },\n    { label: 'Status', property: 'status', type: 'button', visible: true },\n    { label: 'ID', property: '_id', type: 'button', visible: false },\n    { label: 'Actions', property: 'actions', type: 'button', visible: true }\n  ];\n  pageSize = 10;\n  pageSizeOptions: number[] = [5, 10, 20, 50];\n  dataSource: MatTableDataSource<Job> | null;\n  selection = new SelectionModel<Job>(true, []);\n  // searchCtrl = new FormControl();\n\n  statuss = statusTableLabels;\n\n  icPhone = icPhone;\n  icMail = icMail;\n  icMap = icMap;\n  icEdit = icEdit;\n  icSearch = icSearch;\n  icDelete = icDelete;\n  icAdd = icAdd;\n  icFilterList = icFilterList;\n  icMoreHoriz = icMoreHoriz;\n  icFolder = icFolder;\n  currentUser;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  constructor(private dialog: MatDialog,\n    private authService:AuthService) {\n      if(!this.authService.currenctUser)\n      this.authService.setCurrentUser();\n      this.currentUser = this.authService.currenctUser;\n  }\n\n  get visibleColumns() {\n    return this.columns.filter(column => column.visible).map(column => column.property);\n  }\n  \n  /**\n   * Example on how to get data and pass it to the table - usually you would want a dedicated service with a HTTP request for this\n   * We are simulating this request here.\n   */\n  getData() {\n    this.authService.getTypeJobs().subscribe((clients)=>{\n      of(clients.map(client =>new Job(client))).subscribe(clientes =>{\n        console.log('123213123')  \n        console.log(clientes)  \n        this.subject$.next(clientes)\n      });\n    })\n    // return of(statusTableData.map(customer => new Job(customer)));\n  }\n\n  ngOnInit() {\n    if(!this.authService.currenctUser)\n    this.authService.setCurrentUser();\n    this.currentUser = this.authService.currenctUser;\n    this.getData();\n\n    this.dataSource = new MatTableDataSource();\n\n    this.data$.pipe(\n      filter<Job[]>(Boolean)\n    ).subscribe(customers => {\n      this.customers = customers;\n      this.dataSource.data = customers;\n    });\n\n    // this.searchCtrl.valueChanges.pipe(\n    //   untilDestroyed(this)\n    // ).subscribe(value => this.onFilterChange(value));\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  createCustomer() {\n    this.dialog.open(CustomerCreateUpdateComponent).afterClosed().subscribe((customer: Customer) => {\n      /**\n       * Customer is the updated customer (if the user pressed Save - otherwise it's null)\n       */\n      if (customer) {\n        /**\n         * Here we are updating our local array.\n         * You would probably make an HTTP request here.\n         */\n        this.authService.addJob(customer, customer['clientId']).subscribe((res)=>{\n          console.log('1')\n          this.authService.openSnackbar('New Job Added!');\n        })\n        customer['']\n        this.customers.unshift(new Job(customer));\n        this.subject$.next(this.customers);\n      }\n    });\n  }\n\n  updateCustomer(customer: Customer) {\n    this.dialog.open(CustomerCreateUpdateComponent, {\n      data: customer\n    }).afterClosed().subscribe(updatedCustomer => {\n      /**\n       * Customer is the updated customer (if the user pressed Save - otherwise it's null)\n       */\n      if (updatedCustomer) {\n        /**\n         * Here we are updating our local array.\n         * You would probably make an HTTP request here.\n         */\n        this.authService.updateJob(updatedCustomer).subscribe((res)=>{\n          this.authService.openSnackbar('Updated Job Successfully');\n        })\n        const index = this.customers.findIndex((existingCustomer) => existingCustomer.id === updatedCustomer.id);\n        this.customers[index] = new Job(updatedCustomer);\n        this.subject$.next(this.customers);\n      }\n    });\n  }\n\n  deleteCustomer(customer: Job) {\n    /**\n     * Here we are updating our local array.\n     * You would probably make an HTTP request here.\n     */\n    this.authService.deleteJob(customer).subscribe((res =>{\n      this.authService.openSnackbar('Removed Successfully!')\n    }))\n   this.customers.splice(this.customers.findIndex((existingCustomer) => existingCustomer.id === customer.id), 1);\n    this.selection.deselect(customer);\n    this.subject$.next(this.customers);\n  }\n\n  deleteCustomers(customers: Job[]) {\n    /**\n     * Here we are updating our local array.\n     * You would probably make an HTTP request here.\n     */\n    customers.forEach(c => this.deleteCustomer(c));\n  }\n\n  onFilterChange(value: string) {\n    if (!this.dataSource) {\n      return;\n    }\n    value = value.trim();\n    value = value.toLowerCase();\n    this.dataSource.filter = value;\n  }\n\n  toggleColumnVisibility(column, event) {\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    column.visible = !column.visible;\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  trackByProperty<T>(index: number, column: TableColumn<T>) {\n    return column.property;\n  }\n\n  onLabelChange(change: MatSelectChange, row: Job) {\n    // const index = this.customers.findIndex(c => c === row);\n    // this.customers[index].status = change.value;\n    // this.subject$.next(this.customers);\n  }\n\n}\n","<div class=\"card overflow-auto -mt-16\">\n    <div class=\"bg-app-bar px-6 h-16 border-b sticky left-0\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n      <h2 class=\"title my-0 ltr:pr-4 rtl:pl-4 ltr:mr-4 rtl:ml-4 ltr:border-r rtl:border-l\" fxFlex=\"none\" fxHide.xs>\n        <span *ngIf=\"selection.isEmpty()\">Job List</span>\n        <span *ngIf=\"selection.hasValue()\">{{ selection.selected.length }}\n          Job<span *ngIf=\"selection.selected.length > 1\">s</span> selected</span>\n      </h2>\n\n      <div *ngIf=\"selection.hasValue()\" class=\"mr-4 pr-4 border-r\" fxFlex=\"none\">\n        <button (click)=\"deleteCustomers(selection.selected)\"\n                color=\"primary\"\n                mat-icon-button\n                matTooltip=\"Delete selected\"\n                type=\"button\">\n          <mat-icon [icIcon]=\"icDelete\"></mat-icon>\n        </button>\n\n        <button color=\"primary\" mat-icon-button matTooltip=\"Another action\" type=\"button\">\n          <mat-icon [icIcon]=\"icFolder\"></mat-icon>\n        </button>\n      </div>\n\n       <!-- <div class=\"bg-card rounded-full border px-4\"\n           fxFlex=\"400px\"\n           fxFlex.lt-md=\"auto\"\n           fxHide.xs\n           fxLayout=\"row\"\n           fxLayoutAlign=\"start center\">\n        <ic-icon [icIcon]=\"icSearch\" size=\"20px\"></ic-icon>\n       <input [formControl]=\"searchCtrl\"\n               class=\"px-4 py-3 border-0 outline-none w-full bg-transparent\"\n               placeholder=\"Search...\"\n               type=\"search\">\n      </div> -->\n\n      <span fxFlex></span>\n\n      <button class=\"ml-4\" fxFlex=\"none\" fxHide.gt-xs mat-icon-button type=\"button\">\n        <mat-icon [icIcon]=\"icSearch\"></mat-icon>\n      </button>\n\n      <button [matMenuTriggerFor]=\"columnFilterMenu\"\n              class=\"ml-4\"\n              fxFlex=\"none\"\n              mat-icon-button\n              matTooltip=\"Filter Columns\"\n              type=\"button\">\n        <mat-icon [icIcon]=\"icFilterList\"></mat-icon>\n      </button>\n\n      <button *ngIf=\"currentUser['clientType'] != 'User'\"(click)=\"createCustomer()\"\n              class=\"ml-4\"\n              color=\"primary\"\n              fxFlex=\"none\"\n              mat-mini-fab\n              matTooltip=\"Add Job\"\n              type=\"button\">\n        <mat-icon [icIcon]=\"icAdd\"></mat-icon>\n      </button>\n    </div>\n\n    <table @stagger [dataSource]=\"dataSource\" class=\"w-full\" mat-table matSort>\n\n      <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n\n      <!-- Checkbox Column -->\n      <!-- <ng-container matColumnDef=\"checkbox\">\n        <th *matHeaderCellDef mat-header-cell>\n          <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                        color=\"primary\">\n          </mat-checkbox>\n        </th>\n        <td *matCellDef=\"let row\" class=\"w-4\" mat-cell>\n          <mat-checkbox (change)=\"$event ? selection.toggle(row) : null\"\n                        (click)=\"$event.stopPropagation()\"\n                        [checked]=\"selection.isSelected(row)\"\n                        color=\"primary\">\n          </mat-checkbox>\n        </td>\n      </ng-container> -->\n\n      <!-- Text Columns -->\n      <ng-container *ngFor=\"let column of columns; trackBy: trackByProperty\">\n        <ng-container *ngIf=\"column.type === 'text'\" [matColumnDef]=\"column.property\">\n          <th *matHeaderCellDef class=\"uppercase\" mat-header-cell mat-sort-header> {{ column.label }}</th>\n          <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>{{ row[column.property] }}</td>\n        </ng-container>\n      </ng-container>\n\n      <!-- Contact Column -->\n      <ng-container matColumnDef=\"contact\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\n        <td *matCellDef=\"let row\" mat-cell>\n          <div class=\"flex\">\n            <a (click)=\"$event.stopPropagation()\"\n               class=\"w-8 h-8 leading-none flex items-center justify-center hover:bg-hover text-primary bg-primary-light\"\n               mat-icon-button>\n              <mat-icon [icIcon]=\"icPhone\" size=\"18px\"></mat-icon>\n            </a>\n\n            <a (click)=\"$event.stopPropagation()\"\n               class=\"w-8 h-8 leading-none flex items-center justify-center ml-1 hover:bg-hover text-teal bg-teal-light\"\n               mat-icon-button>\n              <mat-icon [icIcon]=\"icMail\" size=\"18px\"></mat-icon>\n            </a>\n\n            <a (click)=\"$event.stopPropagation()\"\n               class=\"w-8 h-8 leading-none flex items-center justify-center ml-1 hover:bg-hover text-green bg-green-light\"\n               mat-icon-button>\n              <mat-icon [icIcon]=\"icMap\" size=\"18px\"></mat-icon>\n            </a>\n          </div>\n        </td>\n      </ng-container>\n\n      <!-- Label Column -->\n      <ng-container matColumnDef=\"status\">\n        <th *matHeaderCellDef class=\"uppercase\" mat-header-cell mat-sort-header>Status</th>\n        <td *matCellDef=\"let row\" mat-cell>\n          <div fxLayoutAlign=\"start center\" fxLayoutGap=\"4px\">\n            <div\n                 [ngClass]=\"[row.status.textClass, row.status.bgClass]\"\n                 class=\"rounded px-2 py-1 font-medium text-xs\"\n                 fxFlex=\"none\">\n              {{ row.status.text }}\n            </div>\n            <!-- <div (click)=\"labelSelect.open()\" -->\n              <!-- <div\n                 class=\"text-secondary bg-base text-hint cursor-pointer hover:bg-hover\"\n                 fxFlex=\"none\"\n                 fxLayout=\"row\"\n                 fxLayoutAlign=\"center center\">\n              <ic-icon [icon]=\"icAdd\" size=\"18px\"></ic-icon>\n            </div> -->\n            <!-- <mat-select #labelSelect=\"matSelect\"\n                        (selectionChange)=\"onLabelChange($event, row)\"\n                        [value]=\"row.status\"\n                        class=\"invisible w-0 h-0 text-sm\"\n                        fxFlex=\"0 1 0px\"\n                        multiple>\n              <mat-option *ngFor=\"let label of labels\" [value]=\"label\">\n                <div [ngClass]=\"label.previewClass\"\n                     class=\"h-6 w-6 align-middle ltr:mr-2 rtl:ml-2 rounded inline-block\"></div>\n                <span>{{ label.text }}</span>\n              </mat-option>\n            </mat-select> -->\n          </div>\n        </td>\n      </ng-container>\n\n      <!-- Action Column -->\n      <ng-container matColumnDef=\"actions\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\n        <td *matCellDef=\"let row\" class=\"w-10 text-secondary\" mat-cell>\n          <button (click)=\"$event.stopPropagation()\"\n                  [matMenuTriggerData]=\"{ customer: row }\"\n                  [matMenuTriggerFor]=\"actionsMenu\"\n                  mat-icon-button\n                  type=\"button\">\n            <mat-icon [icIcon]=\"icMoreHoriz\"></mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\n      <!-- (click)=\"updateCustomer(row)\" -->\n      <tr \n          *matRowDef=\"let row; columns: visibleColumns;\"\n          @fadeInUp\n          class=\"hover:bg-hover trans-ease-out cursor-pointer\"\n          mat-row></tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" [pageSize]=\"pageSize\" class=\"sticky left-0\"></mat-paginator>\n  </div>\n  <mat-menu #columnFilterMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\n    <button (click)=\"toggleColumnVisibility(column, $event)\" *ngFor=\"let column of columns\"\n            class=\"checkbox-item mat-menu-item\">\n      <mat-checkbox (click)=\"$event.stopPropagation()\" [(ngModel)]=\"column.visible\" color=\"primary\">\n        {{ column.label }}\n      </mat-checkbox>\n    </button>\n  </mat-menu>\n  \n  <mat-menu #actionsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\n    <ng-template let-customer=\"customer\" matMenuContent>\n      <button [disabled]=\"currentUser['clientType'] == 'User'\" (click)=\"updateCustomer(customer)\" mat-menu-item>\n        <mat-icon [icIcon]=\"icEdit\"></mat-icon>\n        <span>Modify</span>\n      </button>\n      <button  [disabled]=\"currentUser['clientType'] == 'User'\" (click)=\"deleteCustomer(customer)\" mat-menu-item>\n        <mat-icon [icIcon]=\"icDelete\"></mat-icon>\n        <span>Delete</span>\n      </button>\n    </ng-template>\n  </mat-menu>","<form (ngSubmit)=\"save()\" [formGroup]=\"form\">\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" mat-dialog-title>\r\n    <!-- <img *ngIf=\"form.get('imageSrc').value\" [src]=\"form.get('imageSrc').value\" class=\"avatar mr-5\"> -->\r\n\r\n    <h2 *ngIf=\"form.get('client').value \"\r\n        class=\"headline m-0\"\r\n        fxFlex=\"auto\">{{ form.get('client').value}}</h2>\r\n    <h2 *ngIf=\"!form.get('client').value\"\r\n        class=\"headline m-0\"\r\n        fxFlex=\"auto\">New Job</h2>\r\n\r\n    <!-- <button [matMenuTriggerFor]=\"settingsMenu\" class=\"text-secondary\" mat-icon-button type=\"button\">\r\n      <mat-icon [icIcon]=\"icMoreVert\"></mat-icon>\r\n    </button> -->\r\n\r\n    <button class=\"text-secondary\" mat-dialog-close mat-icon-button type=\"button\">\r\n      <mat-icon [icIcon]=\"icClose\"></mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <mat-divider class=\"-mx-6 text-border\"></mat-divider>\r\n\r\n        <!-- <input cdkFocusInitial formControlName=\"client\" matInput> (selectionChange)=\"changeClient($event)\" [(ngModel)]=\"selectedClient\"-->\r\n  <mat-dialog-content fxLayout=\"column\">\r\n    <div class=\"flex flex-col sm:flex-row\">\r\n      <mat-form-field class=\"mt-6 flex-auto\">\r\n        <mat-label>Client</mat-label>\r\n        <mat-select formControlName=\"client\"(selectionChange)=\"changeClient($event)\" [(ngModel)]=\"selectedClient\" >\r\n          <mat-option *ngFor=\"let subclient of AllClients\" [value]=\"subclient.firstName + ' ' + subclient.lastName\">{{subclient.firstName + ' ' + subclient.lastName}}</mat-option>\r\n       </mat-select>\r\n        <mat-icon [icIcon]=\"icPerson\" class=\"mr-3\" matPrefix></mat-icon>\r\n\r\n      </mat-form-field>\r\n      <!-- <mat-input-container class=\"mt-6 flex-auto\">\r\n        <mat-label>State</mat-label>\r\n        <input type=\"text\" matInput [matAutocomplete]=\"auto\" [formControl]=\"stateCtrl\">\r\n        <mat-autocomplete #auto=\"matAutocomplete\">\r\n          <mat-option *ngFor=\"let option of options\" [value]=\"option\">\r\n            {{ option }}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n      </mat-input-container> -->\r\n    </div>\r\n    <div class=\"flex flex-col sm:flex-row\">\r\n        <mat-form-field class=\"flex-auto\">\r\n          <mat-label>Department</mat-label>\r\n          <!-- <input formControlName=\"department\" matInput> -->\r\n          <mat-select formControlName=\"department\" (selectionChange)=\"changeAccountType($event)\" [(ngModel)]=\"selectedType\">\r\n            <mat-option value=\"Housekeeping\">Housekeeping</mat-option>\r\n            <mat-option value=\"Food and Beverage\">Food and Beverage</mat-option>\r\n            <mat-option value=\"Back of House\">Back of House</mat-option>\r\n        </mat-select>\r\n          <!-- <mat-icon [icIcon]=\"icEditLocation\" class=\"mr-3\" matPrefix></mat-icon> -->\r\n      </mat-form-field>\r\n      <!-- <mat-form-field class=\"sm:ml-6 flex-auto\"> -->\r\n        <!-- <mat-label>Role</mat-label> -->\r\n        <!-- <input formControlName=\"role\" matInput> -->\r\n        <!-- <mat-select formControlName=\"role\">\r\n          <mat-option *ngIf=\"selectedType == 'Housekeeping'\" value=\"Linen Porter\">Linen Porter</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Housekeeping'\" value=\"Floor Porter\">Floor Porter</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Housekeeping'\" value=\"Floor Supervisor\">Floor Supervisor</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Housekeeping'\" value=\"Room Supervisor\">Room Supervisor</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Housekeeping'\" value=\"Evening Room Attendant\">Evening Room Attendant</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Housekeeping'\" value=\"Public Area Attendant\">Public Area Attendant</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Housekeeping'\" value=\"Spa Attendant\">Spa Attendant</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Housekeeping'\" value=\"Valet\">Valet</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Housekeeping'\" value=\"Housekeeper\">Housekeeper</mat-option>\r\n\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Waiters\">Waiters</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Night Waiters\">Night Waiters</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Night Room Service\">Night Room Service</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Supervisor Banqueting\">Supervisor Banqueting</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Team Leader\">Team Leader</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Silver Service Waiters\">Silver Service Waiters</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Bar Staff\">Bar Staff</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Cloakroom\">Cloakroom</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Concierge\">Concierge</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Food and Beverage'\" value=\"Hostess\">Hostess</mat-option>\r\n\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Kitchen Porter\">Kitchen Porter</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Night Kitchen Porter\">Night Kitchen Porter</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Night Cleaners\">Night Cleaners</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Supervisor BOH (Back of House)\">Supervisor BOH (Back of House)</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Food Runners\">Food Runners</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Breakfast Runners\">Breakfast Runners</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Commis Chef\">Commis Chef</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Breakfast Chef\">Breakfast Chef</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Chef De Partie\">Chef De Partie</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Pastry Chef\">Pastry Chef</mat-option>\r\n          <mat-option *ngIf=\"selectedType == 'Back of House'\" value=\"Banqueting Porter\">Banqueting Porter</mat-option>\r\n      </mat-select> -->\r\n        <!-- <mat-icon [icIcon]=\"icEditLocation\" class=\"mr-3\" matPrefix></mat-icon> -->\r\n      <!-- </mat-form-field> -->\r\n    </div>\r\n    <div class=\"flex flex-col sm:flex-row\">\r\n      <mat-form-field class=\"flex-auto\">\r\n        <mat-label>Shift Date</mat-label>\r\n        <input type=\"date\" formControlName=\"shiftDate\" matInput [min]=\"minDate\">\r\n        <mat-icon [icIcon]=\"icMyLocation\" class=\"mr-3\" matPrefix></mat-icon>\r\n      </mat-form-field>\r\n      <!-- <mat-form-field class=\"sm:ml-4 flex-auto\">\r\n        <mat-label>Start Time</mat-label>\r\n        <input type=\"number\"formControlName=\"startTime\" matInput [(ngModel)]=\"minStart\" min=\"0\"max=\"23\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"sm:ml-4 flex-auto\">\r\n        <mat-label>End Time</mat-label>\r\n        <input  type=\"number\"formControlName=\"endTime\" matInput [min]=\"minStart + 1\" [value]=\"minStart + 1\" max=\"24\">\r\n      </mat-form-field> -->\r\n    </div>\r\n\r\n    <mat-form-field class=\"flex-auto\">\r\n      <mat-label>Location of Shift</mat-label>\r\n      <input formControlName=\"locationShift\" matInput>\r\n      <mat-icon [icIcon]=\"icLocationCity\" class=\"mr-3\" matPrefix></mat-icon>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"flex-auto\">\r\n      <mat-label>Purchase Order No(Optional)</mat-label>\r\n      <input formControlName=\"purchaseOrderNo\" matInput/>\r\n    </mat-form-field>\r\n  <mat-form-field class=\"flex-auto\">\r\n    <mat-label>Additional Information</mat-label>\r\n    <input formControlName=\"additionalInformation\" matInput>\r\n  </mat-form-field>\r\n</mat-dialog-content>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button mat-dialog-close type=\"button\">CANCEL</button>\r\n    <button *ngIf=\"isUpdateMode()\" color=\"primary\" mat-button (click)=\"openJobs()\" type=\"button\">Open Job</button>\r\n    <button *ngIf=\"isCreateMode()\" color=\"primary\" mat-button type=\"submit\">Create Job</button>\r\n    <button *ngIf=\"isUpdateMode()\" color=\"primary\" mat-button type=\"submit\">Save Changes</button>\r\n  </mat-dialog-actions>\r\n</form>\r\n\r\n<mat-menu #settingsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n  <button mat-menu-item>\r\n    <mat-icon [icIcon]=\"icPrint\"></mat-icon>\r\n    <span>Print</span>\r\n  </button>\r\n\r\n  <button mat-menu-item>\r\n    <mat-icon [icIcon]=\"icDownload\"></mat-icon>\r\n    <span>Export</span>\r\n  </button>\r\n\r\n  <button mat-menu-item>\r\n    <mat-icon [icIcon]=\"icDelete\"></mat-icon>\r\n    <span>Delete</span>\r\n  </button>\r\n</mat-menu>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Job } from '../interfaces/job.model';\r\nimport icMoreVert from '@iconify/icons-ic/twotone-more-vert';\r\nimport icClose from '@iconify/icons-ic/twotone-close';\r\nimport icPrint from '@iconify/icons-ic/twotone-print';\r\nimport icDownload from '@iconify/icons-ic/twotone-cloud-download';\r\nimport icDelete from '@iconify/icons-ic/twotone-delete';\r\nimport icPhone from '@iconify/icons-ic/twotone-phone';\r\nimport icPerson from '@iconify/icons-ic/twotone-person';\r\nimport icMyLocation from '@iconify/icons-ic/twotone-my-location';\r\nimport icLocationCity from '@iconify/icons-ic/twotone-location-city';\r\nimport icEditLocation from '@iconify/icons-ic/twotone-edit-location';\r\nimport { statusTableLabels } from 'src/static-data/status-table-data';\r\nimport { formatDate } from '@angular/common';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { CountryState } from 'src/app/client/settings/companydetails/companydetails.component';\r\nimport { Observable } from 'rxjs';\r\nimport { startWith, map } from 'rxjs/operators';\r\nimport icArrowDropDown from '@iconify/icons-ic/twotone-arrow-drop-down';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'vex-customer-create-update',\r\n  templateUrl: './customer-create-update.component.html',\r\n  styleUrls: ['./customer-create-update.component.scss']\r\n})\r\nexport class CustomerCreateUpdateComponent implements OnInit {\r\n\r\n  static id = 100;\r\n\r\n  form: FormGroup;\r\n  mode: 'create' | 'update' = 'create';\r\n  selectedType = 'Housekeeping';\r\n  icMoreVert = icMoreVert;\r\n  icClose = icClose;\r\n\r\n  icPrint = icPrint;\r\n  icDownload = icDownload;\r\n  icDelete = icDelete;\r\n\r\n  icPerson = icPerson;\r\n  icMyLocation = icMyLocation;\r\n  icLocationCity = icLocationCity;\r\n  icEditLocation = icEditLocation;\r\n  icPhone = icPhone;\r\n  minDate;\r\n  minStart = 0;\r\n  AllClients:any[];\r\n  selectedClient ='';\r\n\r\n  stateCtrl: FormControl;\r\n  filteredStates$: Observable<CountryState[]>;\r\n  states: CountryState[] = [\r\n    {\r\n      name: 'Arkansas',\r\n      population: '2.978M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Arkansas.svg\r\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Arkansas.svg'\r\n    },\r\n    {\r\n      name: 'California',\r\n      population: '39.14M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_California.svg\r\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_California.svg'\r\n    },\r\n    {\r\n      name: 'Florida',\r\n      population: '20.27M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Florida.svg\r\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Florida.svg'\r\n    },\r\n    {\r\n      name: 'Texas',\r\n      population: '27.47M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Texas.svg\r\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Texas.svg'\r\n    }\r\n  ];\r\n  icArrowDropDown = icArrowDropDown;\r\n  constructor(@Inject(MAT_DIALOG_DATA) public defaults: any,\r\n              private dialogRef: MatDialogRef<CustomerCreateUpdateComponent>,\r\n              private fb: FormBuilder,\r\n              private route:Router,\r\n              private authService:AuthService) {\r\n  }\r\n  filterStates(name: string) {\r\n    return this.states.filter(state =>\r\n      state.name.toLowerCase().indexOf(name.toLowerCase()) === 0);\r\n  }\r\n  async ngOnInit() {\r\n    console.log('customer create update')\r\n    console.log('1')\r\n    if(!this.authService.AllUser)\r\n      await this.authService.getAllUserAuth();\r\n      this.stateCtrl = new FormControl();\r\n      this.filteredStates$ = this.stateCtrl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(state => state ? this.filterStates(state) : this.states.slice())\r\n      );\r\n    console.log('2')\r\n    this.AllClients = this.authService.AllUser;\r\n    console.log('3')\r\n    this.AllClients = this.AllClients.filter((obj) => obj.accountType == 'Client');\r\n    console.log(this.AllClients)\r\n    // this.minDate = '2020-08-15';\r\n    this.minDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\r\n    console.log('1213123')\r\n    console.log(this.minDate)\r\n    // this.minDate = formatDate(new Date(), 'YYYY-MM-DD').toString();\r\n    if (this.defaults) {\r\n      this.mode = 'update';\r\n    } else {\r\n      this.defaults = {} as Job;\r\n    }\r\n\r\n    this.form = this.fb.group({\r\n      id: [CustomerCreateUpdateComponent.id++],\r\n      _id:[this.defaults._id || ''],\r\n      client: [this.defaults.client || ''],\r\n      department: [this.defaults.department || ''],\r\n      // role: [this.defaults.role || ''],\r\n      shiftDate: [this.defaults.shiftDate || new Date()],\r\n      startTime: [this.defaults.startTime || ''],\r\n      endTime: [this.defaults.endTime || ''],\r\n      locationShift: [this.defaults.locationShift || ''],\r\n      purchaseOrderNo: [this.defaults.purchaseOrderNo || ''],\r\n      additionalInformation:[this.defaults.additionalInformation || ''],\r\n      status:[this.defaults.status || statusTableLabels[2]],\r\n      stateCtrl:[this.stateCtrl.value || '']\r\n    });\r\n    this.selectedClient = this.defaults.client;\r\n  }\r\n\r\n  save() {\r\n    if (this.mode === 'create') {\r\n      this.createCustomer();\r\n    } else if (this.mode === 'update') {\r\n      this.updateCustomer();\r\n    }\r\n  }\r\n\r\n  createCustomer() {\r\n    const customer = this.form.value;\r\n    var tempUser = this.AllClients.filter(obj => {\r\n      var tempName = obj.firstName + ' ' + obj.lastName;\r\n      if(tempName == customer.client)\r\n        return obj;\r\n    });\r\n    customer['clientId']  = tempUser[0]._id;\r\n    // if (!customer.imageSrc) {\r\n    //   customer.imageSrc = 'assets/img/avatars/1.jpg';\r\n    // }\r\n\r\n    this.dialogRef.close(customer);\r\n  }\r\n\r\n  updateCustomer() {\r\n    const customer = this.form.value;\r\n    customer.id = this.defaults.id;\r\n    var tempUser = this.AllClients.filter(obj => {\r\n      var tempName = obj.firstName + ' ' + obj.lastName;\r\n      if(tempName == customer.client)\r\n        return obj;\r\n    });\r\n    customer['clientId']  = tempUser[0]._id;\r\n    this.dialogRef.close(customer);\r\n  }\r\n\r\n  isCreateMode() {\r\n    return this.mode === 'create';\r\n  }\r\n\r\n  isUpdateMode() {\r\n    return this.mode === 'update';\r\n  }\r\n  changeAccountType(ev){\r\n    this.selectedType = ev.value();\r\n  }\r\n  changeClient(ev){\r\n    this.selectedClient = ev.value();\r\n  }\r\n  openJobs(){\r\n    console.log('-----openjobs--------')\r\n    console.log(this.defaults.client)\r\n    console.log('------------------')\r\n    var event :any = this.defaults; \r\n    event['title'] = event.client\r\n    this.authService.currentScrumboard = [{\r\n      id:event.id, \r\n      title:event.client,\r\n      children:[\r\n        // { id:1, label:'Unassigned Shifts', children:[] },\r\n        // { id:2, label:'Assigned', children:[] },\r\n        { id:1, label:'In Progress', children:[] },\r\n        { id:2, label:'Submitted', children:[] },\r\n        { id:3, label:'Completed', children:[] },\r\n      ]\r\n    }];\r\n    this.authService.currentJob = event;\r\n    console.log('///////////////')\r\n    console.log(this.authService.currentJob)\r\n    console.log('///////////////')\r\n    var arrLabel = ['In Progress', 'Submitted','Completed'];\r\n    console.log('&&&&')\r\n    console.log(event)\r\n    console.log('&&&&')\r\n    arrLabel.forEach((ele,index) =>{\r\n      if(ele == event.statusStr)\r\n        this.authService.currentScrumboard[0].children[index].children.push({\r\n            id: event.id,\r\n            title:event.client,\r\n            client: event.client,\r\n            department: event.department,\r\n            role: event.role,\r\n            shiftDate: event.shiftDate,\r\n            startTime: event.startTime,\r\n            endTime: event.endTime,\r\n            locationShift:event.locationShift,\r\n            purchaseOrderNo: event.purchaseOrderNo,\r\n            additionalInformation:event.additionalInformation,\r\n            statusStr:event.statusStr,\r\n            fulfilled: event.fulfilled,\r\n            total:event.total,\r\n            totalStaff:event.totalStaff,\r\n            clientId:event.clientId,\r\n            timesheetId:event.timesheetId\r\n          });\r\n    })\r\n    this.authService.setCurrentScrumboardLocal(this.authService.currentScrumboard);\r\n    this.route.navigate(['/admin/jobs/scrumboard', event.id]);\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n"]}