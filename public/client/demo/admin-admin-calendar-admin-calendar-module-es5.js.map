{"version":3,"sources":["webpack:///src/app/admin/admin-calendar/admin-calendar-routing.module.ts","webpack:///src/app/admin/admin-calendar/admin-calendar.component.ts","webpack:///src/app/admin/admin-calendar/admin-calendar.component.html","webpack:///src/app/admin/admin-calendar/admin-calendar.module.ts","webpack:///src/app/admin/admin-calendar/calendar-edit/calendar-edit.component.ts","webpack:///src/app/admin/admin-calendar/calendar-edit/calendar-edit.component.html"],"names":["routes","path","component","data","toolbarShadowEnabled","scrollDisabled","AdminCalendarRoutingModule","forChild","imports","exports","$event","event","colors","blue","primary","secondary","yellow","red","AdminCalendarComponent","dialog","snackbar","router","authService","view","Month","CalendarView","viewDate","Date","icChevronLeft","icChevronRight","refresh","actions","label","onClick","handleEvent","events","filter","iEvent","activeDayIsOpen","getEventData","getAllJobsSync","subscribe","res","console","log","forEach","ele","col","statusStr","green","push","start","shiftDate","title","department","client","color","startTime","endTime","role","total","fulfilled","date","length","newStart","newEnd","map","end","action","dialogRef","open","afterClosed","result","next","draggable","resizable","beforeStart","afterEnd","eventToDelete","selector","templateUrl","styleUrls","encapsulation","None","AdminCalendarModule","forRoot","provide","useFactory","declarations","entryComponents","CalendarEditComponent","fb","route","form","group","patchValue","close","value","currentScrumboard","id","children","currentJob","arrLabel","index","locationShift","purchaseOrderNo","additionalInformation","totalStaff","clientId","timesheetId","setCurrentScrumboardLocal","navigate","goToJob"],"mappings":"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","file":"admin-admin-calendar-admin-calendar-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { VexRoutes } from '../../../@vex/interfaces/vex-route.interface';\nimport { AdminCalendarComponent } from './admin-calendar.component';\n\n\nconst routes: VexRoutes = [\n  {\n    path: '',\n    component: AdminCalendarComponent,\n    data: {\n      toolbarShadowEnabled: true,\n      scrollDisabled: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminCalendarRoutingModule {\n}\n","import { Component, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { CalendarEvent, CalendarEventAction, CalendarEventTimesChangedEvent, CalendarView } from 'angular-calendar';\nimport { addDays, addHours, endOfDay, endOfMonth, isSameDay, isSameMonth, startOfDay, subDays } from 'date-fns';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CalendarEditComponent } from './calendar-edit/calendar-edit.component';\nimport icChevronLeft from '@iconify/icons-ic/twotone-chevron-left';\nimport icChevronRight from '@iconify/icons-ic/twotone-chevron-right';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\nconst colors: any = {\n  blue: {\n    primary: '#5c77ff',\n    secondary: '#FFFFFF'\n  },\n  yellow: {\n    primary: '#ffc107',\n    secondary: '#FDF1BA'\n  },\n  red: {\n    primary: '#f44336',\n    secondary: '#FFFFFF'\n  }\n};\n\n@Component({\n  selector: 'vex-admin-calendar',\n  templateUrl: './admin-calendar.component.html',\n  styleUrls: ['./admin-calendar.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AdminCalendarComponent {\n\n  @ViewChild('modalContent', { static: true }) modalContent: TemplateRef<any>;\n\n  view: CalendarView = CalendarView.Month;\n\n  CalendarView = CalendarView;\n\n  viewDate: Date = new Date();\n  icChevronLeft = icChevronLeft;\n  icChevronRight = icChevronRight;\n\n  modalData: {\n    action: string;\n    event: CalendarEvent;\n  };\n  refresh: Subject<any> = new Subject();\n  actions: CalendarEventAction[] = [\n    {\n      label: '<i class=\"fa fa-fw fa-pencil\"></i>',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.handleEvent('Edited', event);\n      }\n    },\n    {\n      label: '<i class=\"fa fa-fw fa-times\"></i>',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.events = this.events.filter(iEvent => iEvent !== event);\n        this.handleEvent('Deleted', event);\n      }\n    }\n  ];\n  events: CalendarEvent[] ;\n  // = [\n  //   {\n  //     start: subDays(startOfDay(new Date()), 1),\n  //     end: addDays(new Date(), 1),\n  //     title: 'A 3 day event',\n  //     color: colors.primary,\n  //     actions: this.actions,\n  //     allDay: true,\n  //     resizable: {\n  //       beforeStart: true,\n  //       afterEnd: true\n  //     },\n  //     draggable: true\n  //   },\n  //   {\n  //     start: startOfDay(new Date()),\n  //     title: 'An event with no end date',\n  //     color: colors.yellow,\n  //     actions: this.actions\n  //   },\n  //   {\n  //     start: subDays(endOfMonth(new Date()), 3),\n  //     end: addDays(endOfMonth(new Date()), 3),\n  //     title: 'A long event that spans 2 months',\n  //     color: colors.primary,\n  //     allDay: true\n  //   },\n  //   {\n  //     start: addHours(startOfDay(new Date()), 2),\n  //     end: new Date(),\n  //     title: 'A draggable and resizable event',\n  //     color: colors.red,\n  //     actions: this.actions,\n  //     resizable: {\n  //       beforeStart: true,\n  //       afterEnd: true\n  //     },\n  //     draggable: true\n  //   }\n  // ];\n  activeDayIsOpen = true;\n\n  constructor(private dialog: MatDialog,\n              private snackbar: MatSnackBar,\n              private router: Router,\n              private authService:AuthService) {\n                this.getEventData();\n              }\n  getEventData(){\n    this.authService.getAllJobsSync().subscribe((res)=>{\n      console.log('res')\n      console.log(res)\n      this.events = [];\n      res.forEach((ele) =>{\n        var col:any;\n        console.log('eleeeeee')\n        if(ele.statusStr == 'In Progress')\n          col = colors.blue;\n        else if(ele.statusStr == 'Completed')\n          col = colors.green;\n        else if(ele.statusStr == 'Submitted')\n          col = colors.yellow;\n          if(ele.statusStr != 'Pending')\n        this.events.push({\n          start: startOfDay(new Date(ele.shiftDate)),\n          title: ele.department + ' ( client: ' + ele.client + ')',\n          color: col,\n          startTime: ele.startTime,\n          endTime: ele.endTime,\n          department:ele.department,\n          role:ele.role,\n          total: ele.total,\n          fulfilled:ele.fulfilled,\n          actions: this.actions,\n          client: ele\n        })\n      })\n      console.log('event')\n      console.log(this.events)\n      console.log('event')\n      console.log('event')\n      console.log('event')\n      console.log('event')\n      console.log('event')\n      console.log('event')\n      console.log(this.events)\n\n    })\n  }\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n    if (isSameMonth(date, this.viewDate)) {\n      this.activeDayIsOpen = !((isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) || events.length === 0);\n      this.viewDate = date;\n    }\n  }\n\n  eventTimesChanged({ event, newStart, newEnd }: CalendarEventTimesChangedEvent): void {\n    this.events = this.events.map(iEvent => {\n      if (iEvent === event) {\n        return {\n          ...event,\n          start: newStart,\n          end: newEnd\n        };\n      }\n      return iEvent;\n    });\n    this.handleEvent('Dropped or resized', event);\n  }\n\n  handleEvent(action: string, event: CalendarEvent): void {\n    console.log(event);\n    // if(action == 'Clicked')\n    // this.router.navigate(['/admin/jobs/scrumboard']);\n    const dialogRef = this.dialog.open(CalendarEditComponent, {\n      data: event\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      // if (result) {\n        // event = result;\n        // this.snackbar.open('Updated Event: ' + event.title);\n        this.refresh.next();\n      // }\n    });\n  }\n\n  addEvent(): void {\n    this.events = [\n      ...this.events,\n      {\n        title: 'New event',\n        start: startOfDay(new Date()),\n        end: endOfDay(new Date()),\n        color: colors.red,\n        draggable: true,\n        resizable: {\n          beforeStart: true,\n          afterEnd: true\n        }\n      }\n    ];\n  }\n\n  deleteEvent(eventToDelete: CalendarEvent) {\n    this.events = this.events.filter(event => event !== eventToDelete);\n  }\n\n  setView(view: CalendarView) {\n    this.view = view;\n  }\n\n  closeOpenMonthViewDay() {\n    this.activeDayIsOpen = false;\n  }\n}\n","<div class=\"h-full flex flex-col\">\n  <div class=\"calendar-bg relative text-contrast-white flex-none\">\n    <div class=\"bg-contrast-black opacity-25 absolute top-0 left-0 right-0 bottom-0 z-0 w-full h-full calendar-bg\" style=\"background-color: #5c77ff;opacity: 1;\"></div>\n    <div class=\"container py-4 px-6 h-40 z-10 relative flex items-end\">\n      <div class=\"flex-auto flex flex-col sm:flex-row justify-between items-center\">\n        <div class=\"headline\">{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</div>\n\n        <div class=\"actions flex flex-col sm:flex-row justify-end items-center\">\n          <div class=\"chevrons\">\n            <button [(viewDate)]=\"viewDate\" [view]=\"view\" mat-icon-button mwlCalendarPreviousView>\n              <mat-icon [icIcon]=\"icChevronLeft\"></mat-icon>\n            </button>\n            <button [(viewDate)]=\"viewDate\" [view]=\"view\" mat-icon-button mwlCalendarNextView>\n              <mat-icon [icIcon]=\"icChevronRight\"></mat-icon>\n            </button>\n          </div>\n          <div class=\"flex\">\n            <button (click)=\"view = CalendarView.Month\" mat-button>MONTH</button>\n            <!-- <button (click)=\"view = CalendarView.Week\" mat-button>WEEK</button>\n            <button (click)=\"view = CalendarView.Day\" mat-button>DAY</button> -->\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <vex-scrollbar [ngSwitch]=\"view\" class=\"px-0 shadow flex-auto relative\" vexContainer>\n    <mwl-calendar-month-view\n      (dayClicked)=\"dayClicked($event.day)\"\n      (eventClicked)=\"handleEvent('Clicked', $event.event)\"\n      (eventTimesChanged)=\"eventTimesChanged($event)\"\n      *ngSwitchCase=\"'month'\"\n      [activeDayIsOpen]=\"activeDayIsOpen\"\n      [events]=\"events\"\n      [refresh]=\"refresh\"\n      [viewDate]=\"viewDate\">\n    </mwl-calendar-month-view>\n    <mwl-calendar-week-view\n      (eventClicked)=\"handleEvent('Clicked', $event.event)\"\n      (eventTimesChanged)=\"eventTimesChanged($event)\"\n      *ngSwitchCase=\"'week'\"\n      [events]=\"events\"\n      [refresh]=\"refresh\"\n      [viewDate]=\"viewDate\">\n    </mwl-calendar-week-view>\n    <mwl-calendar-day-view\n      (eventClicked)=\"handleEvent('Clicked', $event.event)\"\n      (eventTimesChanged)=\"eventTimesChanged($event)\"\n      *ngSwitchCase=\"'day'\"\n      [events]=\"events\"\n      [refresh]=\"refresh\"\n      [viewDate]=\"viewDate\">\n    </mwl-calendar-day-view>\n  </vex-scrollbar>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AdminCalendarRoutingModule } from './admin-calendar-routing.module';\nimport { AdminCalendarComponent } from './admin-calendar.component';\nimport { CalendarModule as AngularCalendarModule, DateAdapter } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { CalendarEditComponent } from './calendar-edit/calendar-edit.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ScrollbarModule } from '../../../@vex/components/scrollbar/scrollbar.module';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PageLayoutModule } from '../../../@vex/components/page-layout/page-layout.module';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { ContainerModule } from '../../../@vex/directives/container/container.module';\n\n\n@NgModule({\n  declarations: [AdminCalendarComponent, CalendarEditComponent],\n  imports: [\n    CommonModule,\n    AdminCalendarRoutingModule,\n    AngularCalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory\n    }),\n    MatDialogModule,\n    MatButtonModule,\n    MatIconModule,\n    ScrollbarModule,\n    MatSnackBarModule,\n    MatInputModule,\n    MatDatepickerModule,\n    ReactiveFormsModule,\n    PageLayoutModule,\n    MatNativeDateModule,\n    IconModule,\n    ContainerModule\n  ],\n  entryComponents: [CalendarEditComponent]\n})\nexport class AdminCalendarModule {\n}\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { CalendarEvent } from 'angular-calendar';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'vex-calendar-edit',\r\n  templateUrl: './calendar-edit.component.html',\r\n  styleUrls: ['./calendar-edit.component.scss']\r\n})\r\nexport class CalendarEditComponent implements OnInit {\r\n\r\n  form = this.fb.group({\r\n    startTime:null,\r\n    endTime:null,\r\n    department:null,\r\n    role:null,\r\n    title:null\r\n  });\r\n\r\n  constructor(private dialogRef: MatDialogRef<CalendarEditComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public event: CalendarEvent<any>,\r\n              private fb: FormBuilder,\r\n              private route:Router,\r\n              private authService:AuthService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form.patchValue(this.event);\r\n  }\r\n\r\n  save() {\r\n    this.dialogRef.close({\r\n      ...this.event,\r\n      ...this.form.value\r\n    });\r\n  }\r\n  goToJob(){\r\n    this.authService.currentScrumboard = [{\r\n      id:this.event.client.id, \r\n      title: this.event.client.client,\r\n      children:[\r\n        // { id:1, label:'Unassigned Shifts', children:[] },\r\n        // { id:2, label:'Assigned', children:[] },\r\n        { id:1, label:'In Progress', children:[] },\r\n        { id:2, label:'Submitted', children:[] },\r\n        { id:3, label:'Completed', children:[] },\r\n      ]\r\n    }];\r\n    this.authService.currentJob = this.event;\r\n    var arrLabel = ['In Progress', 'Submitted','Completed'];\r\n    console.log('&&&&')\r\n    console.log(this.event.client)\r\n    console.log('&&&&')\r\n    arrLabel.forEach((ele,index) =>{\r\n      if(ele == this.event.client.statusStr)\r\n        this.authService.currentScrumboard[0].children[index].children.push({\r\n            id: this.event.client.id,\r\n            title:this.event.client.client,\r\n            client: this.event.client.client,\r\n            department: this.event.client.department,\r\n            role: this.event.client.role,\r\n            shiftDate: this.event.client.shiftDate,\r\n            startTime: this.event.client.startTime,\r\n            endTime: this.event.client.endTime,\r\n            locationShift:this.event.client.locationShift,\r\n            purchaseOrderNo: this.event.client.purchaseOrderNo,\r\n            additionalInformation:this.event.client.additionalInformation,\r\n            statusStr:this.event.client.statusStr,\r\n            fulfilled: this.event.client.fulfilled,\r\n            total:this.event.client.total,\r\n            totalStaff:this.event.client.totalStaff,\r\n            clientId:this.event.client.clientId,\r\n            timesheetId:this.event.client.timesheetId\r\n          });\r\n    })\r\n    this.authService.setCurrentScrumboardLocal(this.authService.currentScrumboard);\r\n    this.route.navigate(['/admin/jobs/scrumboard', this.event.client.id]);\r\n    this.dialogRef.close({\r\n      ...this.event,\r\n      ...this.form.value\r\n    });\r\n  }\r\n}\r\n","<h3 matDialogTitle>\r\n  {{ event.title }}\r\n</h3>\r\n\r\n<mat-dialog-content>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"flex flex-col\">\r\n      <mat-form-field>\r\n        <mat-label>Title</mat-label>\r\n        <input formControlName=\"title\" matInput readonly>\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <mat-label>Department</mat-label>\r\n        <input formControlName=\"department\" matInput readonly>\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <mat-label>Role</mat-label>\r\n        <input formControlName=\"role\" matInput readonly>\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <mat-label>Start Time</mat-label>\r\n        <input formControlName=\"startTime\" matInput readonly>\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <mat-label>End Time</mat-label>\r\n        <input formControlName=\"endTime\" matInput readonly>\r\n      </mat-form-field>\r\n      <!-- <mat-form-field>\r\n        <mat-label>Start Date</mat-label>\r\n        <input [matDatepicker]=\"startDatepicker\" formControlName=\"start\" matInput>\r\n        <mat-datepicker-toggle [for]=\"startDatepicker\" matSuffix></mat-datepicker-toggle>\r\n        <mat-datepicker #startDatepicker></mat-datepicker>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <mat-label>End Date</mat-label>\r\n        <input [matDatepicker]=\"endDatepicker\" formControlName=\"end\" matInput>\r\n        <mat-datepicker-toggle [for]=\"endDatepicker\" matSuffix></mat-datepicker-toggle>\r\n        <mat-datepicker #endDatepicker></mat-datepicker>\r\n      </mat-form-field> -->\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"flex justify-center\">\r\n  <!-- <button mat-button mat-dialog-close>CANCEL</button> -->\r\n  <button (click)=\"goToJob()\" class=\"save\" color=\"primary\" mat-raised-button>Go to Job</button>\r\n</mat-dialog-actions>\r\n"]}